package chatapp.view;

import java.awt.BorderLayout;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import chatroom.view.ChatroomView;
import chatroom.view.IChatroomModelAdapter;
import common.User;

import javax.swing.JTextArea;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;

public class ChatAppView extends JFrame {
    
    private IChatAppModelAdapter modelAdapter;

    /**
     * The generate serial version uid
     */
    private static final long serialVersionUID = -1259336758548704871L;
    
    private JPanel contentPane;
    private final JPanel panel = new JPanel();
    private final JTextArea textArea = new JTextArea();
    private final JLabel lblIp = new JLabel("IP Address:");
    private final JTextField txtIp = new JTextField();
    private final JButton btnConnect = new JButton("Connect");
    private final JLabel lblUsers = new JLabel("Users:");
    private final JComboBox<User> cbxUsers = new JComboBox<>();
    private final JButton btnInvite = new JButton("Invite");

    /**
     * Create the frame.
     */
    public ChatAppView(IChatAppModelAdapter modelAdapter) {
        txtIp.setColumns(10);
        initGui();
        this.modelAdapter = modelAdapter;
    }
    
    private void initGui() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 900, 600);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        contentPane.setLayout(new BorderLayout(0, 0));
        setContentPane(contentPane);
        
        contentPane.add(panel, BorderLayout.NORTH);
        
        panel.add(lblIp);
        
        panel.add(txtIp);
        btnConnect.addActionListener(e -> {
            String ip = txtIp.getText().trim();
            if (!ip.isEmpty()) {
                modelAdapter.connectTo(ip);
            }
        });
        
        panel.add(btnConnect);
        
        panel.add(lblUsers);
        
        panel.add(cbxUsers);
        
        panel.add(btnInvite);
        
        contentPane.add(textArea, BorderLayout.CENTER);
    }
    
    public void start() {
        String username = JOptionPane.showInputDialog("Please input your username:");
        if (username.trim().isEmpty()) {
            username = "COMP 504 user";
        }
        
        setVisible(true);
        modelAdapter.initUsername(username);
    }
    
    public void append(String str) {
        textArea.append(str);
        textArea.setCaretPosition(textArea.getText().length());
    }
    
    public String getChatroomName() {
        String chatroomName = null;
        do {
            chatroomName = JOptionPane.showInputDialog("Please input new chatroom's name:");
            chatroomName = chatroomName.trim();
        } while (chatroomName.isEmpty());
        
        return chatroomName;
    }
    
    public ChatroomView makeChatroomView(IChatroomModelAdapter chatroomModelAdapter) {
        return new ChatroomView(chatroomModelAdapter);
    }
}