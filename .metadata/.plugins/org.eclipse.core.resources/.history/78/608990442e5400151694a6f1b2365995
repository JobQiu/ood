package model.ball;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Point;
import java.util.Observable;
import java.util.Observer;

public abstract class ABall implements Observer {

    protected Point location;
    
    protected int radius;
    
    protected Point velocity;
    
    protected Color color;
    
    protected Component canvas;
    
    public ABall(Point startLoc, int startRadius, Point startVel, Color color, Component canvas) {
        location = startLoc;
        radius = startRadius;
        velocity = startVel;
        this.color = color;
        this.canvas = canvas;
    }
    
    @Override
    public void update(Observable o, Object arg) {
        move();
        bounce();
        paint((Graphics)arg);
    }
    
    protected abstract void move();
    
    protected abstract void bounce();
    
    protected abstract void paint(Graphics g);
}