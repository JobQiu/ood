<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_60) on Thu Sep 24 20:58:50 CDT 2015 -->
<title>BallWorldModel</title>
<meta name="date" content="2015-09-24">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="BallWorldModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallWorldModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Ball.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/Dispatcher.html" title="class in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallWorldModel.html" target="_top">Frames</a></li>
<li><a href="BallWorldModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class BallWorldModel" class="title">Class BallWorldModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.BallWorldModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">BallWorldModel</span>
extends java.lang.Object</pre>
<div class="block">The model that represents the balls and their associated control systems. 
 The balls are held by a Dispatcher which is used for all communications to the balls.
 Uses a Timer object to update the model and the view at a regular time slice. 
 This will give the effect of animation</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>caojian</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#BallWorldModel-model.IViewCtrlAdapter-model.IViewUpdateAdapter-">BallWorldModel</a></span>(<a href="../model/IViewCtrlAdapter.html" title="interface in model">IViewCtrlAdapter</a>&nbsp;viewCtrlAdapter,
              <a href="../model/IViewUpdateAdapter.html" title="interface in model">IViewUpdateAdapter</a>&nbsp;viewUpdateAdapter)</code>
<div class="block">constractor</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#combineStrategyFacs-model.IUpdateStrategyFac-model.IUpdateStrategyFac-">combineStrategyFacs</a></span>(<a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;stratFac1,
                   <a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;stratFac2)</code>
<div class="block">Returns an IStrategyFac that can instantiate a MultiStrategy with the two
 strategies made by the two given IStrategyFac objects.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#deleteSprites--">deleteSprites</a></span>()</code>
<div class="block">delete all balls</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="../model/IPaintStrategyFac.html" title="interface in model">IPaintStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#makePaintStrategyFac-java.lang.String-">makePaintStrategyFac</a></span>(java.lang.String&nbsp;classname)</code>&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeSprite-java.lang.Object-java.lang.Object-">makeSprite</a></span>(java.lang.Object&nbsp;tDropListItem1,
          java.lang.Object&nbsp;tDropListItem2)</code>
<div class="block">make a ball with given strategy</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeStrategyFac-java.lang.String-">makeStrategyFac</a></span>(java.lang.String&nbsp;classname)</code>
<div class="block">Returns an IStrategyFac that can instantiate the strategy specified by
 classname.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeSwitcher--">makeSwitcher</a></span>()</code>
<div class="block">make a switcher</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#start--">start</a></span>()</code>
<div class="block">start the timer</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#switchStrategy-java.lang.Object-">switchStrategy</a></span>(java.lang.Object&nbsp;tDropListItem)</code>
<div class="block">change the strategy of the switcher</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#update-java.awt.Graphics-">update</a></span>(java.awt.Graphics&nbsp;g)</code>
<div class="block">update all balls</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BallWorldModel-model.IViewCtrlAdapter-model.IViewUpdateAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BallWorldModel</h4>
<pre>public&nbsp;BallWorldModel(<a href="../model/IViewCtrlAdapter.html" title="interface in model">IViewCtrlAdapter</a>&nbsp;viewCtrlAdapter,
                      <a href="../model/IViewUpdateAdapter.html" title="interface in model">IViewUpdateAdapter</a>&nbsp;viewUpdateAdapter)</pre>
<div class="block">constractor</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="makeStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeStrategyFac</h4>
<pre>public&nbsp;<a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;makeStrategyFac(java.lang.String&nbsp;classname)</pre>
<div class="block">Returns an IStrategyFac that can instantiate the strategy specified by
 classname. Returns a factory for a beeping error strategy if classname is null. 
 The toString() of the returned factory is the classname.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - Shortened name of desired strategy</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A factory to make that strategy</dd>
</dl>
</li>
</ul>
<a name="combineStrategyFacs-model.IUpdateStrategyFac-model.IUpdateStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineStrategyFacs</h4>
<pre>public&nbsp;<a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;combineStrategyFacs(<a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;stratFac1,
                                              <a href="../model/IUpdateStrategyFac.html" title="interface in model">IUpdateStrategyFac</a>&nbsp;stratFac2)</pre>
<div class="block">Returns an IStrategyFac that can instantiate a MultiStrategy with the two
 strategies made by the two given IStrategyFac objects. Returns null if
 either supplied factory is null. The toString() of the returned factory
 is the toString()'s of the two given factories, concatenated with "-". 
 If either factory is null, then a factory for a beeping error strategy is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stratFac1</code> - An IStrategyFac for a strategy</dd>
<dd><code>stratFac2</code> - An IStrategyFac for a strategy</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An IStrategyFac for the composition of the two strategies</dd>
</dl>
</li>
</ul>
<a name="switchStrategy-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchStrategy</h4>
<pre>public&nbsp;void&nbsp;switchStrategy(java.lang.Object&nbsp;tDropListItem)</pre>
<div class="block">change the strategy of the switcher</div>
</li>
</ul>
<a name="makePaintStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makePaintStrategyFac</h4>
<pre>public&nbsp;<a href="../model/IPaintStrategyFac.html" title="interface in model">IPaintStrategyFac</a>&nbsp;makePaintStrategyFac(java.lang.String&nbsp;classname)</pre>
</li>
</ul>
<a name="makeSprite-java.lang.Object-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeSprite</h4>
<pre>public&nbsp;void&nbsp;makeSprite(java.lang.Object&nbsp;tDropListItem1,
                       java.lang.Object&nbsp;tDropListItem2)</pre>
<div class="block">make a ball with given strategy</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tDropListItem</code> - strategy factory</dd>
</dl>
</li>
</ul>
<a name="makeSwitcher--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeSwitcher</h4>
<pre>public&nbsp;void&nbsp;makeSwitcher()</pre>
<div class="block">make a switcher</div>
</li>
</ul>
<a name="deleteSprites--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deleteSprites</h4>
<pre>public&nbsp;void&nbsp;deleteSprites()</pre>
<div class="block">delete all balls</div>
</li>
</ul>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">start the timer</div>
</li>
</ul>
<a name="update-java.awt.Graphics-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(java.awt.Graphics&nbsp;g)</pre>
<div class="block">update all balls</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallWorldModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Ball.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/Dispatcher.html" title="class in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallWorldModel.html" target="_top">Frames</a></li>
<li><a href="BallWorldModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
