<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Ak_6MGs2EeW5VufirDXdmA" name="HW05">
    <eAnnotations xmi:id="_AuqMgGs2EeW5VufirDXdmA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_AuqMgWs2EeW5VufirDXdmA" source="codegen">
        <details xmi:id="_AuqMgms2EeW5VufirDXdmA" key="codegenDirectory" value="/HW05/src"/>
        <details xmi:id="_BpHCkGs2EeW5VufirDXdmA" key="AssociatedSourceCode" value="/HW05/src/model/IBallCmd.java;476656919/1;/HW05/src/model/IInteractStrategy.java;3950066870/1;/HW05/src/model/IUpdateStrategy.java;52408464/1;/HW05/src/model/IUpdateStrategyFac.java;856759712/1;/HW05/src/model/strategy/AUpdateStrategy.java;1690540499/1;/HW05/src/model/strategy/BreathingStrategy.java;3844276537/1;/HW05/src/model/strategy/Change1Strategy.java;553423661/1;/HW05/src/model/strategy/CollideStrategy.java;2946125683/1;/HW05/src/model/strategy/ColorChangingStrategy.java;286307161/1;/HW05/src/model/strategy/DrunkenStrategy.java;3441353097/1;/HW05/src/model/strategy/FatStrategy.java;3866232210/1;/HW05/src/model/strategy/FlashStrategy.java;1011769045/1;/HW05/src/model/strategy/MultiStrategy.java;4163327557/1;/HW05/src/model/strategy/SpawnStrategy.java;2447472570/1;/HW05/src/model/strategy/StraightStrategy.java;915555050/1;/HW05/src/model/strategy/SwallowStrategy.java;1805544852/1;/HW05/src/model/strategy/SwitcherStrategy.java;3810843242/1;/HW05/src/model/strategy/WanderingStrategy.java;3850482390/1;/HW05/src/model/Ball.java;4114273468/0;/HW05/src/model/paint/shape/BallShapeFactory.java;4107874108/1;/HW05/src/model/paint/shape/EllipseShapeFactory.java;774796480/1;/HW05/src/model/paint/shape/Fish1PolygonFactory.java;3904308377/1;/HW05/src/model/paint/shape/IShapeFactory.java;1140839661/1;/HW05/src/model/paint/shape/PolygonFactory.java;2099919922/1;/HW05/src/model/paint/shape/RectangleShapeFactory.java;3818744413/1;/HW05/src/model/paint/strategy/BallPaintStrategy.java;18651848/1;/HW05/src/model/paint/strategy/EllipsePaintStrategy.java;507016491/1;/HW05/src/model/paint/strategy/Fish1PaintStrategy.java;2524570823/1;/HW05/src/model/paint/strategy/NiceFishPaintStrategy.java;4287473220/1;/HW05/src/model/paint/strategy/RectanglePaintStrategy.java;3960082002/1;/HW05/src/model/paint/strategy/SheepImagePaintStrategy.java;312405351/1;/HW05/src/model/paint/strategy/SoccerImagePaintStrategy.java;1602972791/1;/HW05/src/model/paint/strategy/SonicImagePaintStrategy.java;2725713016/1;/HW05/src/model/paint/strategy/SquarePaintStrategy.java;2673345291/1;/HW05/src/controller/BallWorldController.java;3420620976/1;/HW05/src/model/BallWorldModel.java;3363112237/1;/HW05/src/util/ACollectionDispatcher.java;2022218564/1;/HW05/src/util/ASetDispatcher.java;3039222910/1;/HW05/src/util/IDispatcher.java;2405909235/1;/HW05/src/util/IObserver.java;641056066/1;/HW05/src/util/SetDispatcherSequential.java;1733945518/1;/HW05/src/view/BallWorldGUI.java;1339543488/1;/HW05/src/view/IModelCtrlAdapter.java;807185417/1;/HW05/src/view/IModelUpdateAdapter.java;528450364/1;/HW05/src/model/IViewCtrlAdapter.java;2735183359/1;/HW05/src/model/IViewUpdateAdapter.java;2213415481/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_BCg8oGs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_BCg8oWs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_BChjsGs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_BChjsWs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_BChjsms2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_BChjs2s2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_BChjtGs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_BChjtWs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_BCiKwGs2EeW5VufirDXdmA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_BCjY4Gs2EeW5VufirDXdmA" name="util">
      <packagedElement xmi:type="uml:Interface" xmi:id="_BGzmwGs2EeW5VufirDXdmA" name="IDispatcher">
        <ownedComment xmi:id="_WlCC5Gs2EeW5VufirDXdmA">
          <body>An dispatcher of messages of type TDispMsg to its registered IObserver objects.  &#xD;
The dispatcher is an Observable in the Observer-Observable design pattern&#xD;
though with the difference of always immediately dispatching to the &#xD;
observers when a message is received.&#xD;
&#xD;
@author Jian Cao &#xD;
 *&#xD;
@param &lt;TDispMsg> The type of messages being dispatched</body>
        </ownedComment>
        <ownedOperation xmi:id="_WkWGYGs2EeW5VufirDXdmA" name="deleteObservers">
          <ownedComment xmi:id="_WlCC6Gs2EeW5VufirDXdmA">
            <body>Deregister all observers from this dispatcher.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Wk2csGs2EeW5VufirDXdmA" name="addObserver">
          <ownedComment xmi:id="_WlCC5ms2EeW5VufirDXdmA">
            <body>Register the given observer in the dispatcher&#xD;
	 * @param obs  The observer to register</body>
          </ownedComment>
          <ownedParameter xmi:id="_Wk2csWs2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Wk3DwWs2EeW5VufirDXdmA" name="deleteObserver">
          <ownedComment xmi:id="_WlCC52s2EeW5VufirDXdmA">
            <body>Deregister the given observer from this dispatcher. &#xD;
	 * @param obs  The observer to deregister</body>
          </ownedComment>
          <ownedParameter xmi:id="_Wk3Dwms2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Wk3q0Ws2EeW5VufirDXdmA" name="hasObserver">
          <ownedParameter xmi:id="_Wk4R4Gs2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Wk4R4Ws2EeW5VufirDXdmA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Wk8jUWs2EeW5VufirDXdmA" name="dispatch">
          <ownedComment xmi:id="_WlCC5Ws2EeW5VufirDXdmA">
            <body>Dispatch the given message to all the registered Observers&#xD;
	 * @param msg  The message to pass to all the observers</body>
          </ownedComment>
          <ownedParameter xmi:id="_Wk8jUms2EeW5VufirDXdmA" name="msg" type="_Wk78QGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BHAbEGs2EeW5VufirDXdmA" name="Randomizer"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_TlXMwWs2EeW5VufirDXdmA" name="SetDispatcherSequential">
        <ownedComment xmi:id="_WlCC6ms2EeW5VufirDXdmA">
          <body>A CopyOnWriteArraySet-based IDispatcher that dispatches to its IObservers sequentially.&#xD;
&#xD;
@author caojian&#xD;
 *&#xD;
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <generalization xmi:id="_Wk5gAGs2EeW5VufirDXdmA" general="_WkTqIGs2EeW5VufirDXdmA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlBb2Gs2EeW5VufirDXdmA" name="dispatch" specification="_Wk-YgGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlBb2Ws2EeW5VufirDXdmA" name="msg" type="_Wk78QGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>getCollection().forEach(o -> {&#xD;
			o.update(this, msg);&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Wk-YgGs2EeW5VufirDXdmA" name="dispatch" method="_WlBb2Gs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Wk-YgWs2EeW5VufirDXdmA" name="msg" type="_Wk78QGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WkM8cGs2EeW5VufirDXdmA" name="ACollectionDispatcher" isAbstract="true">
        <ownedComment xmi:id="_WlCC4Gs2EeW5VufirDXdmA">
          <body>An abstract Collection-based IDispatcher.&#xD;
@author Jian Cao&#xD;
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Wk_moGs2EeW5VufirDXdmA" name="observers" visibility="private" isLeaf="true" type="_WkWtcGs2EeW5VufirDXdmA" isReadOnly="true" association="_WlDRAGs2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_Wk_moms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Wk_mo2s2EeW5VufirDXdmA" key="generic_container"/>
          </eAnnotations>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wk_moWs2EeW5VufirDXdmA" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_WkvvAWs2EeW5VufirDXdmA" client="_WkM8cGs2EeW5VufirDXdmA" supplier="_BGzmwGs2EeW5VufirDXdmA" contract="_BGzmwGs2EeW5VufirDXdmA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlA0wGs2EeW5VufirDXdmA" name="ACollectionDispatcher" specification="_Wk6uIGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlA0wWs2EeW5VufirDXdmA" name="observers" type="_WkvH8Gs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_WlA0wms2EeW5VufirDXdmA" type="_WkM8cGs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>this.observers = observers;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlA0w2s2EeW5VufirDXdmA" name="getCollection" specification="_WkOKkGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlA0xGs2EeW5VufirDXdmA" type="_WkWtcGs2EeW5VufirDXdmA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlA0xWs2EeW5VufirDXdmA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return observers;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlA0xms2EeW5VufirDXdmA" name="addObserver" specification="_Wkw9IGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlA0x2s2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>observers.add(obs);	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlBb0Gs2EeW5VufirDXdmA" name="deleteObserver" specification="_WkyLQms2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlBb0Ws2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>observers.remove(obs);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlBb0ms2EeW5VufirDXdmA" name="deleteObservers" specification="_WkRN4Gs2EeW5VufirDXdmA">
          <language>java</language>
          <body>observers.clear();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlBb02s2EeW5VufirDXdmA" name="hasObserver" specification="_WkzZYms2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlBb1Gs2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_WlBb1Ws2EeW5VufirDXdmA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return observers.contains(obs);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_WkOKkGs2EeW5VufirDXdmA" name="getCollection" visibility="protected" method="_WlA0w2s2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_WkOKk2s2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WkOKlGs2EeW5VufirDXdmA" key="generic_container"/>
          </eAnnotations>
          <ownedComment xmi:id="_WlCC4ms2EeW5VufirDXdmA">
            <body>Accessor method for the internal Collection for use by implementing subclasses.&#xD;
	 * @return The internal Collection of IObservers</body>
          </ownedComment>
          <ownedParameter xmi:id="_WkOKkWs2EeW5VufirDXdmA" type="_WkWtcGs2EeW5VufirDXdmA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WkOKkms2EeW5VufirDXdmA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WkRN4Gs2EeW5VufirDXdmA" name="deleteObservers" method="_WlBb0ms2EeW5VufirDXdmA"/>
        <ownedOperation xmi:id="_Wkw9IGs2EeW5VufirDXdmA" name="addObserver" method="_WlA0xms2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Wkw9IWs2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WkyLQms2EeW5VufirDXdmA" name="deleteObserver" method="_WlBb0Gs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WkyLQ2s2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WkzZYms2EeW5VufirDXdmA" name="hasObserver" method="_WlBb02s2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WkzZY2s2EeW5VufirDXdmA" name="obs" type="_WkWtcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Wk0AcGs2EeW5VufirDXdmA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Wk6uIGs2EeW5VufirDXdmA" name="ACollectionDispatcher" method="_WlA0wGs2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_Wk6uIms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Wk6uI2s2EeW5VufirDXdmA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_WlCC4Ws2EeW5VufirDXdmA">
            <body>Constructor for the class.   The Collection that is used needs to be supplied, &#xD;
	 * generally by the implementing subclass.   This allows for different types of &#xD;
	 * Collections to be used for different purposes.  It is highly recommended that the &#xD;
	 * supplied Collection be completely thread-safe to enable the use of &#xD;
	 * multiple dispatching threads.&#xD;
	 * @param observers  The Collection of IObserver to use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Wk6uIWs2EeW5VufirDXdmA" name="observers" type="_WkvH8Gs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Wk6uJGs2EeW5VufirDXdmA" type="_WkM8cGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WkTqIGs2EeW5VufirDXdmA" name="ASetDispatcher" isAbstract="true">
        <ownedComment xmi:id="_WlCC42s2EeW5VufirDXdmA">
          <body>A Collection-based Dispatcher that uses a CopyOnWriteArraySet.&#xD;
&#xD;
@author caojian&#xD;
 *&#xD;
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <generalization xmi:id="_Wk1Okms2EeW5VufirDXdmA" general="_WkM8cGs2EeW5VufirDXdmA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlBb1ms2EeW5VufirDXdmA" name="ASetDispatcher" specification="_WkURMWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_WlBb12s2EeW5VufirDXdmA" type="_WkTqIGs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>super(new CopyOnWriteArraySet&lt;>()); // Type of CopyOnWriteArraySet is inferred by compiler&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_WkURMWs2EeW5VufirDXdmA" name="ASetDispatcher" method="_WlBb1ms2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_WkURMms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WkURM2s2EeW5VufirDXdmA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WkURNGs2EeW5VufirDXdmA" type="_WkTqIGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_WkWtcGs2EeW5VufirDXdmA" name="IObserver">
        <ownedComment xmi:id="_WlCC6Ws2EeW5VufirDXdmA">
          <body>An observer for IDispatcher. When registered with a dispatcher,&#xD;
an observer will receive the TDispMsg-type message that the dispatcher is sends &#xD;
to its registered observers.&#xD;
&#xD;
@author Jian Cao&#xD;
 *&#xD;
@param &lt;TDispMsg> The type of message that this observer can process</body>
        </ownedComment>
        <ownedOperation xmi:id="_Wk9KYGs2EeW5VufirDXdmA" name="update">
          <ownedParameter xmi:id="_Wk9KYWs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Wk9KYms2EeW5VufirDXdmA" name="msg" type="_Wk78QGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Wk78QGs2EeW5VufirDXdmA" name="TDispMsg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WlDRAGs2EeW5VufirDXdmA" name="" memberEnd="_WlDRAWs2EeW5VufirDXdmA _Wk_moGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_WlDRAWs2EeW5VufirDXdmA" name="" type="_WkM8cGs2EeW5VufirDXdmA" association="_WlDRAGs2EeW5VufirDXdmA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BCknAGs2EeW5VufirDXdmA" name="model">
      <packagedElement xmi:type="uml:Interface" xmi:id="_BDdX0Gs2EeW5VufirDXdmA" name="IBallCmd" isAbstract="true">
        <ownedOperation xmi:id="_BHmQ8Gs2EeW5VufirDXdmA" name="apply" isAbstract="true">
          <ownedParameter xmi:id="_BHmQ8Ws2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_BHmQ8ms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BCr7wGs2EeW5VufirDXdmA" name="strategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_BDqzMGs2EeW5VufirDXdmA" name="AUpdateStrategy" isAbstract="true">
          <ownedComment xmi:id="_BI4qZGs2EeW5VufirDXdmA">
            <body>The abstract update strategy&#xD;
@author caojian</body>
          </ownedComment>
          <interfaceRealization xmi:id="_BG8wsWs2EeW5VufirDXdmA" client="_BDqzMGs2EeW5VufirDXdmA" supplier="_BDhpQGs2EeW5VufirDXdmA" contract="_BDhpQGs2EeW5VufirDXdmA"/>
          <ownedOperation xmi:id="_BHqiYGs2EeW5VufirDXdmA" name="updateState" isAbstract="true">
            <ownedParameter xmi:id="_BHqiYWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BHqiYms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BHrJcWs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BHrJcms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BDudkGs2EeW5VufirDXdmA" name="BreathingStrategy">
          <ownedComment xmi:id="_BI4qZWs2EeW5VufirDXdmA">
            <body>this strategy changes the diameter of a ball&#xD;
@author ls53@rice.edu&#xD;
 *&#xD;
@param &lt;TDispMsg> The generic message type</body>
          </ownedComment>
          <generalization xmi:id="_BG_M8Gs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIjTMGs2EeW5VufirDXdmA" name="incrementD" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIjTMWs2EeW5VufirDXdmA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIxVoGs2EeW5VufirDXdmA" name="updateState" specification="_BHuMwGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIxVoWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIxVoms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>Point size = context.getDimension();&#xD;
		&#xD;
		size.x += incrementD;&#xD;
		size.y += incrementD;&#xD;
		&#xD;
		if (size.x > 25) {&#xD;
			incrementD = -incrementD;&#xD;
		} else if (size.x &lt; 5) {&#xD;
			incrementD = -incrementD;&#xD;
		}&#xD;
		&#xD;
		/** set the ball diameter to new value */&#xD;
		context.setDimension(size.x, size.y);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BHs-oGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BHs-oWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BHuMwGs2EeW5VufirDXdmA" name="updateState" method="_BIxVoGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BHuMwWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BHuMwms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BDw50Gs2EeW5VufirDXdmA" name="Change1Strategy">
          <ownedComment xmi:id="_BI5RcGs2EeW5VufirDXdmA">
            <body>a ball that changes from colorStrategy to breathingStrategy after 4seconds</body>
          </ownedComment>
          <generalization xmi:id="_BHBpMGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIj6QWs2EeW5VufirDXdmA" name="i" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIkhUGs2EeW5VufirDXdmA" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BIkhUms2EeW5VufirDXdmA" name="incrementD" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIkhU2s2EeW5VufirDXdmA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIx8sGs2EeW5VufirDXdmA" name="updateState" specification="_BHwpAms2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIx8sWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIx8sms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>Randomizer rd = Randomizer.Singleton;&#xD;
		&#xD;
		if(i &lt;= 80){ &#xD;
			/** set color */&#xD;
			context.setColor(rd.randomColor());&#xD;
		}&#xD;
		else{&#xD;
			Point dimension = context.getDimension();&#xD;
			&#xD;
			dimension.x += incrementD;&#xD;
			dimension.y += incrementD;&#xD;
			&#xD;
			if (dimension.x > 15) {&#xD;
				incrementD = -incrementD;&#xD;
			} else if (dimension.x &lt; 5) {&#xD;
				incrementD = -incrementD;&#xD;
			}&#xD;
			&#xD;
			/** set the ball diameter to new value */&#xD;
			context.setDimension(dimension.x,dimension.y);&#xD;
		}&#xD;
		&#xD;
		i++;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BHwB8Gs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BHwB8Ws2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BHwpAms2EeW5VufirDXdmA" name="updateState" method="_BIx8sGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BHwpA2s2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BHwpBGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BDz9IGs2EeW5VufirDXdmA" name="CollideStrategy">
          <ownedComment xmi:id="_BI5RcWs2EeW5VufirDXdmA">
            <body>The strategy that simulates the elastic collision between two balls&#xD;
@author caojian</body>
          </ownedComment>
          <generalization xmi:id="_BHF6oGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIlIYWs2EeW5VufirDXdmA" name="Nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIlIYms2EeW5VufirDXdmA" value="1.1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIx8s2s2EeW5VufirDXdmA" name="updateState" specification="_BHyeMGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIx8tGs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_BIx8tWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BIx8tms2EeW5VufirDXdmA" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_BIx8t2s2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd(){&#xD;
&#xD;
			@Override&#xD;
			public void apply(Ball other, IDispatcher&lt;IBallCmd> dispatcher) {&#xD;
				&#xD;
				if (context != other) {&#xD;
					if ((context.getDimension().x + other.getDimension().x) > &#xD;
				         context.getLocation().distance(other.getLocation())) {&#xD;
						Point.Double theImpulse = impulse(context.getLocation(), context.getVelocity(),&#xD;
										other.getLocation(), other.getVelocity(), &#xD;
										reducedMass(context.getDimension().getX()*context.getDimension().getY(), other.getDimension().getX()*other.getDimension().getY()), &#xD;
										context.getLocation().distance(other.getLocation()),&#xD;
										context.getDimension().getX()+other.getDimension().getX()-context.getLocation().distance(other.getLocation()));&#xD;
						updateCollision(context, other, theImpulse.getX(), theImpulse.getY(), dispatcher);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIx8uGs2EeW5VufirDXdmA" name="reducedMass" specification="_BD1LQGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIx8uWs2EeW5VufirDXdmA" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIx8ums2EeW5VufirDXdmA" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIx8u2s2EeW5VufirDXdmA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)&#xD;
			return mTarget;&#xD;
		if (mTarget == Double.POSITIVE_INFINITY)&#xD;
			return mSource;&#xD;
		else&#xD;
			return (mSource * mTarget) / (mSource + mTarget);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIyjwGs2EeW5VufirDXdmA" name="impulse" specification="_BH7BEGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIyjwWs2EeW5VufirDXdmA" name="lSource" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjwms2EeW5VufirDXdmA" name="vSource" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjw2s2EeW5VufirDXdmA" name="lTarget" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjxGs2EeW5VufirDXdmA" name="vTarget" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjxWs2EeW5VufirDXdmA" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIyjxms2EeW5VufirDXdmA" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIyjx2s2EeW5VufirDXdmA" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIyjyGs2EeW5VufirDXdmA" type="_BHEsgGs2EeW5VufirDXdmA" direction="return"/>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target&#xD;
		double nx = ((double) (lTarget.x - lSource.x)) / distance;&#xD;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;&#xD;
&#xD;
		// delta velocity (speed, actually) in normal direction, source to&#xD;
		// target&#xD;
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y)&#xD;
				* ny;&#xD;
&#xD;
		// move the source ball beyond collision range of the target ball, along&#xD;
		// the normal direction.&#xD;
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)),&#xD;
				(int) Math.ceil(-ny * (Nudge * deltaR)));&#xD;
&#xD;
&#xD;
		return new Point.Double(2.0 * reducedMass * dvn * nx, 2.0&#xD;
				* reducedMass * dvn * ny);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIyjyWs2EeW5VufirDXdmA" name="updateCollision" specification="_BH8PMGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIyjyms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjy2s2EeW5VufirDXdmA" name="target" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIyjzGs2EeW5VufirDXdmA" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIyjzWs2EeW5VufirDXdmA" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BIyjzms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>int mContext = context.getDimension().x * context.getDimension().y;&#xD;
&#xD;
		context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));&#xD;
		context.interactWith(target, dispatcher);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BD1LQGs2EeW5VufirDXdmA" name="reducedMass" visibility="protected" method="_BIx8uGs2EeW5VufirDXdmA">
            <ownedComment xmi:id="_BI5Rcms2EeW5VufirDXdmA">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct&#xD;
	 * result if one of the balls has infinite mass.&#xD;
	 * &#xD;
	 * @param mSource&#xD;
	 *            Mass of the source ball&#xD;
	 * @param mTarget&#xD;
	 *            Mass of the target ball&#xD;
	 * @return The mass</body>
            </ownedComment>
            <ownedParameter xmi:id="_BD1LQWs2EeW5VufirDXdmA" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BD1LQms2EeW5VufirDXdmA" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BD1yUGs2EeW5VufirDXdmA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BHyeMGs2EeW5VufirDXdmA" name="updateState" method="_BIx8s2s2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BHyeMWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_BHzFQms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BHzFQ2s2EeW5VufirDXdmA" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_BHzFQGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BH7BEGs2EeW5VufirDXdmA" name="impulse" visibility="protected" method="_BIyjwGs2EeW5VufirDXdmA">
            <ownedComment xmi:id="_BI5Rc2s2EeW5VufirDXdmA">
              <body>Calculates the impulse (change in momentum) of the collision in the&#xD;
	 * direction from the source to the target This method calculates the&#xD;
	 * impulse on the source ball. The impulse on the target ball is the&#xD;
	 * negative of the result. Also moves source ball out of collision range&#xD;
	 * along normal direction. The change in velocity of the source ball is the&#xD;
	 * impulse divided by the source's mass The change in velocity of the target&#xD;
	 * ball is the negative of the impulse divided by the target's mass&#xD;
	 * &#xD;
	 * Operational note: Even though theoretically, the difference in velocities&#xD;
	 * of two balls should be co-linear with the normal line between them, the&#xD;
	 * discrete nature of animations means that the point where collision is&#xD;
	 * detected may not be at the same point as the theoretical contact point.&#xD;
	 * This method calculates the rebound directions as if the two balls were&#xD;
	 * the appropriate radii such that they had just contacted&#xD;
	 * _at_the_point_of_collision_detection_. This may give slightly different&#xD;
	 * rebound direction than one would calculate if they contacted at the&#xD;
	 * theoretical point given by their actual radii.&#xD;
	 * &#xD;
	 * @param lSource&#xD;
	 *            Location of the source ball&#xD;
	 * @param vSource&#xD;
	 *            Velocity of the source ball&#xD;
	 * @param lTarget&#xD;
	 *            Location of the target ball&#xD;
	 * @param vTarget&#xD;
	 *            Velocity of the target ball&#xD;
	 * @param reducedMass&#xD;
	 *            Reduced mass of the two balls&#xD;
	 * @param distance&#xD;
	 *            Distance between the two balls.&#xD;
	 * @param deltaR&#xD;
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a&#xD;
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.&#xD;
	 * @return The impulse</body>
            </ownedComment>
            <ownedParameter xmi:id="_BH7BEWs2EeW5VufirDXdmA" name="lSource" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH7BEms2EeW5VufirDXdmA" name="vSource" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH7BE2s2EeW5VufirDXdmA" name="lTarget" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH7BFGs2EeW5VufirDXdmA" name="vTarget" type="_BG9-0Gs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH7BFWs2EeW5VufirDXdmA" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BH7BFms2EeW5VufirDXdmA" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BH7BF2s2EeW5VufirDXdmA" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BH7oIGs2EeW5VufirDXdmA" type="_BHEsgGs2EeW5VufirDXdmA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BH8PMGs2EeW5VufirDXdmA" name="updateCollision" visibility="protected" method="_BIyjyWs2EeW5VufirDXdmA">
            <ownedComment xmi:id="_BI5RdGs2EeW5VufirDXdmA">
              <body>Updates the velocity of the source ball, given an impulse, then uses the&#xD;
	 * context's interactWith method to determine the post collision behavior, from the context&#xD;
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change&#xD;
	 * the velocity of the target ball, switch the source and target input&#xD;
	 * parameters and negate the impulse values.   This will also run the post collision behavior from &#xD;
	 * the other perspective.&#xD;
	 * &#xD;
	 * @param context&#xD;
	 *            The ball to update&#xD;
	 * @param target&#xD;
	 *            The ball being collided with&#xD;
	 * @param impX&#xD;
	 *            x-coordinate of the impulse&#xD;
	 * @param impY&#xD;
	 *            y-coordinate of the impulse&#xD;
	 * @param dispatcher The dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_BH8PMWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH8PMms2EeW5VufirDXdmA" name="target" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BH8PM2s2EeW5VufirDXdmA" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BH8PNGs2EeW5VufirDXdmA" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BH8PNWs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BD5csGs2EeW5VufirDXdmA" name="ColorChangingStrategy">
          <ownedComment xmi:id="_BI5RdWs2EeW5VufirDXdmA">
            <body>this strategy changes the color of a ball</body>
          </ownedComment>
          <generalization xmi:id="_BHI98Gs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIzK0Gs2EeW5VufirDXdmA" name="updateState" specification="_BH_SgGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIzK0Ws2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIzK0ms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>Randomizer rd = Randomizer.Singleton;&#xD;
		&#xD;
		/** set color */&#xD;
		context.setColor(rd.randomColor());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BH-EYGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BH-EYWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BH_SgGs2EeW5VufirDXdmA" name="updateState" method="_BIzK0Gs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BH_SgWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIBuwGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BD748Gs2EeW5VufirDXdmA" name="DrunkenStrategy">
          <ownedComment xmi:id="_BI5Rdms2EeW5VufirDXdmA">
            <body>generate a ball with random color, diameter and moving at random velocity</body>
          </ownedComment>
          <generalization xmi:id="_BHKzIGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIlvcWs2EeW5VufirDXdmA" name="incrementD" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BImWgGs2EeW5VufirDXdmA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI0Y8Gs2EeW5VufirDXdmA" name="updateState" specification="_BIEyEWs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI0Y8Ws2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI0Y8ms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>Randomizer rd = Randomizer.Singleton;&#xD;
		Point dimension = context.getDimension();&#xD;
		Point location = context.getLocation();&#xD;
		Point velocity = context.getVelocity();&#xD;
		&#xD;
		&#xD;
		dimension.x += incrementD;&#xD;
		dimension.y += incrementD;&#xD;
		if (dimension.x > 15) {&#xD;
			incrementD = -incrementD;&#xD;
		} else if (dimension.x &lt; 5) {&#xD;
			incrementD = -incrementD;&#xD;
		}&#xD;
		&#xD;
		location.x += velocity.x * rd.randomInt(-3, 3);&#xD;
		location.y += velocity.y * rd.randomInt(-3, 3);&#xD;
		&#xD;
		context.setLocation(location.x, location.y);		&#xD;
		context.setColor(rd.randomColor());&#xD;
		context.setDimension(dimension.x,dimension.y);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BIELAGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIELAWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIEyEWs2EeW5VufirDXdmA" name="updateState" method="_BI0Y8Gs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIEyEms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIEyE2s2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BD-VMGs2EeW5VufirDXdmA" name="FatStrategy">
          <ownedComment xmi:id="_BI5Rd2s2EeW5VufirDXdmA">
            <body>The interaction strategy will increase the radius of other balls
@author ls53@rice.edu</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BIm9kGs2EeW5VufirDXdmA" name="effectDist" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIm9kWs2EeW5VufirDXdmA" value="100"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BHMoUGs2EeW5VufirDXdmA" client="_BD-VMGs2EeW5VufirDXdmA" supplier="_BDhpQGs2EeW5VufirDXdmA" contract="_BDhpQGs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI1AAGs2EeW5VufirDXdmA" name="updateState" specification="_BIIccGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI1AAWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI1AAms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>dispatcher.dispatch((other,disp) -> {
         if (context != other) {
             if (context.getLocation().distance(other.getLocation()) &lt; effectDist) {
                 int radius = (int)Math.max(other.getDimension().getX(), other.getDimension().getY());
                 if (radius &lt; 50) {
                     other.setDimension((int)other.getDimension().getY() + 2, (int)other.getDimension().getX() + 2);
                 }
             }
         }
     });
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BIGnQGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIGnQWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIIccGs2EeW5VufirDXdmA" name="updateState" method="_BI1AAGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIIccWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIIccms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BEBYgGs2EeW5VufirDXdmA" name="FlashStrategy">
          <ownedComment xmi:id="_BI54gGs2EeW5VufirDXdmA">
            <body>The interaction strategy that can make other balls flash
@author ls53@rice.edu</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BInkoGs2EeW5VufirDXdmA" name="effectDist" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BInkoWs2EeW5VufirDXdmA" value="100"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BHOdgGs2EeW5VufirDXdmA" client="_BEBYgGs2EeW5VufirDXdmA" supplier="_BDhpQGs2EeW5VufirDXdmA" contract="_BDhpQGs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI1AA2s2EeW5VufirDXdmA" name="updateState" specification="_BILfwGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI1ABGs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI1ABWs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>context.setColor(Randomizer.Singleton.randomColor());
     dispatcher.dispatch((other,disp) -> {
         if (context != other) {
             if (context.getLocation().distance(other.getLocation()) &lt; effectDist) {
                 other.setColor(Randomizer.Singleton.randomColor());
             }
         }
     });
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BIKRoGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIKRoWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BILfwGs2EeW5VufirDXdmA" name="updateState" method="_BI1AA2s2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BILfwWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BILfwms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BEEb0Gs2EeW5VufirDXdmA" name="MultiStrategy">
          <ownedComment xmi:id="_BI54gWs2EeW5VufirDXdmA">
            <body>a strategy capable of composing arbitrarily complex behaviors&#xD;
 *</body>
          </ownedComment>
          <generalization xmi:id="_BHVyQGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIoLsGs2EeW5VufirDXdmA" name="strat1" visibility="private" type="_BDhpQGs2EeW5VufirDXdmA" association="_BJE3oWs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIoywWs2EeW5VufirDXdmA" name="strat2" visibility="private" type="_BDhpQGs2EeW5VufirDXdmA" association="_BJFesWs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI1nEGs2EeW5VufirDXdmA" name="MultiStrategy" specification="_BHT9EGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI1nEWs2EeW5VufirDXdmA" name="strat1" type="_BDhpQGs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI1nEms2EeW5VufirDXdmA" name="strat2" type="_BDhpQGs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI1nE2s2EeW5VufirDXdmA" type="_BEEb0Gs2EeW5VufirDXdmA" direction="return"/>
            <language>java</language>
            <body>this.strat1 = strat1;&#xD;
		this.strat2 = strat2;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI1nFGs2EeW5VufirDXdmA" name="updateState" specification="_BIPxMms2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI1nFWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI1nFms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>strat1.updateState(context, dispatcher);&#xD;
		strat2.updateState(context, dispatcher);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BHT9EGs2EeW5VufirDXdmA" name="MultiStrategy" method="_BI1nEGs2EeW5VufirDXdmA">
            <eAnnotations xmi:id="_BHT9E2s2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BHT9FGs2EeW5VufirDXdmA" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BI54gms2EeW5VufirDXdmA">
              <body>construct that takes in two individual strategies&#xD;
	 * @param strat1 The first strategy&#xD;
	 * @param strat2 The second strategy</body>
            </ownedComment>
            <ownedParameter xmi:id="_BHT9EWs2EeW5VufirDXdmA" name="strat1" type="_BDhpQGs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BHT9Ems2EeW5VufirDXdmA" name="strat2" type="_BDhpQGs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BHT9FWs2EeW5VufirDXdmA" type="_BEEb0Gs2EeW5VufirDXdmA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIOjEGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIOjEWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIPxMms2EeW5VufirDXdmA" name="updateState" method="_BI1nFGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIPxM2s2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIQYQGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BEJUUGs2EeW5VufirDXdmA" name="SpawnStrategy">
          <ownedComment xmi:id="_BI54g2s2EeW5VufirDXdmA">
            <body>update strategy that spawns new balls when a ball contacts another&#xD;
@author caojian</body>
          </ownedComment>
          <generalization xmi:id="_BHZcoGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIqA4Gs2EeW5VufirDXdmA" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIqA4Ws2EeW5VufirDXdmA" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BIrPAWs2EeW5VufirDXdmA" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIrPAms2EeW5VufirDXdmA" value="100"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI2OIGs2EeW5VufirDXdmA" name="updateState" specification="_BITbkWs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI2OIWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_BI2OIms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BI2OI2s2EeW5VufirDXdmA" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_BI2OJGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>if (delay &lt; count++) {&#xD;
			dispatcher.dispatch(new IBallCmd() {&#xD;
&#xD;
				@Override&#xD;
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {&#xD;
&#xD;
					if (count != 0 &amp;&amp; context != other) {&#xD;
						if ((context.getDimension().x + other.getDimension().x) > &#xD;
						    context.getLocation().distance(other.getLocation())) {&#xD;
							disp.addObserver(new Ball(&#xD;
									context.getColor(),&#xD;
									context.getDimension(),&#xD;
									new Point(context.getLocation()),&#xD;
									new Point(-context.getVelocity().x+1, -context.getVelocity().y+1),&#xD;
									context.getCanvas(), &#xD;
									new SpawnStrategy(),&#xD;
									context.getPaintStrategy()));&#xD;
							count = 0;&#xD;
							delay *= 5;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BISNcGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BISNcWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BITbkWs2EeW5VufirDXdmA" name="updateState" method="_BI2OIGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BITbkms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_BIUCoWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BIUComs2EeW5VufirDXdmA" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_BITbk2s2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BELwkGs2EeW5VufirDXdmA" name="StraightStrategy">
          <ownedComment xmi:id="_BI54hGs2EeW5VufirDXdmA">
            <body>strategy that creates a straight moving ball</body>
          </ownedComment>
          <generalization xmi:id="_BHbR0Gs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedOperation xmi:id="_BIWe4Gs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIWe4Ws2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIXF8ms2EeW5VufirDXdmA" name="updateState">
            <ownedParameter xmi:id="_BIXtAGs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIXtAWs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BEOM0Gs2EeW5VufirDXdmA" name="SwallowStrategy">
          <ownedComment xmi:id="_BI54hWs2EeW5VufirDXdmA">
            <body>A ball can swallow another ball
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_BHcf8Gs2EeW5VufirDXdmA" general="_BDz9IGs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI2OJWs2EeW5VufirDXdmA" name="init" specification="_BIZiMGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI2OJms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>context.setInteractStrategy(new IInteractStrategy() {
         
         @Override
         public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
             if (disp.hasObserver(context)) {
                 double contextMass = Math.PI * context.getDimension().getX() * context.getDimension().getY();
                 double targetMass = Math.PI * target.getDimension().getX() * target.getDimension().getY();                    
                 double newMass = contextMass + targetMass;
                 int radius = (int)Math.sqrt(newMass / Math.PI);
                 context.setDimension(radius, radius);
                 disp.deleteObserver(target);
             }
         }
     });
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BIZiMGs2EeW5VufirDXdmA" name="init" method="_BI2OJWs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIZiMWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BEPa8Gs2EeW5VufirDXdmA" name="SwitcherStrategy">
          <ownedComment xmi:id="_BI54hms2EeW5VufirDXdmA">
            <body>strategy that creates a ball which can change its behavior upon button clicking&#xD;
 *</body>
          </ownedComment>
          <generalization xmi:id="_BHeVIWs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIr2EWs2EeW5VufirDXdmA" name="_strategy" visibility="private" type="_BDhpQGs2EeW5VufirDXdmA" association="_BJGFwWs2EeW5VufirDXdmA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BIsdIWs2EeW5VufirDXdmA" value="new StraightStrategy&lt;TDispMsg>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BItEMWs2EeW5VufirDXdmA" name="hasInitialized" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BItEMms2EeW5VufirDXdmA" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI21MGs2EeW5VufirDXdmA" name="init" specification="_BIawUGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI21MWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>_strategy.init(context);&#xD;
	    hasInitialized = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI21Mms2EeW5VufirDXdmA" name="updateState" specification="_BIb-cGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI21M2s2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI21NGs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>if (!hasInitialized) {&#xD;
	        _strategy.init(context);&#xD;
	        hasInitialized = true;&#xD;
	    }&#xD;
	    &#xD;
		_strategy.updateState(context, dispatcher); &#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI21NWs2EeW5VufirDXdmA" name="setStrategy" specification="_BHduEGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI21Nms2EeW5VufirDXdmA" name="newStrategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>_strategy = newStrategy;&#xD;
		hasInitialized = false;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BHduEGs2EeW5VufirDXdmA" name="setStrategy" method="_BI21NWs2EeW5VufirDXdmA">
            <ownedComment xmi:id="_BI54h2s2EeW5VufirDXdmA">
              <body>set to a new strategy&#xD;
	 * @param newStrategy The new strategy</body>
            </ownedComment>
            <ownedParameter xmi:id="_BHduEWs2EeW5VufirDXdmA" name="newStrategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIawUGs2EeW5VufirDXdmA" name="init" method="_BI21MGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIawUWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIb-cGs2EeW5VufirDXdmA" name="updateState" method="_BI21Mms2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIb-cWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIb-cms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BESeQGs2EeW5VufirDXdmA" name="WanderingStrategy">
          <ownedComment xmi:id="_BI6fkGs2EeW5VufirDXdmA">
            <body>generate a ball moving at random velocity</body>
          </ownedComment>
          <generalization xmi:id="_BHgKUGs2EeW5VufirDXdmA" general="_BDqzMGs2EeW5VufirDXdmA"/>
          <ownedAttribute xmi:id="_BIu5YGs2EeW5VufirDXdmA" name="myball" visibility="private" type="_BG8JoWs2EeW5VufirDXdmA" association="_BJGs0Gs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BI3cQGs2EeW5VufirDXdmA" name="updateState" specification="_BIfo0ms2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BI3cQWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BI3cQms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
            <language>java</language>
            <body>myball = context;&#xD;
		Randomizer rd = Randomizer.Singleton;&#xD;
		Point location = myball.getLocation();&#xD;
		Point velocity = myball.getVelocity();&#xD;
		location.x += velocity.x * rd.randomInt(-3, 3);&#xD;
		location.y += velocity.y * rd.randomInt(-3, 3);&#xD;
		&#xD;
		myball.setLocation(location.x, location.y);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BIeasGs2EeW5VufirDXdmA" name="init">
            <ownedParameter xmi:id="_BIeasWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BIfo0ms2EeW5VufirDXdmA" name="updateState" method="_BI3cQGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIfo02s2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            <ownedParameter xmi:id="_BIgP4Gs2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BJE3oWs2EeW5VufirDXdmA" name="" memberEnd="_BJE3oms2EeW5VufirDXdmA _BIoLsGs2EeW5VufirDXdmA">
          <ownedEnd xmi:id="_BJE3oms2EeW5VufirDXdmA" name="" type="_BEEb0Gs2EeW5VufirDXdmA" association="_BJE3oWs2EeW5VufirDXdmA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BJFesWs2EeW5VufirDXdmA" name="" memberEnd="_BJFesms2EeW5VufirDXdmA _BIoywWs2EeW5VufirDXdmA">
          <ownedEnd xmi:id="_BJFesms2EeW5VufirDXdmA" name="" type="_BEEb0Gs2EeW5VufirDXdmA" association="_BJFesWs2EeW5VufirDXdmA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BJGFwWs2EeW5VufirDXdmA" name="" memberEnd="_BJGFwms2EeW5VufirDXdmA _BIr2EWs2EeW5VufirDXdmA">
          <ownedEnd xmi:id="_BJGFwms2EeW5VufirDXdmA" name="" type="_BEPa8Gs2EeW5VufirDXdmA" association="_BJGFwWs2EeW5VufirDXdmA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BJGs0Gs2EeW5VufirDXdmA" name="" memberEnd="_BJGs0Ws2EeW5VufirDXdmA _BIu5YGs2EeW5VufirDXdmA">
          <ownedEnd xmi:id="_BJGs0Ws2EeW5VufirDXdmA" name="" type="_BESeQGs2EeW5VufirDXdmA" association="_BJGs0Gs2EeW5VufirDXdmA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_BDf0EGs2EeW5VufirDXdmA" name="IInteractStrategy">
        <ownedAttribute xmi:id="_BDgbIGs2EeW5VufirDXdmA" name="NULL_STRATEGY" isLeaf="true" isStatic="true" type="_BDf0EGs2EeW5VufirDXdmA" isReadOnly="true" association="_BJEQkGs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BDhCMGs2EeW5VufirDXdmA" value="new IInteractStrategy() {&#xA;&#xA;        @Override&#xA;        /**&#xA;         * No-op behavior&#xA;         * @param context Ignored&#xA;         * @param target Ignored&#xA;         * @param disp Ignored&#xA;         */&#xA;        public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {}&#xA;    }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_BHnfEGs2EeW5VufirDXdmA" name="interact">
          <ownedParameter xmi:id="_BHnfEWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_BHnfEms2EeW5VufirDXdmA" name="target" type="_BG8JoWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_BHnfE2s2EeW5VufirDXdmA" name="disp" type="_BGzmwGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_BDhpQGs2EeW5VufirDXdmA" name="IUpdateStrategy">
        <ownedComment xmi:id="_BI4qYGs2EeW5VufirDXdmA">
          <body>The strategy that runs when a Ball updates its state.&#xD;
&#xD;
@author Stephen Wong&#xD;
&#xD;
@param TDispMsg The type of message that the supplied IDispatcher can send.</body>
        </ownedComment>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_BDjecGs2EeW5VufirDXdmA" name="NullFactory" isLeaf="true">
          <eAnnotations xmi:id="_BDjecWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_BDjecms2EeW5VufirDXdmA" key="static"/>
          </eAnnotations>
          <ownedComment xmi:id="_BI4qYWs2EeW5VufirDXdmA">
            <body>A factory for a typed null strategy object.&lt;br>&#xD;
	 * Usage: instantiate this factory class using the desired TDispMsg type and then call its make() method&#xD;
	 * to create the correctly typed null strategy object.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_BG6UcGs2EeW5VufirDXdmA" client="_BDjecGs2EeW5VufirDXdmA" supplier="_BDoW8Gs2EeW5VufirDXdmA" contract="_BDoW8Gs2EeW5VufirDXdmA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BIwukGs2EeW5VufirDXdmA" name="make" specification="_BDkskGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BIwukWs2EeW5VufirDXdmA" type="_BDhpQGs2EeW5VufirDXdmA" direction="return"/>
            <language>java</language>
            <body>return new IUpdateStrategy&lt;TDispMsg>() {&#xD;
&#xD;
				@Override&#xD;
				/**&#xD;
				 * No-op&#xD;
				 * @param context Ignored&#xD;
				 */&#xD;
				public void init(Ball context) {&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				/**&#xD;
				 * No-op&#xD;
				 * @param context Ignored&#xD;
				 * @param dispatcher Ignored&#xD;
				 */&#xD;
				public void updateState(Ball context, IDispatcher&lt;TDispMsg> dispatcher) {&#xD;
				}		&#xD;
			};&#xD;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BDkskGs2EeW5VufirDXdmA" name="make" method="_BIwukGs2EeW5VufirDXdmA">
            <ownedParameter xmi:id="_BG67gWs2EeW5VufirDXdmA" type="_BDhpQGs2EeW5VufirDXdmA" direction="return"/>
          </ownedOperation>
        </nestedClassifier>
        <ownedOperation xmi:id="_BHotMGs2EeW5VufirDXdmA" name="init">
          <ownedParameter xmi:id="_BHotMWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BHpUQGs2EeW5VufirDXdmA" name="updateState">
          <ownedParameter xmi:id="_BHpUQWs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_BHpUQms2EeW5VufirDXdmA" name="dispatcher" type="_BGzmwGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_BDoW8Gs2EeW5VufirDXdmA" name="IUpdateStrategyFac">
        <ownedComment xmi:id="_BI4qYms2EeW5VufirDXdmA">
          <body>An interface that defines a factory that instantiates &#xD;
a specific IUpdateStrategy</body>
        </ownedComment>
        <ownedOperation xmi:id="_BDplEWs2EeW5VufirDXdmA" name="make">
          <ownedComment xmi:id="_BI4qY2s2EeW5VufirDXdmA">
            <body>Instantiate the specific IUpdateStrategy for which this factory is defined.&#xD;
   * @return An IUpdateStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_BG8JoGs2EeW5VufirDXdmA" type="_BDhpQGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BG8JoWs2EeW5VufirDXdmA" name="Ball"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_BJEQkGs2EeW5VufirDXdmA" name="" memberEnd="_BJEQkWs2EeW5VufirDXdmA _BDgbIGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_BJEQkWs2EeW5VufirDXdmA" name="" type="_BDf0EGs2EeW5VufirDXdmA" association="_BJEQkGs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JTQq0Gs2EeW5VufirDXdmA" name="paint">
        <packagedElement xmi:type="uml:Package" xmi:id="_JTR48Gs2EeW5VufirDXdmA" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_JTdfIGs2EeW5VufirDXdmA" name="BallShapeFactory">
            <ownedComment xmi:id="_JUbIdms2EeW5VufirDXdmA">
              <body>Paint strategy that paints a filled circle with the Ball's radius. &#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_JUVB0Gs2EeW5VufirDXdmA" name="Singleton" isLeaf="true" isStatic="true" type="_JTdfIGs2EeW5VufirDXdmA" isReadOnly="true" association="_JUc9oGs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUVo4Gs2EeW5VufirDXdmA" value="new BallShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_JUGYUms2EeW5VufirDXdmA" client="_JTdfIGs2EeW5VufirDXdmA" supplier="_JTmCAGs2EeW5VufirDXdmA" contract="_JTmCAGs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUZTQGs2EeW5VufirDXdmA" name="makeShape" specification="_JTetQGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUZTQWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZTQms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZTQ2s2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZTRGs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZTRWs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>return new Ellipse2D.Double(x, y, xScale, yScale);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_JTetQGs2EeW5VufirDXdmA" name="makeShape" method="_JUZTQGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JTetQWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTfUUGs2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTfUUWs2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTfUUms2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JURXcGs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_JThwkGs2EeW5VufirDXdmA" name="EllipseShapeFactory">
            <ownedComment xmi:id="_JUbvgGs2EeW5VufirDXdmA">
              <body>Concrete shape factory that instantiates Ellipse2D.Double shapes.&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_JUVo4Ws2EeW5VufirDXdmA" name="Singleton" isLeaf="true" isStatic="true" type="_JThwkGs2EeW5VufirDXdmA" isReadOnly="true" association="_JUdksWs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUVo4ms2EeW5VufirDXdmA" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_JUHmcGs2EeW5VufirDXdmA" client="_JThwkGs2EeW5VufirDXdmA" supplier="_JTmCAGs2EeW5VufirDXdmA" contract="_JTmCAGs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUZ6UGs2EeW5VufirDXdmA" name="makeShape" specification="_JTiXoGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUZ6UWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZ6Ums2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZ6U2s2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZ6VGs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUZ6VWs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>return new Ellipse2D.Double(x, y, xScale, yScale);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_JTiXoGs2EeW5VufirDXdmA" name="makeShape" method="_JUZ6UGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JTiXoWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTiXoms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTiXo2s2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTiXpGs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JURXcWs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_JTkM0Gs2EeW5VufirDXdmA" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_JUbvgWs2EeW5VufirDXdmA">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <generalization xmi:id="_JUKCsWs2EeW5VufirDXdmA" general="_JTn3MGs2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_JUWP8Gs2EeW5VufirDXdmA" name="at" visibility="private" isStatic="true" type="_JUJboGs2EeW5VufirDXdmA" association="_JUeLwWs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUWP8Ws2EeW5VufirDXdmA" value="new AffineTransform()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_JUWP82s2EeW5VufirDXdmA" name="scaleFactor" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUWP9Gs2EeW5VufirDXdmA" value="0.04"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUZ6Vms2EeW5VufirDXdmA" name="Fish1PolygonFactory" specification="_JTla8Gs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUZ6V2s2EeW5VufirDXdmA" type="_JTkM0Gs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, scaleFactor, new Point(0,5), new Point(30,15), new Point(40,10), new Point(50,7),&#xD;
				new Point(60,0), new Point(70,7), new Point(90,12), new Point(100,15), new Point(115,22),&#xD;
				new Point(100,35), new Point(90,40), new Point(70,43), new Point(60,50), new Point(50,43),&#xD;
				new Point(40,40), new Point(30,35), new Point(0,45), new Point(15,25));		&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_JTla8Gs2EeW5VufirDXdmA" name="Fish1PolygonFactory" method="_JUZ6Vms2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_JTla8Ws2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_JTla8ms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_JUbvgms2EeW5VufirDXdmA">
                <body>Constructor that calls the PolygonFactory superclass constructor with the scale factor &#xD;
	 * and polygon points that define the fish shape.</body>
              </ownedComment>
              <ownedParameter xmi:id="_JTla82s2EeW5VufirDXdmA" type="_JTkM0Gs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_JTmCAGs2EeW5VufirDXdmA" name="IShapeFactory">
            <ownedComment xmi:id="_JUbvg2s2EeW5VufirDXdmA">
              <body>Abstract factory that creates a Shape for use as prototype shapes in IPaintStrategies. &#xD;
The location of the center of the shape and the x and y scales can be specified.&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_JTmpEGs2EeW5VufirDXdmA" name="makeShape">
              <ownedParameter xmi:id="_JTmpEWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTmpEms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTnQIGs2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTnQIWs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUR-gGs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_JTn3MGs2EeW5VufirDXdmA" name="PolygonFactory">
            <ownedComment xmi:id="_JUbvhGs2EeW5VufirDXdmA">
              <body>Concrete IShapeFactory that provides the invariant behavior to instantiate a Shape that is a Polygon.&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_JUW3AWs2EeW5VufirDXdmA" name="at" visibility="private" type="_JUJboGs2EeW5VufirDXdmA" association="_JUey0Ws2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_JUXeEWs2EeW5VufirDXdmA" name="scaleFactor" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_JUXeE2s2EeW5VufirDXdmA" name="poly" visibility="private" type="_JULQ0Gs2EeW5VufirDXdmA" association="_JUey1Gs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUXeFGs2EeW5VufirDXdmA" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_JUYFIWs2EeW5VufirDXdmA" name="pts" visibility="private" type="_BG9-0Gs2EeW5VufirDXdmA" association="_JUfZ4Ws2EeW5VufirDXdmA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUYFIms2EeW5VufirDXdmA" value="*"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_JUL34Ws2EeW5VufirDXdmA" client="_JTn3MGs2EeW5VufirDXdmA" supplier="_JTmCAGs2EeW5VufirDXdmA" contract="_JTmCAGs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUahYGs2EeW5VufirDXdmA" name="PolygonFactory" specification="_JUSlkGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUahYWs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_JUahYms2EeW5VufirDXdmA" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUahY2s2EeW5VufirDXdmA" name="pts" type="_BG9-0Gs2EeW5VufirDXdmA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUahZGs2EeW5VufirDXdmA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUahZWs2EeW5VufirDXdmA" type="_JTn3MGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>this.at = at;&#xD;
		this.scaleFactor = scaleFactor;&#xD;
		this.pts = pts;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUahZms2EeW5VufirDXdmA" name="makeShape" specification="_JToeQGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUahZ2s2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUahaGs2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUahaWs2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUahams2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUaha2s2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>for (int i = 0; i&lt;pts.length; i++){&#xD;
			poly.addPoint(pts[i].x, pts[i].y);&#xD;
		}&#xD;
		at.setToTranslation(x, y);&#xD;
		at.scale(xScale*scaleFactor, yScale*scaleFactor);  // optional rotation can be added as well&#xD;
		return at.createTransformedShape(poly);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_JToeQGs2EeW5VufirDXdmA" name="makeShape" method="_JUahZms2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JToeQWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JToeQms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTpFUGs2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTpFUWs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUTzsGs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_JUSlkGs2EeW5VufirDXdmA" name="PolygonFactory" method="_JUahYGs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_JUSllGs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_JUSllWs2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_JUSlkWs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_JUSlkms2EeW5VufirDXdmA" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUSlk2s2EeW5VufirDXdmA" name="pts" type="_BG9-0Gs2EeW5VufirDXdmA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUTMoms2EeW5VufirDXdmA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUTMoWs2EeW5VufirDXdmA" type="_JTn3MGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_JTrhkGs2EeW5VufirDXdmA" name="RectangleShapeFactory">
            <ownedComment xmi:id="_JUbvhWs2EeW5VufirDXdmA">
              <body>Concrete IShapeFactory that instantiates Rectangle2d.Double shapes.&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_JUYsMWs2EeW5VufirDXdmA" name="Singleton" isLeaf="true" isStatic="true" type="_JTrhkGs2EeW5VufirDXdmA" isReadOnly="true" association="_JUgA8Ws2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_JUYsMms2EeW5VufirDXdmA" value="new RectangleShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_JUOUIWs2EeW5VufirDXdmA" client="_JTrhkGs2EeW5VufirDXdmA" supplier="_JTmCAGs2EeW5VufirDXdmA" contract="_JTmCAGs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUbIcGs2EeW5VufirDXdmA" name="makeShape" specification="_JTsvsGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JUbIcWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUbIcms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUbIc2s2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUbIdGs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUbIdWs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>return new Rectangle2D.Double(x, y, xScale, yScale);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_JTsvsGs2EeW5VufirDXdmA" name="makeShape" method="_JUbIcGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_JTsvsWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTsvsms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTsvs2s2EeW5VufirDXdmA" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JTsvtGs2EeW5VufirDXdmA" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_JUUawGs2EeW5VufirDXdmA" type="_JUFxQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUc9oGs2EeW5VufirDXdmA" name="" memberEnd="_JUc9oWs2EeW5VufirDXdmA _JUVB0Gs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUc9oWs2EeW5VufirDXdmA" name="" type="_JTdfIGs2EeW5VufirDXdmA" association="_JUc9oGs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUdksWs2EeW5VufirDXdmA" name="" memberEnd="_JUdksms2EeW5VufirDXdmA _JUVo4Ws2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUdksms2EeW5VufirDXdmA" name="" type="_JThwkGs2EeW5VufirDXdmA" association="_JUdksWs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUeLwWs2EeW5VufirDXdmA" name="" memberEnd="_JUeLwms2EeW5VufirDXdmA _JUWP8Gs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUeLwms2EeW5VufirDXdmA" name="" type="_JTkM0Gs2EeW5VufirDXdmA" association="_JUeLwWs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUey0Ws2EeW5VufirDXdmA" name="" memberEnd="_JUey0ms2EeW5VufirDXdmA _JUW3AWs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUey0ms2EeW5VufirDXdmA" name="" type="_JTn3MGs2EeW5VufirDXdmA" association="_JUey0Ws2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUey1Gs2EeW5VufirDXdmA" name="" memberEnd="_JUey1Ws2EeW5VufirDXdmA _JUXeE2s2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUey1Ws2EeW5VufirDXdmA" name="" type="_JTn3MGs2EeW5VufirDXdmA" association="_JUey1Gs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUfZ4Ws2EeW5VufirDXdmA" name="" memberEnd="_JUfZ4ms2EeW5VufirDXdmA _JUYFIWs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUfZ4ms2EeW5VufirDXdmA" name="" type="_JTn3MGs2EeW5VufirDXdmA" association="_JUfZ4Ws2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_JUgA8Ws2EeW5VufirDXdmA" name="" memberEnd="_JUgA8ms2EeW5VufirDXdmA _JUYsMWs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_JUgA8ms2EeW5VufirDXdmA" name="" type="_JTrhkGs2EeW5VufirDXdmA" association="_JUgA8Ws2EeW5VufirDXdmA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Kkj6oGs2EeW5VufirDXdmA" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_Kkx9EGs2EeW5VufirDXdmA" name="BallPaintStrategy">
            <ownedComment xmi:id="_KmUOIGs2EeW5VufirDXdmA">
              <body>concrete paint strategy to paint a ball shape</body>
            </ownedComment>
            <generalization xmi:id="_KmEWgGs2EeW5VufirDXdmA" general="_Kl0e4Gs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmRK0Gs2EeW5VufirDXdmA" name="BallPaintStrategy" specification="_KkykIGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmRK0Ws2EeW5VufirDXdmA" type="_Kkx9EGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 1, 1);&#xD;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmRx4Gs2EeW5VufirDXdmA" name="BallPaintStrategy" specification="_Kl1F8Ws2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmRx4Ws2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmRx4ms2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx42s2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx5Gs2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx5Ws2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx5ms2EeW5VufirDXdmA" type="_Kkx9EGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, BallShapeFactory.Singleton.makeShape(x,y,width,height));&#xD;
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KkykIGs2EeW5VufirDXdmA" name="BallPaintStrategy" method="_KmRK0Gs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_KkzLMGs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KkzLMWs2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KkzLMms2EeW5VufirDXdmA" type="_Kkx9EGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kl1F8Ws2EeW5VufirDXdmA" name="BallPaintStrategy" method="_KmRx4Gs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kl1tBGs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kl1tBWs2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kl1F8ms2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_Kl1tAGs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl1tAWs2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl1tAms2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl1tA2s2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl1tBms2EeW5VufirDXdmA" type="_Kkx9EGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk0ZUGs2EeW5VufirDXdmA" name="EllipsePaintStrategy">
            <ownedComment xmi:id="_KmUOIWs2EeW5VufirDXdmA">
              <body>Paint strategy to paint an ellipse shape</body>
            </ownedComment>
            <generalization xmi:id="_KmE9kGs2EeW5VufirDXdmA" general="_Kl0e4Gs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmRx52s2EeW5VufirDXdmA" name="EllipsePaintStrategy" specification="_Kk0ZUWs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmRx6Gs2EeW5VufirDXdmA" type="_Kk0ZUGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);&#xD;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmRx6Ws2EeW5VufirDXdmA" name="EllipsePaintStrategy" specification="_Kl2UEGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmRx6ms2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmRx62s2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx7Gs2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx7Ws2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx7ms2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmRx72s2EeW5VufirDXdmA" type="_Kk0ZUGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, EllipseShapeFactory.Singleton.makeShape(x,y,width,height));&#xD;
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk0ZUWs2EeW5VufirDXdmA" name="EllipsePaintStrategy" method="_KmRx52s2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk1AYGs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk1AYWs2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kk1AYms2EeW5VufirDXdmA" type="_Kk0ZUGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kl2UEGs2EeW5VufirDXdmA" name="EllipsePaintStrategy" method="_KmRx6Ws2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kl2UFms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kl2UF2s2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kl2UEWs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_Kl2UEms2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl2UE2s2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl2UFGs2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl2UFWs2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl2UGGs2EeW5VufirDXdmA" type="_Kk0ZUGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk1ncGs2EeW5VufirDXdmA" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_KmUOIms2EeW5VufirDXdmA">
              <body>concrete paint strategy to paint a fish shape</body>
            </ownedComment>
            <generalization xmi:id="_KmE9kWs2EeW5VufirDXdmA" general="_Kl0e4Gs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmRx8Gs2EeW5VufirDXdmA" name="Fish1PaintStrategy" specification="_Kk2OgGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmRx8Ws2EeW5VufirDXdmA" type="_Kk1ncGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0.0, 0.0, 2.0/3.0, 4.0/3.0);&#xD;
	  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmSY8Gs2EeW5VufirDXdmA" name="Fish1PaintStrategy" specification="_Kl27IGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmSY8Ws2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmSY8ms2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmSY82s2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmSY9Gs2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmSY9Ws2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmSY9ms2EeW5VufirDXdmA" type="_Kk1ncGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PolygonFactory().makeShape(x,y,width,height));&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk2OgGs2EeW5VufirDXdmA" name="Fish1PaintStrategy" method="_KmRx8Gs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk2OgWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk21kGs2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kk21kWs2EeW5VufirDXdmA" type="_Kk1ncGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kl27IGs2EeW5VufirDXdmA" name="Fish1PaintStrategy" method="_KmSY8Gs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kl3iNWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kl3iNms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kl3iMGs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_Kl3iMWs2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl3iMms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl3iM2s2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl3iNGs2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl3iN2s2EeW5VufirDXdmA" type="_Kk1ncGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk3coGs2EeW5VufirDXdmA" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_KmUOI2s2EeW5VufirDXdmA">
              <body>multi paint strategy to paint a fish with black eye</body>
            </ownedComment>
            <generalization xmi:id="_KmFkoGs2EeW5VufirDXdmA" general="_Kl7zo2s2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_KmLrQGs2EeW5VufirDXdmA" name="strat1" visibility="private" isStatic="true" type="_Kl7MkWs2EeW5VufirDXdmA" association="_KmoXMGs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmLrQWs2EeW5VufirDXdmA" value="new Fish1PaintStrategy()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmMSUWs2EeW5VufirDXdmA" name="strat2" visibility="private" isStatic="true" type="_Kl7MkWs2EeW5VufirDXdmA" association="_KmplUWs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmMSUms2EeW5VufirDXdmA" value="new FixedColorDecoratorPaintStrategy(Color.black, new EllipsePaintStrategy(new AffineTransform(), 1.8, 1.0, 1.0/3.0, 1.0/3.0))"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmSY92s2EeW5VufirDXdmA" name="paintCfg" specification="_Kl9o0Ws2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmSY-Gs2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmSY-Ws2EeW5VufirDXdmA" name="host" type="_BG8JoWs2EeW5VufirDXdmA"/>
              <language>java</language>
              <body>super.paintCfg(g, host);&#xD;
		if(Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x))> Math.PI/2.0) {&#xD;
			at.scale(1.0, -1.0);&#xD;
	    }&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmSY-ms2EeW5VufirDXdmA" name="NiceFishPaintStrategy" specification="_Kk4qwGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmSY-2s2EeW5VufirDXdmA" type="_Kk3coGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(strat1, strat2);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk4qwGs2EeW5VufirDXdmA" name="NiceFishPaintStrategy" method="_KmSY-ms2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk4qwWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk4qwms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_KmUOJWs2EeW5VufirDXdmA">
                <body>No-parameter constructor that instantiates the AffineTransform for internal use.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Kk4qw2s2EeW5VufirDXdmA" type="_Kk3coGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kl9o0Ws2EeW5VufirDXdmA" name="paintCfg" visibility="protected" method="_KmSY92s2EeW5VufirDXdmA">
              <ownedComment xmi:id="_KmUOJGs2EeW5VufirDXdmA">
                <body>Override paintCfg to add the transform needed to keep the fish upright at all times.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Kl9o0ms2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_Kl9o02s2EeW5VufirDXdmA" name="host" type="_BG8JoWs2EeW5VufirDXdmA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk544Gs2EeW5VufirDXdmA" name="RectanglePaintStrategy">
            <ownedComment xmi:id="_KmUOJms2EeW5VufirDXdmA">
              <body>Paint strategy to paint a rectangle shape</body>
            </ownedComment>
            <generalization xmi:id="_KmGLsGs2EeW5VufirDXdmA" general="_Kl0e4Gs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmSY_Gs2EeW5VufirDXdmA" name="RectanglePaintStrategy" specification="_Kk6f8Gs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmSY_Ws2EeW5VufirDXdmA" type="_Kk544Gs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0/3, 2.0/3);&#xD;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTAAGs2EeW5VufirDXdmA" name="RectanglePaintStrategy" specification="_Kl-P4Gs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTAAWs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmTAAms2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmTAA2s2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmTABGs2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmTABWs2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KmTABms2EeW5VufirDXdmA" type="_Kk544Gs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));&#xD;
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk6f8Gs2EeW5VufirDXdmA" name="RectanglePaintStrategy" method="_KmSY_Gs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk6f8Ws2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk6f8ms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kk7HAGs2EeW5VufirDXdmA" type="_Kk544Gs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kl-P4Gs2EeW5VufirDXdmA" name="RectanglePaintStrategy" method="_KmTAAGs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kl-29Ws2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kl-29ms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kl-28Gs2EeW5VufirDXdmA" name="at" type="_JUJboGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_Kl-28Ws2EeW5VufirDXdmA" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl-28ms2EeW5VufirDXdmA" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl-282s2EeW5VufirDXdmA" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl-29Gs2EeW5VufirDXdmA" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kl-292s2EeW5VufirDXdmA" type="_Kk544Gs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk7uEGs2EeW5VufirDXdmA" name="SheepImagePaintStrategy">
            <ownedComment xmi:id="_KmUOJ2s2EeW5VufirDXdmA">
              <body>paint strategy that paints a running sheep image</body>
            </ownedComment>
            <generalization xmi:id="_KmGywGs2EeW5VufirDXdmA" general="_Kl_eAGs2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_KmM5YGs2EeW5VufirDXdmA" name="filename" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmM5YWs2EeW5VufirDXdmA" value="&quot;images/sheep_animate.gif&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmM5Yms2EeW5VufirDXdmA" name="at" visibility="private" isStatic="true" type="_JUJboGs2EeW5VufirDXdmA" association="_KmqMYGs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmM5Y2s2EeW5VufirDXdmA" value="new AffineTransform()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmNgcWs2EeW5VufirDXdmA" name="fillFactor" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmNgcms2EeW5VufirDXdmA" value="1.0"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTAB2s2EeW5VufirDXdmA" name="SheepImagePaintStrategy" specification="_Kk8VIGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTACGs2EeW5VufirDXdmA" type="_Kk7uEGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, filename, fillFactor);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk8VIGs2EeW5VufirDXdmA" name="SheepImagePaintStrategy" method="_KmTAB2s2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk8VIWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk8VIms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_KmUOKGs2EeW5VufirDXdmA">
                <body>Constructor that loads the sheep image</body>
              </ownedComment>
              <ownedParameter xmi:id="_Kk8VI2s2EeW5VufirDXdmA" type="_Kk7uEGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk9jQGs2EeW5VufirDXdmA" name="SoccerImagePaintStrategy">
            <ownedComment xmi:id="_KmUOKWs2EeW5VufirDXdmA">
              <body>strategy that paints a FIFA soccer ball image on the screen&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <generalization xmi:id="_KmHZ0Gs2EeW5VufirDXdmA" general="_Kl_eAGs2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_KmOHgGs2EeW5VufirDXdmA" name="filename" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmOHgWs2EeW5VufirDXdmA" value="&quot;images/FIFA_Soccer_Ball.png&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmOHgms2EeW5VufirDXdmA" name="at" visibility="private" isStatic="true" type="_JUJboGs2EeW5VufirDXdmA" association="_KmqMY2s2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmOHg2s2EeW5VufirDXdmA" value="new AffineTransform()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmOukWs2EeW5VufirDXdmA" name="fillFactor" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmOukms2EeW5VufirDXdmA" value="0.7"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTACWs2EeW5VufirDXdmA" name="SoccerImagePaintStrategy" specification="_Kk-KUGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTACms2EeW5VufirDXdmA" type="_Kk9jQGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, filename, fillFactor);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk-KUGs2EeW5VufirDXdmA" name="SoccerImagePaintStrategy" method="_KmTACWs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk-KUWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk-KUms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_KmUOKms2EeW5VufirDXdmA">
                <body>Constructor that loads the soccer ball image</body>
              </ownedComment>
              <ownedParameter xmi:id="_Kk-KU2s2EeW5VufirDXdmA" type="_Kk9jQGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kk-xYGs2EeW5VufirDXdmA" name="SonicImagePaintStrategy">
            <ownedComment xmi:id="_KmUOK2s2EeW5VufirDXdmA">
              <body>strategy that paints a running man on the screen&#xD;
@author caojian&#xD;
 *</body>
            </ownedComment>
            <generalization xmi:id="_KmIA4Gs2EeW5VufirDXdmA" general="_Kl_eAGs2EeW5VufirDXdmA"/>
            <ownedAttribute xmi:id="_KmPVoGs2EeW5VufirDXdmA" name="filename" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmPVoWs2EeW5VufirDXdmA" value="&quot;images/sonic_animate.gif&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmPVoms2EeW5VufirDXdmA" name="at" visibility="private" isStatic="true" type="_JUJboGs2EeW5VufirDXdmA" association="_KmqzcWs2EeW5VufirDXdmA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmPVo2s2EeW5VufirDXdmA" value="new AffineTransform()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KmP8sWs2EeW5VufirDXdmA" name="fillFactor" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmP8sms2EeW5VufirDXdmA" value="1.0"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTnEGs2EeW5VufirDXdmA" name="SonicImagePaintStrategy" specification="_Kk__gGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTnEWs2EeW5VufirDXdmA" type="_Kk-xYGs2EeW5VufirDXdmA" direction="return"/>
              <language>java</language>
              <body>super(at, filename, fillFactor);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kk__gGs2EeW5VufirDXdmA" name="SonicImagePaintStrategy" method="_KmTnEGs2EeW5VufirDXdmA">
              <eAnnotations xmi:id="_Kk__gWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kk__gms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_KmU1MGs2EeW5VufirDXdmA">
                <body>Constructor that loads image</body>
              </ownedComment>
              <ownedParameter xmi:id="_Kk__g2s2EeW5VufirDXdmA" type="_Kk-xYGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KlAmkGs2EeW5VufirDXdmA" name="SquarePaintStrategy">
            <ownedComment xmi:id="_KmU1MWs2EeW5VufirDXdmA">
              <body>Paint strategy that paints a filled square with the Ball's radius.&#xD;
This functionality is duplicated by the RectanglePaintStrategy.&#xD;
The class demonstrates a direct implementation of IPaintStrategy.</body>
            </ownedComment>
            <interfaceRealization xmi:id="_KmIn8Gs2EeW5VufirDXdmA" client="_KlAmkGs2EeW5VufirDXdmA" supplier="_KmBTMGs2EeW5VufirDXdmA" contract="_KmBTMGs2EeW5VufirDXdmA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTnEms2EeW5VufirDXdmA" name="paint" specification="_KmLEMGs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTnE2s2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmTnFGs2EeW5VufirDXdmA" name="host" type="_BG8JoWs2EeW5VufirDXdmA"/>
              <language>java</language>
              <body>int halfSide = host.getDimension().x;&#xD;
	    g.setColor(host.getColor());&#xD;
	    g.fillRect(host.getLocation().x-halfSide, host.getLocation().y-halfSide, 2*halfSide, 2*halfSide);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KmTnFWs2EeW5VufirDXdmA" name="init" specification="_KmB6QWs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmTnFms2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
              <language>java</language>
              <body>context.setPaintStrategy(this);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KlBNoGs2EeW5VufirDXdmA" name="SquarePaintStrategy">
              <eAnnotations xmi:id="_KlBNoWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KlBNoms2EeW5VufirDXdmA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KlB0sWs2EeW5VufirDXdmA" type="_KlAmkGs2EeW5VufirDXdmA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KmB6QWs2EeW5VufirDXdmA" name="init" method="_KmTnFWs2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmChUGs2EeW5VufirDXdmA" name="context" type="_BG8JoWs2EeW5VufirDXdmA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KmLEMGs2EeW5VufirDXdmA" name="paint" method="_KmTnEms2EeW5VufirDXdmA">
              <ownedParameter xmi:id="_KmLEMWs2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
              <ownedParameter xmi:id="_KmLEMms2EeW5VufirDXdmA" name="host" type="_BG8JoWs2EeW5VufirDXdmA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_KmoXMGs2EeW5VufirDXdmA" name="" memberEnd="_KmoXMWs2EeW5VufirDXdmA _KmLrQGs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_KmoXMWs2EeW5VufirDXdmA" name="" type="_Kk3coGs2EeW5VufirDXdmA" association="_KmoXMGs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_KmplUWs2EeW5VufirDXdmA" name="" memberEnd="_KmplUms2EeW5VufirDXdmA _KmMSUWs2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_KmplUms2EeW5VufirDXdmA" name="" type="_Kk3coGs2EeW5VufirDXdmA" association="_KmplUWs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_KmqMYGs2EeW5VufirDXdmA" name="" memberEnd="_KmqMYWs2EeW5VufirDXdmA _KmM5Yms2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_KmqMYWs2EeW5VufirDXdmA" name="" type="_Kk7uEGs2EeW5VufirDXdmA" association="_KmqMYGs2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_KmqMY2s2EeW5VufirDXdmA" name="" memberEnd="_KmqMZGs2EeW5VufirDXdmA _KmOHgms2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_KmqMZGs2EeW5VufirDXdmA" name="" type="_Kk9jQGs2EeW5VufirDXdmA" association="_KmqMY2s2EeW5VufirDXdmA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_KmqzcWs2EeW5VufirDXdmA" name="" memberEnd="_Kmqzcms2EeW5VufirDXdmA _KmPVoms2EeW5VufirDXdmA">
            <ownedEnd xmi:id="_Kmqzcms2EeW5VufirDXdmA" name="" type="_Kk-xYGs2EeW5VufirDXdmA" association="_KmqzcWs2EeW5VufirDXdmA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_KkisgGs2EeW5VufirDXdmA" name="painting">
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl0e4Gs2EeW5VufirDXdmA" name="ShapePaintStrategy"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl7MkWs2EeW5VufirDXdmA" name="APaintStrategy"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl7zoWs2EeW5VufirDXdmA" name="FixedColorDecoratorPaintStrategy"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl7zo2s2EeW5VufirDXdmA" name="MultiPaintStrategy"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl_eAGs2EeW5VufirDXdmA" name="ImagePaintStrategy"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KmBTMGs2EeW5VufirDXdmA" name="IPaintStrategy"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SDSWAWs2EeW5VufirDXdmA" name="BallWorldModel">
        <ownedComment xmi:id="_TlrV0Gs2EeW5VufirDXdmA">
          <body>The model that represents the balls and their associated control systems. &#xD;
The balls are held by a Dispatcher which is used for all communications to the balls.&#xD;
Uses a Timer object to update the model and the view at a regular time slice. &#xD;
This will give the effect of animation&#xD;
@author caojian&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Tlhk0Gs2EeW5VufirDXdmA" name="_dispatcher" visibility="private" type="_BGzmwGs2EeW5VufirDXdmA" association="_Tlsj8Gs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TliL4Ws2EeW5VufirDXdmA" value="new SetDispatcherSequential&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tliy8Gs2EeW5VufirDXdmA" name="_viewCtrlAdapter" visibility="private" type="_SDTkIWs2EeW5VufirDXdmA" association="_TltLAWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tliy8Ws2EeW5VufirDXdmA" value="IViewCtrlAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tliy82s2EeW5VufirDXdmA" name="_viewUpdateAdapter" visibility="private" type="_SDULMWs2EeW5VufirDXdmA" association="_TltyEWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tliy9Gs2EeW5VufirDXdmA" value="IViewUpdateAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_TljaAWs2EeW5VufirDXdmA" name="UPDATE_TIME_SLICE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TljaAms2EeW5VufirDXdmA" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_TlkBEGs2EeW5VufirDXdmA" name="updateTimer" visibility="private" type="_TlWlsGs2EeW5VufirDXdmA" association="_TlvAMWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TlkBEWs2EeW5VufirDXdmA" value="new Timer(UPDATE_TIME_SLICE, e -> {&#xD;&#xA;&#x9;    _dispatcher.dispatch((context, disp) -> {&#xD;&#xA;            context.move();&#xD;&#xA;            context.bounce();&#xD;&#xA;            context.changeState(disp);&#xD;&#xA;        });&#xD;&#xA;&#x9;})"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tll2QGs2EeW5VufirDXdmA" name="PAINT_TIME_SLICE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tll2QWs2EeW5VufirDXdmA" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tll2Qms2EeW5VufirDXdmA" name="paintTimer" visibility="private" type="_TlWlsGs2EeW5VufirDXdmA" association="_TlwOUWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tll2Q2s2EeW5VufirDXdmA" value="new Timer(PAINT_TIME_SLICE, e -> _viewUpdateAdapter.updatePaint())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_TlmdUGs2EeW5VufirDXdmA" name="mySwitcherStrategy" visibility="private" type="_BEPa8Gs2EeW5VufirDXdmA" association="_Tlw1YWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TlmdUms2EeW5VufirDXdmA" value="new SwitcherStrategy&lt;>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_TlnEYWs2EeW5VufirDXdmA" name="errorUpdateStrategyFac" visibility="private" type="_BDoW8Gs2EeW5VufirDXdmA" association="_TlxccGs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TlnrcWs2EeW5VufirDXdmA" value="new IUpdateStrategyFac&lt;IBallCmd>(){&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; @Override&#xD;&#xA;&#x9;    /**&#xD;&#xA;&#x9;     * Make the beeping error strategy&#xD;&#xA;&#x9;     * @return  An instance of a beeping error strategy&#xD;&#xA;&#x9;     */&#xD;&#xA;        public IUpdateStrategy&lt;IBallCmd> make() {&#xD;&#xA;            return new IUpdateStrategy&lt;IBallCmd>() {&#xD;&#xA;            &#x9;&#xD;&#xA;                private int count = 0; // update counter&#xD;&#xA;                &#xD;&#xA;                @Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball context) {}&#xD;&#xA;                &#xD;&#xA;                @Override&#xD;&#xA;                /**&#xD;&#xA;                 * Beep the speaker every 25 updates&#xD;&#xA;                 */&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball context, IDispatcher&lt;IBallCmd> dispatcher) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xD;&#xA;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xD;&#xA;                        count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tlnrc2s2EeW5VufirDXdmA" name="errorPaintStrategyFac" visibility="private" type="_SDS9EWs2EeW5VufirDXdmA" association="_Tlxcc2s2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_TloSgGs2EeW5VufirDXdmA" value="new IPaintStrategyFac() {&#xD;&#xA;        &#xD;&#xA;        @Override&#xD;&#xA;        public IPaintStrategy make() {&#xD;&#xA;            return IPaintStrategy.NULL_OBJECT;&#xD;&#xA;        }&#xD;&#xA;    }"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlo5kGs2EeW5VufirDXdmA" name="loadStrategy" specification="_Tj-ssGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Tlo5kWs2EeW5VufirDXdmA" name="fullClassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Tlo5kms2EeW5VufirDXdmA" type="_BDhpQGs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>try {&#xD;
			Object[] args = new Object[] {}; // YOUR CONSTRUCTOR MAY BE DIFFERENT!!   The supplied values here may be fields, input parameters, random values, etc.&#xD;
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(fullClassName).getConstructors(); // get all the constructors&#xD;
			java.lang.reflect.Constructor&lt;?> c = null;&#xD;
			for (int i = 0; i &lt; cs.length; i++) { // find the first constructor with the right number of input parameters&#xD;
				if (args.length == (cs[i]).getParameterTypes().length) {&#xD;
					c = cs[i];&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			return (IUpdateStrategy&lt;IBallCmd>) c.newInstance(args); // Call the constructor.   Will throw a null ptr exception if no constructor with the right number of input parameters was found.&#xD;
		} catch (Exception ex) {&#xD;
			System.err.println(&quot;Strategy &quot; + fullClassName + &quot; failed to load. \nException = \n&quot; + ex);&#xD;
			ex.printStackTrace(); // print the stack trace to help in debugging.&#xD;
			return (IUpdateStrategy&lt;IBallCmd>) errorUpdateStrategyFac; &#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlo5k2s2EeW5VufirDXdmA" name="fixName" specification="_TkBwAGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Tlo5lGs2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Tlo5lWs2EeW5VufirDXdmA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.strategy.&quot;+classname+&quot;Strategy&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlo5lms2EeW5VufirDXdmA" name="loadPaintStrategy" specification="_TkCXEGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Tlo5l2s2EeW5VufirDXdmA" name="fullClassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Tlo5mGs2EeW5VufirDXdmA" type="_KmBTMGs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>try {&#xD;
			Object[] args = new Object[] {}; // YOUR CONSTRUCTOR MAY BE DIFFERENT!!   The supplied values here may be fields, input parameters, random values, etc.&#xD;
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(fullClassName).getConstructors(); // get all the constructors&#xD;
			java.lang.reflect.Constructor&lt;?> c = null;&#xD;
			for (int i = 0; i &lt; cs.length; i++) { // find the first constructor with the right number of input parameters&#xD;
				if (args.length == (cs[i]).getParameterTypes().length) {&#xD;
					c = cs[i];&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			return (IPaintStrategy) c.newInstance(args); // Call the constructor.   Will throw a null ptr exception if no constructor with the right number of input parameters was found.&#xD;
		} catch (Exception ex) {&#xD;
			System.err.println(&quot;Paint strategy &quot; + fullClassName + &quot; failed to load. \nException = \n&quot; + ex);&#xD;
			ex.printStackTrace(); // print the stack trace to help in debugging.&#xD;
			return errorPaintStrategyFac.make();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlo5mWs2EeW5VufirDXdmA" name="BallWorldModel" specification="_TlZpAGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Tlo5mms2EeW5VufirDXdmA" name="viewCtrlAdapter" type="_SDTkIWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Tlo5m2s2EeW5VufirDXdmA" name="viewUpdateAdapter" type="_SDULMWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_Tlo5nGs2EeW5VufirDXdmA" type="_SDSWAWs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>_viewCtrlAdapter = viewCtrlAdapter;&#xD;
		_viewUpdateAdapter = viewUpdateAdapter;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlpgoGs2EeW5VufirDXdmA" name="makeStrategyFac" specification="_TkC-IGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlpgoWs2EeW5VufirDXdmA" name="classname">
            <eAnnotations xmi:id="_Tlpgoms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Tlpgo2s2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlpgpGs2EeW5VufirDXdmA" type="_BDoW8Gs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>if (null == classname) {&#xD;
	        return errorUpdateStrategyFac;&#xD;
	    }&#xD;
	    return new IUpdateStrategyFac&lt;IBallCmd>() {&#xD;
	        /**&#xD;
	         * Instantiate a strategy corresponding to the given class name.&#xD;
	         * @return An IUpdateStrategy instance&#xD;
	         */&#xD;
	        public IUpdateStrategy&lt;IBallCmd> make() {&#xD;
	            return loadStrategy(fixName(classname));&#xD;
	        }&#xD;
&#xD;
	        /**&#xD;
	         * Return the given class name string&#xD;
	         */&#xD;
	        @Override&#xD;
	        public String toString() {&#xD;
	            return classname;&#xD;
	        }&#xD;
	    };&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlqHsGs2EeW5VufirDXdmA" name="combineStrategyFacs" specification="_TlaQEWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlqHsWs2EeW5VufirDXdmA" name="stratFac1" type="_BDoW8Gs2EeW5VufirDXdmA">
            <eAnnotations xmi:id="_TlqHsms2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_TlqHs2s2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_TlqHtGs2EeW5VufirDXdmA" name="stratFac2" type="_BDoW8Gs2EeW5VufirDXdmA">
            <eAnnotations xmi:id="_TlqHtWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_TlqHtms2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_TlqHt2s2EeW5VufirDXdmA" type="_BDoW8Gs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {&#xD;
	        return errorUpdateStrategyFac;&#xD;
	    }&#xD;
	    &#xD;
	    return new IUpdateStrategyFac&lt;IBallCmd>() {&#xD;
	        /**&#xD;
	         * Instantiate a new MultiStrategy with the strategies from the given strategy factories&#xD;
	         * @return A MultiStrategy instance&#xD;
	         */&#xD;
	        public IUpdateStrategy&lt;IBallCmd> make() {&#xD;
	            return new MultiStrategy&lt;IBallCmd>(stratFac1.make(), stratFac2.make());&#xD;
	        }&#xD;
&#xD;
	        /**&#xD;
	         * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;&#xD;
	         */&#xD;
	        public String toString() {&#xD;
	            return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();&#xD;
	        }&#xD;
	    };&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlqHuGs2EeW5VufirDXdmA" name="switchStrategy" specification="_TlcFQWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlqHuWs2EeW5VufirDXdmA" name="strategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>mySwitcherStrategy.setStrategy(strategy);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlqHums2EeW5VufirDXdmA" name="makePaintStrategyFac" specification="_TkEzUGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlqHu2s2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlqHvGs2EeW5VufirDXdmA" type="_SDS9EWs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>if (classname == null) {&#xD;
	        return errorPaintStrategyFac;&#xD;
	    }&#xD;
	    &#xD;
	    return new IPaintStrategyFac() {&#xD;
	        /**&#xD;
	         * Instantiate a strategy corresponding to the given class name.&#xD;
	         * @return An IUpdateStrategy instance&#xD;
	         */&#xD;
	        public IPaintStrategy make() {&#xD;
	            return loadPaintStrategy(&quot;model.paint.strategy.&quot;+classname+&quot;PaintStrategy&quot;);&#xD;
	        }&#xD;
&#xD;
	        /**&#xD;
	         * Return the given class name string&#xD;
	         */&#xD;
	        @Override&#xD;
	        public String toString() {&#xD;
	            return classname;&#xD;
	        }&#xD;
	    };&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlqHvWs2EeW5VufirDXdmA" name="makeSprite" specification="_TlcsUms2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlqHvms2EeW5VufirDXdmA" name="updateStrategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_TlqHv2s2EeW5VufirDXdmA" name="paintStrategy" type="_KmBTMGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>JPanel canvas = _viewCtrlAdapter.getPanel();&#xD;
     Randomizer rd = Randomizer.Singleton;&#xD;
     Color color = rd.randomColor();&#xD;
     int size = rd.randomInt(10, 20);&#xD;
     Point dimension = new Point(size,size);&#xD;
     Point velocity = new Point(rd.randomInt(0, 10),rd.randomInt(0, 10));&#xD;
     Point location = new Point(rd.randomInt(0, canvas.getWidth()), rd.randomInt(0, canvas.getHeight()));&#xD;
             &#xD;
     Ball myBall = new Ball(color, dimension, location, velocity, canvas, updateStrategy, paintStrategy);&#xD;
		_dispatcher.addObserver(myBall);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlquwGs2EeW5VufirDXdmA" name="makeSwitcher" specification="_TldTYWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlquwWs2EeW5VufirDXdmA" name="paintStrategy" type="_KmBTMGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>JPanel canvas = _viewCtrlAdapter.getPanel();&#xD;
     &#xD;
     Randomizer rd = Randomizer.Singleton;&#xD;
     Color color = rd.randomColor();&#xD;
     Point velocity = new Point(rd.randomInt(10, 20),rd.randomInt(10, 20));&#xD;
     int size = rd.randomInt(10, 20);&#xD;
     Point dimension = new Point(size,size);         &#xD;
     Point location = new Point(rd.randomInt(0, canvas.getWidth()), rd.randomInt(0, canvas.getHeight()));&#xD;
      &#xD;
     Ball myBall = new Ball(color, dimension, location, velocity, canvas, mySwitcherStrategy, paintStrategy);&#xD;
		_dispatcher.addObserver(myBall);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlquwms2EeW5VufirDXdmA" name="deleteSprites" specification="_TkFaYGs2EeW5VufirDXdmA">
          <language>java</language>
          <body>_dispatcher.deleteObservers();&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tlquw2s2EeW5VufirDXdmA" name="start" specification="_TkGBcGs2EeW5VufirDXdmA">
          <language>java</language>
          <body>updateTimer.start();&#xD;
		paintTimer.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TlquxGs2EeW5VufirDXdmA" name="updatePaint" specification="_Tld6cWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_TlquxWs2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
          <language>java</language>
          <body>_dispatcher.dispatch((context, disp) -> {&#xD;
         context.updatePaint(g, context);&#xD;
     });&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Tj-ssGs2EeW5VufirDXdmA" name="loadStrategy" visibility="private" method="_Tlo5kGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_Tj_TwGs2EeW5VufirDXdmA" name="fullClassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlZB8Gs2EeW5VufirDXdmA" type="_BDhpQGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TkBwAGs2EeW5VufirDXdmA" name="fixName" visibility="private" method="_Tlo5k2s2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV0ms2EeW5VufirDXdmA">
            <body>return full name of the strategy&#xD;
	 * @param classname The class name&#xD;
	 * @return The full name of the strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_TkBwAWs2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TkBwAms2EeW5VufirDXdmA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_TkCXEGs2EeW5VufirDXdmA" name="loadPaintStrategy" visibility="private" method="_Tlo5lms2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV02s2EeW5VufirDXdmA">
            <body>generate a strategy instance&#xD;
	 * @param fullClassName the full classname of the strategy&#xD;
	 * @return a strategy instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_TkCXEWs2EeW5VufirDXdmA" name="fullClassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlZB8Ws2EeW5VufirDXdmA" type="_KmBTMGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TkC-IGs2EeW5VufirDXdmA" name="makeStrategyFac" method="_TlpgoGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV1Ws2EeW5VufirDXdmA">
            <body>Returns an IStrategyFac that can instantiate the strategy specified by&#xD;
	 * classname. Returns a factory for a beeping error strategy if classname is null. &#xD;
	 * The toString() of the returned factory is the classname.&#xD;
	 * &#xD;
	 * @param classname  Shortened name of desired strategy&#xD;
	 * @return A factory to make that strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_TkDlMGs2EeW5VufirDXdmA" name="classname">
            <eAnnotations xmi:id="_TkEMQWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_TkEMQms2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlaQEGs2EeW5VufirDXdmA" type="_BDoW8Gs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TkEzUGs2EeW5VufirDXdmA" name="makePaintStrategyFac" method="_TlqHums2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV2Gs2EeW5VufirDXdmA">
            <body>Make a paint strategy factory&#xD;
	 * @param classname The class name&#xD;
	 * @return The paint stratgegy factory</body>
          </ownedComment>
          <ownedParameter xmi:id="_TkEzUWs2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_TlcsUWs2EeW5VufirDXdmA" type="_SDS9EWs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TkFaYGs2EeW5VufirDXdmA" name="deleteSprites" method="_Tlquwms2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV22s2EeW5VufirDXdmA">
            <body>delete all balls</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_TkGBcGs2EeW5VufirDXdmA" name="start" method="_Tlquw2s2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV3Gs2EeW5VufirDXdmA">
            <body>start the timer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_TlZpAGs2EeW5VufirDXdmA" name="BallWorldModel" method="_Tlo5mWs2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_TlZpA2s2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_TlZpBGs2EeW5VufirDXdmA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_TlrV1Gs2EeW5VufirDXdmA">
            <body>The constructor&#xD;
	 * @param viewCtrlAdapter The view control adapter&#xD;
	 * @param viewUpdateAdapter The view update adapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_TlZpAWs2EeW5VufirDXdmA" name="viewCtrlAdapter" type="_SDTkIWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_TlZpAms2EeW5VufirDXdmA" name="viewUpdateAdapter" type="_SDULMWs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_TlZpBWs2EeW5VufirDXdmA" type="_SDSWAWs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TlaQEWs2EeW5VufirDXdmA" name="combineStrategyFacs" method="_TlqHsGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV1ms2EeW5VufirDXdmA">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two&#xD;
	 * strategies made by the two given IStrategyFac objects. Returns null if&#xD;
	 * either supplied factory is null. The toString() of the returned factory&#xD;
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. &#xD;
	 * If either factory is null, then a factory for a beeping error strategy is returned.&#xD;
	 * &#xD;
	 * @param stratFac1 An IStrategyFac for a strategy&#xD;
	 * @param stratFac2 An IStrategyFac for a strategy&#xD;
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_TlaQEms2EeW5VufirDXdmA" name="stratFac1" type="_BDoW8Gs2EeW5VufirDXdmA">
            <eAnnotations xmi:id="_Tla3Ims2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Tla3I2s2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_TlaQE2s2EeW5VufirDXdmA" name="stratFac2" type="_BDoW8Gs2EeW5VufirDXdmA">
            <eAnnotations xmi:id="_TlbeMWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_TlbeMms2EeW5VufirDXdmA" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_Tla3IWs2EeW5VufirDXdmA" type="_BDoW8Gs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TlcFQWs2EeW5VufirDXdmA" name="switchStrategy" method="_TlqHuGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV12s2EeW5VufirDXdmA">
            <body>change the strategy of the switcher&#xD;
	 * @param strategy The update strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_TlcFQms2EeW5VufirDXdmA" name="strategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TlcsUms2EeW5VufirDXdmA" name="makeSprite" method="_TlqHvWs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV2Ws2EeW5VufirDXdmA">
            <body>make a ball with given strategy&#xD;
	 * @param updateStrategy The update strategy&#xD;
	 * @param paintStrategy The paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_TlcsU2s2EeW5VufirDXdmA" name="updateStrategy" type="_BDhpQGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_TlcsVGs2EeW5VufirDXdmA" name="paintStrategy" type="_KmBTMGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_TldTYWs2EeW5VufirDXdmA" name="makeSwitcher" method="_TlquwGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV2ms2EeW5VufirDXdmA">
            <body> make a switcher&#xD;
	 * @param paintStrategy The selected paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_Tld6cGs2EeW5VufirDXdmA" name="paintStrategy" type="_KmBTMGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Tld6cWs2EeW5VufirDXdmA" name="updatePaint" method="_TlquxGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_TlrV3Ws2EeW5VufirDXdmA">
            <body>The update paint strategy&#xD;
	 * @param g The Graphics to paint</body>
          </ownedComment>
          <ownedParameter xmi:id="_Tld6cms2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_SDS9EWs2EeW5VufirDXdmA" name="IPaintStrategyFac"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_SDTkIWs2EeW5VufirDXdmA" name="IViewCtrlAdapter">
        <ownedComment xmi:id="_eAZBMGs2EeW5VufirDXdmA">
          <body>The communications interface the model uses to talk to the view for non-repetitive &#xD;
control tasks such as getting information for the instantiation of a ball.&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_eAOpIGs2EeW5VufirDXdmA" name="panel" type="_SDRu8Ws2EeW5VufirDXdmA" isReadOnly="true" association="_eAZoQWs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_eAPQMGs2EeW5VufirDXdmA" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_SDTkIWs2EeW5VufirDXdmA" isReadOnly="true" association="_eAa2YWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_eAPQMWs2EeW5VufirDXdmA" value="new IViewCtrlAdapter() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public JPanel getPanel() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_SDULMWs2EeW5VufirDXdmA" name="IViewUpdateAdapter">
        <ownedComment xmi:id="_eAZBMWs2EeW5VufirDXdmA">
          <body>This interface is used for the fast, repetitive updating communications to the model,&#xD;
 such as those needed during a timer tick.&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_eAP3QWs2EeW5VufirDXdmA" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_SDULMWs2EeW5VufirDXdmA" isReadOnly="true" association="_eAbdcGs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_eAP3Qms2EeW5VufirDXdmA" value="new IViewUpdateAdapter() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void updatePaint() {}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_eAP3QGs2EeW5VufirDXdmA" name="updatePaint">
          <ownedComment xmi:id="_eAZoQGs2EeW5VufirDXdmA">
            <body>Update the view, in response to a timer tick event.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Tlsj8Gs2EeW5VufirDXdmA" name="" memberEnd="_Tlsj8Ws2EeW5VufirDXdmA _Tlhk0Gs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_Tlsj8Ws2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_Tlsj8Gs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_TltLAWs2EeW5VufirDXdmA" name="" memberEnd="_TltLAms2EeW5VufirDXdmA _Tliy8Gs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TltLAms2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_TltLAWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_TltyEWs2EeW5VufirDXdmA" name="" memberEnd="_TltyEms2EeW5VufirDXdmA _Tliy82s2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TltyEms2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_TltyEWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_TlvAMWs2EeW5VufirDXdmA" name="" memberEnd="_TlvAMms2EeW5VufirDXdmA _TlkBEGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TlvAMms2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_TlvAMWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_TlwOUWs2EeW5VufirDXdmA" name="" memberEnd="_TlwOUms2EeW5VufirDXdmA _Tll2Qms2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TlwOUms2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_TlwOUWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Tlw1YWs2EeW5VufirDXdmA" name="" memberEnd="_Tlw1Yms2EeW5VufirDXdmA _TlmdUGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_Tlw1Yms2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_Tlw1YWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_TlxccGs2EeW5VufirDXdmA" name="" memberEnd="_TlxccWs2EeW5VufirDXdmA _TlnEYWs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TlxccWs2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_TlxccGs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Tlxcc2s2EeW5VufirDXdmA" name="" memberEnd="_TlxcdGs2EeW5VufirDXdmA _Tlnrc2s2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_TlxcdGs2EeW5VufirDXdmA" name="" type="_SDSWAWs2EeW5VufirDXdmA" association="_Tlxcc2s2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_eAZoQWs2EeW5VufirDXdmA" name="" memberEnd="_eAZoQms2EeW5VufirDXdmA _eAOpIGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_eAZoQms2EeW5VufirDXdmA" name="" type="_SDTkIWs2EeW5VufirDXdmA" association="_eAZoQWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_eAa2YWs2EeW5VufirDXdmA" name="" memberEnd="_eAa2Yms2EeW5VufirDXdmA _eAPQMGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_eAa2Yms2EeW5VufirDXdmA" name="" type="_SDTkIWs2EeW5VufirDXdmA" association="_eAa2YWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_eAbdcGs2EeW5VufirDXdmA" name="" memberEnd="_eAbdcWs2EeW5VufirDXdmA _eAP3QWs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_eAbdcWs2EeW5VufirDXdmA" name="" type="_SDULMWs2EeW5VufirDXdmA" association="_eAbdcGs2EeW5VufirDXdmA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BCsi0Gs2EeW5VufirDXdmA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_BCsi0Ws2EeW5VufirDXdmA" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_JTRR4Gs2EeW5VufirDXdmA" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_JUGYUGs2EeW5VufirDXdmA" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JUJboGs2EeW5VufirDXdmA" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JUNtEGs2EeW5VufirDXdmA" name="Rectangle2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BG9-0Gs2EeW5VufirDXdmA" name="Point"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JUFxQGs2EeW5VufirDXdmA" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JULQ0Gs2EeW5VufirDXdmA" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl5-cGs2EeW5VufirDXdmA" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kl9BwGs2EeW5VufirDXdmA" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SDJzIGs2EeW5VufirDXdmA" name="EventQueue"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_aFi8QGs2EeW5VufirDXdmA" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_aHBi8Ws2EeW5VufirDXdmA" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_aHCKAWs2EeW5VufirDXdmA" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHAU0Gs2EeW5VufirDXdmA" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHA74Ws2EeW5VufirDXdmA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_WkAIIGs2EeW5VufirDXdmA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_WkvH8Gs2EeW5VufirDXdmA" name="Collection"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_WkEZkGs2EeW5VufirDXdmA" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_Wk1OkGs2EeW5VufirDXdmA" name="CopyOnWriteArraySet"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BCzQgGs2EeW5VufirDXdmA" name="Point">
      <packagedElement xmi:type="uml:Class" xmi:id="_BHEsgGs2EeW5VufirDXdmA" name="Double"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SB8SMGs2EeW5VufirDXdmA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_SB8SMWs2EeW5VufirDXdmA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_aFi8QWs2EeW5VufirDXdmA" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_aHF0YWs2EeW5VufirDXdmA" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_aHGbcWs2EeW5VufirDXdmA" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_SDRu8Ws2EeW5VufirDXdmA" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TlWlsGs2EeW5VufirDXdmA" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHCKA2s2EeW5VufirDXdmA" name="BorderFactory"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHCxEWs2EeW5VufirDXdmA" name="BoxLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHDYIWs2EeW5VufirDXdmA" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHD_MWs2EeW5VufirDXdmA" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHEmQGs2EeW5VufirDXdmA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_aHFNUGs2EeW5VufirDXdmA" name="JTextField"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_aHFNUms2EeW5VufirDXdmA" name="SwingConstants"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SB85QGs2EeW5VufirDXdmA" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_SDUyQWs2EeW5VufirDXdmA" name="BallWorldGUI">
        <ownedComment xmi:id="_aHakgGs2EeW5VufirDXdmA">
          <body>The ball world view&#xD;
@author ls53@rice.edu&#xD;
@param &lt;TStrategyDropListItem> The generic type for update strategy&#xD;
@param &lt;TPaintDropListItem> The generic type for paint strategy</body>
        </ownedComment>
        <generalization xmi:id="_aHPlYGs2EeW5VufirDXdmA" general="_aHEmQGs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHT20Gs2EeW5VufirDXdmA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aHT20Ws2EeW5VufirDXdmA" value="5545354999257563085L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aHUd4Gs2EeW5VufirDXdmA" name="contentPane" visibility="private" isLeaf="true" type="_SDRu8Ws2EeW5VufirDXdmA" isReadOnly="true" association="_aHigUWs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aHUd4Ws2EeW5VufirDXdmA" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aHUd42s2EeW5VufirDXdmA" name="centerPanel" type="_SDRu8Ws2EeW5VufirDXdmA" isReadOnly="true" association="_aHjHYWs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHUd5Gs2EeW5VufirDXdmA" name="_modelCtrlAdapter" visibility="private" type="_SDVZUGs2EeW5VufirDXdmA" association="_aHjucWs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHVsAGs2EeW5VufirDXdmA" name="_modelUpdateAdapter" visibility="private" type="_SDVZUms2EeW5VufirDXdmA" association="_aHkVgGs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aHVsAWs2EeW5VufirDXdmA" value="IModelUpdateAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_aHVsA2s2EeW5VufirDXdmA" name="movingStrategy" visibility="private" type="_aHFNUGs2EeW5VufirDXdmA" association="_aHkVg2s2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHWTEWs2EeW5VufirDXdmA" name="_list1DL" visibility="private" type="_aHD_MWs2EeW5VufirDXdmA" association="_aHk8kWs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHW6Ims2EeW5VufirDXdmA" name="_list2DL" visibility="private" type="_aHD_MWs2EeW5VufirDXdmA" association="_aHljoGs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHYIQWs2EeW5VufirDXdmA" name="_list3DL" visibility="private" type="_aHD_MWs2EeW5VufirDXdmA" association="_aHljo2s2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_aHYvUms2EeW5VufirDXdmA" name="paintStrategy" visibility="private" type="_aHFNUGs2EeW5VufirDXdmA" association="_aHmKsWs2EeW5VufirDXdmA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aHZWYWs2EeW5VufirDXdmA" name="BallWorldGUI" specification="_aHHCgGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_aHZWYms2EeW5VufirDXdmA" name="_modelCtrlAdapter" type="_SDVZUGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHZWY2s2EeW5VufirDXdmA" name="_modelUpdateAdapter" type="_SDVZUms2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHZWZGs2EeW5VufirDXdmA" type="_SDUyQWs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>this._modelCtrlAdapter = _modelCtrlAdapter;&#xD;
		this._modelUpdateAdapter = _modelUpdateAdapter;&#xD;
		&#xD;
		initGUI();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aHZ9cGs2EeW5VufirDXdmA" name="initGUI" specification="_aFuicGs2EeW5VufirDXdmA">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 800, 600);&#xD;
&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
&#xD;
		JPanel northPanel = new JPanel();&#xD;
		northPanel.setBackground(Color.GREEN);&#xD;
		contentPane.add(northPanel, BorderLayout.NORTH);&#xD;
		&#xD;
		JPanel leftpanel = new JPanel();&#xD;
		northPanel.add(leftpanel);&#xD;
		leftpanel.setLayout(new BoxLayout(leftpanel, BoxLayout.Y_AXIS));&#xD;
		&#xD;
		movingStrategy = new JTextField();&#xD;
		movingStrategy.setText(&quot;Straight&quot;);&#xD;
		leftpanel.add(movingStrategy);&#xD;
		movingStrategy.setColumns(10);&#xD;
		TitledBorder title;&#xD;
		title = BorderFactory.createTitledBorder(&quot;Moving Strategy&quot;);		&#xD;
		movingStrategy.setBorder(title);&#xD;
		&#xD;
		&#xD;
		JButton btnAdd = new JButton(&quot;   Add to lists  &quot;);&#xD;
		btnAdd.setToolTipText(&quot;Click this button to add a new moving strategy to the droplist.&quot;);&#xD;
		btnAdd.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				TStrategyDropListItem o = _modelCtrlAdapter.addUpdateStrategy(movingStrategy.getText());&#xD;
				if (null == o) return; &#xD;
				_list1DL.insertItemAt(o, 0);&#xD;
				_list1DL.setSelectedItem(o);&#xD;
				_list2DL.insertItemAt(o, 0);&#xD;
				_list2DL.setSelectedItem(o);&#xD;
&#xD;
			}&#xD;
		});&#xD;
		btnAdd.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		leftpanel.add(btnAdd);&#xD;
		&#xD;
		JPanel middlepanel = new JPanel();&#xD;
		northPanel.add(middlepanel);&#xD;
		middlepanel.setLayout(new BoxLayout(middlepanel, BoxLayout.Y_AXIS));&#xD;
		&#xD;
		JButton btnMake = new JButton(&quot;Make selected ball!&quot;);&#xD;
		btnMake.setToolTipText(&quot;Click this button to make the ball with specified strategy.&quot;);&#xD;
		btnMake.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
			    TStrategyDropListItem updateStrategyFac = _list1DL.getItemAt(_list1DL.getSelectedIndex());&#xD;
			    TPaintDropListItem paintStrategyFac = _list3DL.getItemAt(_list3DL.getSelectedIndex());&#xD;
			    if (updateStrategyFac != null &amp;&amp; paintStrategyFac != null ) {&#xD;
			        _modelCtrlAdapter.makeBall(updateStrategyFac, paintStrategyFac);			        &#xD;
			    }&#xD;
			}&#xD;
		});&#xD;
		btnMake.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		middlepanel.add(btnMake);&#xD;
		&#xD;
		_list1DL = new JComboBox&lt;TStrategyDropListItem>();&#xD;
		middlepanel.add(_list1DL);&#xD;
		&#xD;
		_list2DL= new JComboBox&lt;TStrategyDropListItem>();&#xD;
		middlepanel.add(_list2DL);&#xD;
		&#xD;
		&#xD;
		JButton btnCombine = new JButton(&quot;          Combine          &quot;);&#xD;
		btnCombine.setToolTipText(&quot;Click this button to combine the two strategies as a compound strategy.&quot;);&#xD;
		btnCombine.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				TStrategyDropListItem o = _modelCtrlAdapter.combineUpdateStrategies(_list1DL.getItemAt(_list1DL.getSelectedIndex()), &#xD;
				                                                                    _list2DL.getItemAt(_list2DL.getSelectedIndex()));&#xD;
				_list1DL.insertItemAt(o, 0);&#xD;
				_list2DL.insertItemAt(o, 0);&#xD;
			}&#xD;
		});&#xD;
		btnCombine.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		middlepanel.add(btnCombine);&#xD;
		&#xD;
		JPanel rightpanel = new JPanel();&#xD;
		northPanel.add(rightpanel);&#xD;
		rightpanel.setLayout(new BoxLayout(rightpanel, BoxLayout.Y_AXIS));&#xD;
		&#xD;
		JButton btnMakeSwicher = new JButton(&quot;Make Switcher!&quot;);&#xD;
		btnMakeSwicher.setToolTipText(&quot;Click this button to make a ball with switcher strategy.&quot;);&#xD;
		btnMakeSwicher.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
			    TPaintDropListItem paintStrategyFac = _list3DL.getItemAt(_list3DL.getSelectedIndex());&#xD;
			    if (paintStrategyFac != null) {&#xD;
			        _modelCtrlAdapter.makeSwitcher(paintStrategyFac);&#xD;
			    }&#xD;
			}&#xD;
			&#xD;
		});		&#xD;
		btnMakeSwicher.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		rightpanel.add(btnMakeSwicher);&#xD;
		&#xD;
		JButton btnSwitch = new JButton(&quot;        Switch        &quot;);&#xD;
		btnSwitch.setToolTipText(&quot;Click this button to switch the strategy of the switcher balls.&quot;);&#xD;
		btnSwitch.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_modelCtrlAdapter.switchUpdateStrategy(_list1DL.getItemAt(_list1DL.getSelectedIndex()));&#xD;
			}&#xD;
		});&#xD;
		btnSwitch.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		rightpanel.add(btnSwitch);&#xD;
		&#xD;
		JButton btnClearAll = new JButton(&quot;Clear All&quot;);&#xD;
		btnClearAll.setToolTipText(&quot;Click this button to remove all balls from screen.&quot;);&#xD;
		btnClearAll.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				_modelCtrlAdapter.clearAllBalls();&#xD;
			}&#xD;
		});&#xD;
		northPanel.add(btnClearAll);&#xD;
		&#xD;
		JPanel rightmostpanel = new JPanel();&#xD;
		northPanel.add(rightmostpanel);&#xD;
		rightmostpanel.setLayout(new BoxLayout(rightmostpanel, BoxLayout.Y_AXIS));&#xD;
		&#xD;
		paintStrategy = new JTextField();&#xD;
		paintStrategy.setText(&quot;Ball&quot;);&#xD;
		paintStrategy.setHorizontalAlignment(SwingConstants.LEFT);&#xD;
		rightmostpanel.add(paintStrategy);&#xD;
		paintStrategy.setColumns(10);&#xD;
		TitledBorder title2;&#xD;
		title2 = BorderFactory.createTitledBorder(&quot;Paint Strategy&quot;);		&#xD;
		paintStrategy.setBorder(title2);&#xD;
		&#xD;
		JButton btnAddPaint = new JButton(&quot;          Add         &quot;);&#xD;
		btnAddPaint.setToolTipText(&quot;Click this button to add a paint strategy.&quot;);&#xD;
		btnAddPaint.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
			    if (paintStrategy.getText() != null) {&#xD;
			        TPaintDropListItem o = _modelCtrlAdapter.addPaintStrategy(paintStrategy.getText());&#xD;
			        _list3DL.insertItemAt(o, 0);&#xD;
			        _list3DL.setSelectedItem(o);&#xD;
			    }&#xD;
			}&#xD;
		});&#xD;
		btnAddPaint.setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		btnAddPaint.setHorizontalAlignment(SwingConstants.LEFT);&#xD;
		rightmostpanel.add(btnAddPaint);&#xD;
		&#xD;
		_list3DL = new JComboBox&lt;>();&#xD;
		rightmostpanel.add(_list3DL);&#xD;
		&#xD;
&#xD;
		centerPanel = new JPanel() {&#xD;
&#xD;
			/**&#xD;
			 * &#xD;
			 */&#xD;
			private static final long serialVersionUID = 1L;&#xD;
&#xD;
			public void paintComponent(Graphics g) {&#xD;
				&#xD;
				super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xD;
					_modelUpdateAdapter.updatePaint(g);&#xD;
				&#xD;
			}&#xD;
		};&#xD;
&#xD;
		centerPanel.setBackground(Color.yellow);&#xD;
		contentPane.add(centerPanel, BorderLayout.CENTER);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aHZ9cWs2EeW5VufirDXdmA" name="start" specification="_aFvJgGs2EeW5VufirDXdmA">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aHZ9cms2EeW5VufirDXdmA" name="updatePaint" specification="_aFvJgWs2EeW5VufirDXdmA">
          <language>java</language>
          <body>centerPanel.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_aFuicGs2EeW5VufirDXdmA" name="initGUI" visibility="private" method="_aHZ9cGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_aHcZsWs2EeW5VufirDXdmA">
            <body>Initialize GUI</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aFvJgGs2EeW5VufirDXdmA" name="start" method="_aHZ9cWs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_aHdAwGs2EeW5VufirDXdmA">
            <body>Start the GUI</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aFvJgWs2EeW5VufirDXdmA" name="updatePaint" method="_aHZ9cms2EeW5VufirDXdmA">
          <ownedComment xmi:id="_aHdAwWs2EeW5VufirDXdmA">
            <body>Updates the view by repainting the canvas</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aHHCgGs2EeW5VufirDXdmA" name="BallWorldGUI" method="_aHZWYWs2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_aHHpkWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_aHHpkms2EeW5VufirDXdmA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_aHcZsGs2EeW5VufirDXdmA">
            <body>A subclass of JFrame containing the various GUI components specified in the program behavior specification.&#xD;
     * Provides a Component area where the drawing object is to be drawn.&#xD;
     * @param _modelCtrlAdapter The model control adapter&#xD;
     * @param _modelUpdateAdapter The model update adapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_aHHCgWs2EeW5VufirDXdmA" name="_modelCtrlAdapter" type="_SDVZUGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHHpkGs2EeW5VufirDXdmA" name="_modelUpdateAdapter" type="_SDVZUms2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHKs4Gs2EeW5VufirDXdmA" type="_SDUyQWs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_SDVZUGs2EeW5VufirDXdmA" name="IModelCtrlAdapter">
        <ownedComment xmi:id="_aHdAwms2EeW5VufirDXdmA">
          <body>adapter for model control tasks&#xD;
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_aFza8Gs2EeW5VufirDXdmA" name="addUpdateStrategy">
          <ownedComment xmi:id="_aHdAw2s2EeW5VufirDXdmA">
            <body>Take the given short strategy name and return a corresponding something to put onto both drop lists.&#xD;
     * @param classname  The shortened class name of the desired strategy&#xD;
     * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aFza8Ws2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aHQzgWs2EeW5VufirDXdmA" type="_aHQMcGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aF0CAGs2EeW5VufirDXdmA" name="addPaintStrategy">
          <ownedComment xmi:id="_aHdAxGs2EeW5VufirDXdmA">
            <body>add paint strategy&#xD;
     * @param classname The class name&#xD;
     * @return paint strategy factory</body>
          </ownedComment>
          <ownedParameter xmi:id="_aF0CAWs2EeW5VufirDXdmA" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aHRakms2EeW5VufirDXdmA" type="_aHRakGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aF0pEGs2EeW5VufirDXdmA" name="clearAllBalls">
          <ownedComment xmi:id="_aHdAyWs2EeW5VufirDXdmA">
            <body>clear Balls</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_aHSBoGs2EeW5VufirDXdmA" name="makeBall">
          <ownedComment xmi:id="_aHdAxWs2EeW5VufirDXdmA">
            <body>Make a ball with the selected short strategy name.&#xD;
     * @param selectedItem1 The selected item 1&#xD;
     * @param selectedItem2 The selected item 2</body>
          </ownedComment>
          <ownedParameter xmi:id="_aHSBoWs2EeW5VufirDXdmA" name="selectedItem1" type="_aHQMcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHSBoms2EeW5VufirDXdmA" name="selectedItem2" type="_aHRakGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aHSosGs2EeW5VufirDXdmA" name="combineUpdateStrategies">
          <ownedComment xmi:id="_aHdAxms2EeW5VufirDXdmA">
            <body>Return a new object to put on both lists, given two items from the lists.&#xD;
     * @param selectedItem1  An object from one drop list&#xD;
     * @param selectedItem2 An object from the other drop list&#xD;
     * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_aHSosWs2EeW5VufirDXdmA" name="selectedItem1" type="_aHQMcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHSosms2EeW5VufirDXdmA" name="selectedItem2" type="_aHQMcGs2EeW5VufirDXdmA"/>
          <ownedParameter xmi:id="_aHSos2s2EeW5VufirDXdmA" type="_aHQMcGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aHSotGs2EeW5VufirDXdmA" name="makeSwitcher">
          <ownedComment xmi:id="_aHdAx2s2EeW5VufirDXdmA">
            <body>Make a switcher ball&#xD;
     * @param selectedItem The selected paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aHTPwGs2EeW5VufirDXdmA" name="selectedItem" type="_aHRakGs2EeW5VufirDXdmA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_aHTPwWs2EeW5VufirDXdmA" name="switchUpdateStrategy">
          <ownedComment xmi:id="_aHdAyGs2EeW5VufirDXdmA">
            <body>Switch strategy&#xD;
     * @param selectedItem The selected update strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_aHTPwms2EeW5VufirDXdmA" name="selectedItem" type="_aHQMcGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_SDVZUms2EeW5VufirDXdmA" name="IModelUpdateAdapter">
        <ownedComment xmi:id="_aHdn0Gs2EeW5VufirDXdmA">
          <body>adapter for model update tasks&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_aF13MGs2EeW5VufirDXdmA" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_SDVZUms2EeW5VufirDXdmA" isReadOnly="true" association="_aHh5QGs2EeW5VufirDXdmA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_aF13MWs2EeW5VufirDXdmA" value="new IModelUpdateAdapter() {&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;    @Override&#xD;&#xA;&#x9;&#x9;public void updatePaint(Graphics g) {}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_aHNJIGs2EeW5VufirDXdmA" name="updatePaint">
          <ownedParameter xmi:id="_aHNJIWs2EeW5VufirDXdmA" name="g" type="_Kl9BwGs2EeW5VufirDXdmA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_aHQMcGs2EeW5VufirDXdmA" name="TStrategyDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_aHRakGs2EeW5VufirDXdmA" name="TPaintDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHh5QGs2EeW5VufirDXdmA" name="" memberEnd="_aHh5QWs2EeW5VufirDXdmA _aF13MGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHh5QWs2EeW5VufirDXdmA" name="" type="_SDVZUms2EeW5VufirDXdmA" association="_aHh5QGs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHigUWs2EeW5VufirDXdmA" name="" memberEnd="_aHigUms2EeW5VufirDXdmA _aHUd4Gs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHigUms2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHigUWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHjHYWs2EeW5VufirDXdmA" name="" memberEnd="_aHjHYms2EeW5VufirDXdmA _aHUd42s2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHjHYms2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHjHYWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHjucWs2EeW5VufirDXdmA" name="" memberEnd="_aHjucms2EeW5VufirDXdmA _aHUd5Gs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHjucms2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHjucWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHkVgGs2EeW5VufirDXdmA" name="" memberEnd="_aHkVgWs2EeW5VufirDXdmA _aHVsAGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHkVgWs2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHkVgGs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHkVg2s2EeW5VufirDXdmA" name="" memberEnd="_aHkVhGs2EeW5VufirDXdmA _aHVsA2s2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHkVhGs2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHkVg2s2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHk8kWs2EeW5VufirDXdmA" name="" memberEnd="_aHk8kms2EeW5VufirDXdmA _aHWTEWs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHk8kms2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHk8kWs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHljoGs2EeW5VufirDXdmA" name="" memberEnd="_aHljoWs2EeW5VufirDXdmA _aHW6Ims2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHljoWs2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHljoGs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHljo2s2EeW5VufirDXdmA" name="" memberEnd="_aHljpGs2EeW5VufirDXdmA _aHYIQWs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHljpGs2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHljo2s2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_aHmKsWs2EeW5VufirDXdmA" name="" memberEnd="_aHmKsms2EeW5VufirDXdmA _aHYvUms2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_aHmKsms2EeW5VufirDXdmA" name="" type="_SDUyQWs2EeW5VufirDXdmA" association="_aHmKsWs2EeW5VufirDXdmA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SB9gUGs2EeW5VufirDXdmA" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_SB_VgGs2EeW5VufirDXdmA" name="BallWorldController">
        <ownedComment xmi:id="_SD1vo2s2EeW5VufirDXdmA">
          <body>The &quot;Controller&quot; in a Model-View-Controller architecture &#xD;
Sets up the appropriate wiring between the model and the view. &#xD;
Uses adapters to respond to user input and notifies the model and the view to update accordingly. &#xD;
@author caojian</body>
        </ownedComment>
        <ownedAttribute xmi:id="_SDejQGs2EeW5VufirDXdmA" name="model" visibility="private" type="_SDSWAWs2EeW5VufirDXdmA" association="_SD4y8Gs2EeW5VufirDXdmA"/>
        <ownedAttribute xmi:id="_SDiNoGs2EeW5VufirDXdmA" name="view" visibility="private" type="_SDUyQWs2EeW5VufirDXdmA" association="_SD5aAWs2EeW5VufirDXdmA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SDnGIGs2EeW5VufirDXdmA" name="BallWorldController" specification="_SB_8kGs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_SDnGIWs2EeW5VufirDXdmA" type="_SB_VgGs2EeW5VufirDXdmA" direction="return"/>
          <language>java</language>
          <body>model = new BallWorldModel(new IViewCtrlAdapter(){&#xD;
			&#xD;
			@Override&#xD;
			/** return the painting panel */ &#xD;
			public JPanel getPanel(){&#xD;
				return view.getCenterPanel();&#xD;
			}&#xD;
		},&#xD;
		    new IViewUpdateAdapter(){&#xD;
				&#xD;
				/** repaint the screen */&#xD;
				public void updatePaint(){&#xD;
					view.updatePaint();&#xD;
				}&#xD;
		    }&#xD;
		);&#xD;
&#xD;
			&#xD;
		view = new BallWorldGUI&lt;IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac>(&#xD;
		    new IModelCtrlAdapter&lt;IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac>(){&#xD;
		&#xD;
			@Override&#xD;
				/**&#xD;
			    * Returns an IStrategyFac that can instantiate the strategy specified&#xD;
			    * by classname. Returns null if classname is null. The toString() of&#xD;
			    * the returned factory is the classname.&#xD;
			    * @param classname  Shortened name of desired strategy &#xD;
			    * @return A factory to make that strategy&#xD;
			    */&#xD;
			public IUpdateStrategyFac&lt;IBallCmd> addUpdateStrategy(String classname) {&#xD;
				return model.makeStrategyFac(classname);&#xD;
			}&#xD;
			&#xD;
			@Override&#xD;
		       /**&#xD;
		        * Returns an IStrategyFac that can instantiate a MultiStrategy with the&#xD;
		        * two strategies made by the two given IStrategyFac objects. Returns&#xD;
		        * null if either supplied factory is null. The toString() of the&#xD;
		        * returned factory is the toString()'s of the two given factories,&#xD;
		        * concatenated with &quot;-&quot;.             * &#xD;
		        * @param selectedItem1 An IStrategyFac for a strategy&#xD;
		        * @param selectedItem2 An IStrategyFac for a strategy&#xD;
		        * @return An IStrategyFac for the composition of the two strategies&#xD;
		        */&#xD;
			public IUpdateStrategyFac&lt;IBallCmd>  combineUpdateStrategies(IUpdateStrategyFac&lt;IBallCmd> stratFac1, IUpdateStrategyFac&lt;IBallCmd> stratFac2) {&#xD;
				return model.combineStrategyFacs(stratFac1, stratFac2);&#xD;
			}&#xD;
			&#xD;
			/**&#xD;
			 * switch the strategy of the switcher when clicking the button&#xD;
			 * @param &#xD;
			 */&#xD;
			@Override&#xD;
			public void switchUpdateStrategy(IUpdateStrategyFac&lt;IBallCmd> stratFac) {&#xD;
				model.switchStrategy(stratFac.make());&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public IPaintStrategyFac addPaintStrategy(String classname) {&#xD;
				return model.makePaintStrategyFac(classname);&#xD;
			}&#xD;
			&#xD;
			@Override&#xD;
				/**&#xD;
			    * Add a ball to the system with a strategy as given by the given IStrategyFac&#xD;
			    * @param tDropListItem The fully qualified name of the desired strategy.&#xD;
			    */	    &#xD;
			public void makeBall(IUpdateStrategyFac&lt;IBallCmd> selectedItem1, IPaintStrategyFac selectedItem2) {&#xD;
				model.makeSprite(selectedItem1.make(), selectedItem2.make());&#xD;
			}		&#xD;
			&#xD;
			@Override&#xD;
				/**&#xD;
			    * Add a swicher ball to the system with a strategy as given by the given IStrategyFac&#xD;
			    * @param selectedItem The fully qualified name of the desired strategy.&#xD;
			    */&#xD;
			public void makeSwitcher(IPaintStrategyFac selectedItem) {&#xD;
				model.makeSwitcher(selectedItem.make());&#xD;
			}&#xD;
						&#xD;
			@Override&#xD;
			/** remove all balls from screen */&#xD;
			public void clearAllBalls() {&#xD;
				model.deleteSprites();&#xD;
			}&#xD;
		},&#xD;
     new IModelUpdateAdapter(){&#xD;
&#xD;
			/**&#xD;
		     * Pass the update request to the model.&#xD;
		     * @param g The Graphics object the balls use to draw themselves.&#xD;
		     */&#xD;
		    @Override&#xD;
				public void updatePaint(Graphics g){&#xD;
					model.updatePaint(g);&#xD;
				}&#xD;
		    }&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SD1IkGs2EeW5VufirDXdmA" name="start" specification="_SCBKsGs2EeW5VufirDXdmA">
          <language>java</language>
          <body>model.start();&#xD;
		view.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SD1voGs2EeW5VufirDXdmA" name="main" specification="_SCBKsWs2EeW5VufirDXdmA">
          <ownedParameter xmi:id="_SD1voWs2EeW5VufirDXdmA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD1voms2EeW5VufirDXdmA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
					BallWorldController controller = new BallWorldController();&#xD;
					controller.start();&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SB_8kGs2EeW5VufirDXdmA" name="BallWorldController" method="_SDnGIGs2EeW5VufirDXdmA">
          <eAnnotations xmi:id="_SCAjoGs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_SCAjoWs2EeW5VufirDXdmA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_SD1vpGs2EeW5VufirDXdmA">
            <body>constructor&#xD;
	 * instantiate a model and a view</body>
          </ownedComment>
          <ownedParameter xmi:id="_SCAjoms2EeW5VufirDXdmA" type="_SB_VgGs2EeW5VufirDXdmA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_SCBKsGs2EeW5VufirDXdmA" name="start" method="_SD1IkGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_SD2WsGs2EeW5VufirDXdmA">
            <body>start the model and view instance</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_SCBKsWs2EeW5VufirDXdmA" name="main" isStatic="true" method="_SD1voGs2EeW5VufirDXdmA">
          <ownedComment xmi:id="_SD2WsWs2EeW5VufirDXdmA">
            <body>The main function for ball world&#xD;
	 * @param args useless arguments</body>
          </ownedComment>
          <ownedParameter xmi:id="_SCBKsms2EeW5VufirDXdmA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCBxwGs2EeW5VufirDXdmA" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SD4y8Gs2EeW5VufirDXdmA" name="" memberEnd="_SD4y8Ws2EeW5VufirDXdmA _SDejQGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_SD4y8Ws2EeW5VufirDXdmA" name="" type="_SB_VgGs2EeW5VufirDXdmA" association="_SD4y8Gs2EeW5VufirDXdmA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SD5aAWs2EeW5VufirDXdmA" name="" memberEnd="_SD5aAms2EeW5VufirDXdmA _SDiNoGs2EeW5VufirDXdmA">
        <ownedEnd xmi:id="_SD5aAms2EeW5VufirDXdmA" name="" type="_SB_VgGs2EeW5VufirDXdmA" association="_SD5aAWs2EeW5VufirDXdmA"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_AuqzkGs2EeW5VufirDXdmA">
      <eAnnotations xmi:id="_AuqzkWs2EeW5VufirDXdmA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_AusBsGs2EeW5VufirDXdmA" base_Package="_Ak_6MGs2EeW5VufirDXdmA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BDd-4Gs2EeW5VufirDXdmA" base_Element="_BDdX0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BDel8Gs2EeW5VufirDXdmA" base_Element="_BDdX0Gs2EeW5VufirDXdmA">
    <annotations xmi:id="_BDel8Ws2EeW5VufirDXdmA" name="FunctionalInterface"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_BDiQUGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDhpQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDkFgGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDjecGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDlToGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDkskGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BDl6sGs2EeW5VufirDXdmA" base_Element="_BDkskGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BDl6sWs2EeW5VufirDXdmA" base_Element="_BDkskGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BDl6sms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_BDplEGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDoW8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDqMIGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDplEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDsBUGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDqzMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDvEoGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDudkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BDxg4Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BDw50Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BD6DwGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BD5csGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BD8gAGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BD748Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BEFp8Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BEEb0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BEM-sGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BELwkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BEQCAGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BEPa8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BETFUGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BESeQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BG67gGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BG6UcGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BG8wsGs2EeW5VufirDXdmA" base_Element="_BG8JoWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BG9XwGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BG8wsWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BG-l4Gs2EeW5VufirDXdmA" base_Element="_BG9-0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BG_0AGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BG_M8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BHBCIGs2EeW5VufirDXdmA" base_Element="_BHAbEGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHCQQGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHBpMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BHFTkGs2EeW5VufirDXdmA" base_Element="_BHEsgGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHGhsGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHF6oGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHJlAGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHI98Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHLaMGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHKzIGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHNPYGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHMoUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHProGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHOdgGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHVLMGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHT9EWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHVLMWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHT9Ems2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHWZUGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHVyQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHaDsGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHZcoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHb44Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHbR0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHeVIGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHduEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHe8MGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHeVIWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHhYcGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHgKUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:StyledElement xmi:id="_BHm4AGs2EeW5VufirDXdmA" base_Element="_BHmQ8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHm4AWs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHmQ8ms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHoGIGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHnfE2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHp7UGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHpUQms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHrJcGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHqiYms2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHsXkGs2EeW5VufirDXdmA" base_Element="_BHrJcWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHtlsGs2EeW5VufirDXdmA" base_Element="_BHs-oGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BHtlsWs2EeW5VufirDXdmA" base_Element="_BHs-oGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BHtlsms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHuz0Gs2EeW5VufirDXdmA" base_Element="_BHuMwGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHuz0Ws2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHuMwms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BHva4Gs2EeW5VufirDXdmA" base_Element="_BHuMwGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BHva4Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHwB8ms2EeW5VufirDXdmA" base_Element="_BHwB8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BHwpAGs2EeW5VufirDXdmA" base_Element="_BHwB8Gs2EeW5VufirDXdmA">
    <annotations xmi:id="_BHwpAWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHxQEGs2EeW5VufirDXdmA" base_Element="_BHwpAms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHx3IGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BHwpBGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BHx3IWs2EeW5VufirDXdmA" base_Element="_BHwpAms2EeW5VufirDXdmA">
    <annotations xmi:id="_BHx3Ims2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BHzFQWs2EeW5VufirDXdmA" base_Element="_BHyeMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BHzsUGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BHzFQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BH5y8Gs2EeW5VufirDXdmA" base_Element="_BHyeMGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BH5y8Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_BH9dUGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BH8PNWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BH-rcGs2EeW5VufirDXdmA" base_Element="_BH-EYGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BH-rcWs2EeW5VufirDXdmA" base_Element="_BH-EYGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BH-rcms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BICV0Gs2EeW5VufirDXdmA" base_Element="_BH_SgGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIC84Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIBuwGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIDj8Gs2EeW5VufirDXdmA" base_Element="_BH_SgGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIDj8Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIELAms2EeW5VufirDXdmA" base_Element="_BIELAGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIELA2s2EeW5VufirDXdmA" base_Element="_BIELAGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIEyEGs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIFZIGs2EeW5VufirDXdmA" base_Element="_BIEyEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIFZIWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIEyE2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIGAMGs2EeW5VufirDXdmA" base_Element="_BIEyEWs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIGAMWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIGnQms2EeW5VufirDXdmA" base_Element="_BIGnQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIHOUGs2EeW5VufirDXdmA" base_Element="_BIGnQGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIHOUWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIIcc2s2EeW5VufirDXdmA" base_Element="_BIIccGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIJDgGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BIIccms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIJqkGs2EeW5VufirDXdmA" base_Element="_BIIccGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIJqkWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIK4sGs2EeW5VufirDXdmA" base_Element="_BIKRoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIK4sWs2EeW5VufirDXdmA" base_Element="_BIKRoGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIK4sms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIMt4Gs2EeW5VufirDXdmA" base_Element="_BILfwGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BINU8Gs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BILfwms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIN8AGs2EeW5VufirDXdmA" base_Element="_BILfwGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIN8AWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIPKIGs2EeW5VufirDXdmA" base_Element="_BIOjEGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIPxMGs2EeW5VufirDXdmA" base_Element="_BIOjEGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIPxMWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIQYQWs2EeW5VufirDXdmA" base_Element="_BIPxMms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIQ_UGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIQYQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIQ_UWs2EeW5VufirDXdmA" base_Element="_BIPxMms2EeW5VufirDXdmA">
    <annotations xmi:id="_BIRmYGs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIS0gGs2EeW5VufirDXdmA" base_Element="_BISNcGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIS0gWs2EeW5VufirDXdmA" base_Element="_BISNcGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BITbkGs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIUCoGs2EeW5VufirDXdmA" base_Element="_BITbkWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIUpsGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_BITbk2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIVQwGs2EeW5VufirDXdmA" base_Element="_BITbkWs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIVQwWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIWe4ms2EeW5VufirDXdmA" base_Element="_BIWe4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIXF8Gs2EeW5VufirDXdmA" base_Element="_BIWe4Gs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIXF8Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIXtAms2EeW5VufirDXdmA" base_Element="_BIXF8ms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIY7IGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIXtAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIY7IWs2EeW5VufirDXdmA" base_Element="_BIXF8ms2EeW5VufirDXdmA">
    <annotations xmi:id="_BIY7Ims2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIaJQGs2EeW5VufirDXdmA" base_Element="_BIZiMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIaJQWs2EeW5VufirDXdmA" base_Element="_BIZiMGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIaJQms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIbXYGs2EeW5VufirDXdmA" base_Element="_BIawUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIbXYWs2EeW5VufirDXdmA" base_Element="_BIawUGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIbXYms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIclgGs2EeW5VufirDXdmA" base_Element="_BIb-cGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIdMkGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIb-cms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIdMkWs2EeW5VufirDXdmA" base_Element="_BIb-cGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIdzoGs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIfBwGs2EeW5VufirDXdmA" base_Element="_BIeasGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIfo0Gs2EeW5VufirDXdmA" base_Element="_BIeasGs2EeW5VufirDXdmA">
    <annotations xmi:id="_BIfo0Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIgP4Ws2EeW5VufirDXdmA" base_Element="_BIfo0ms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIg28Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIgP4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_BIheAGs2EeW5VufirDXdmA" base_Element="_BIfo0ms2EeW5VufirDXdmA">
    <annotations xmi:id="_BIheAWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIj6QGs2EeW5VufirDXdmA" base_Element="_BIjTMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIkhUWs2EeW5VufirDXdmA" base_Element="_BIj6QWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIlIYGs2EeW5VufirDXdmA" base_Element="_BIkhUms2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIlvcGs2EeW5VufirDXdmA" base_Element="_BIlIYWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BImWgWs2EeW5VufirDXdmA" base_Element="_BIlvcWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIm9kms2EeW5VufirDXdmA" base_Element="_BIm9kGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BInkoms2EeW5VufirDXdmA" base_Element="_BInkoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIoLsWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIoLsGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIoywGs2EeW5VufirDXdmA" base_Element="_BIoLsGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIpZ0Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIoywWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIpZ0Ws2EeW5VufirDXdmA" base_Element="_BIoywWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIrPAGs2EeW5VufirDXdmA" base_Element="_BIqA4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIr2EGs2EeW5VufirDXdmA" base_Element="_BIrPAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_BIsdIGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BIr2EWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BItEMGs2EeW5VufirDXdmA" base_Element="_BIr2EWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIuSUGs2EeW5VufirDXdmA" base_Element="_BItEMWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BIvgcGs2EeW5VufirDXdmA" base_Element="_BIu5YGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BJE3oGs2EeW5VufirDXdmA" base_Element="_BJEQkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BJFesGs2EeW5VufirDXdmA" base_Element="_BJE3oWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BJGFwGs2EeW5VufirDXdmA" base_Element="_BJFesWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BJGFw2s2EeW5VufirDXdmA" base_Element="_BJGFwWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_BJHT4Gs2EeW5VufirDXdmA" base_Element="_BJGs0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JTfUU2s2EeW5VufirDXdmA" base_Element="_JTetQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_JTf7YGs2EeW5VufirDXdmA" base_Element="_JTetQGs2EeW5VufirDXdmA">
    <annotations xmi:id="_JTgicGs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JTi-sGs2EeW5VufirDXdmA" base_Element="_JTiXoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_JTjlwGs2EeW5VufirDXdmA" base_Element="_JTiXoGs2EeW5VufirDXdmA">
    <annotations xmi:id="_JTjlwWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JTpFUms2EeW5VufirDXdmA" base_Element="_JToeQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_JTpsYGs2EeW5VufirDXdmA" base_Element="_JToeQGs2EeW5VufirDXdmA">
    <annotations xmi:id="_JTpsYWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JTsvtWs2EeW5VufirDXdmA" base_Element="_JTsvsGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_JTtWwGs2EeW5VufirDXdmA" base_Element="_JTsvsGs2EeW5VufirDXdmA">
    <annotations xmi:id="_JTtWwWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JUFxQWs2EeW5VufirDXdmA" base_Element="_JUFxQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUGYUWs2EeW5VufirDXdmA" base_Element="_JUGYUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUKCsGs2EeW5VufirDXdmA" base_Element="_JUJboGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUL34Gs2EeW5VufirDXdmA" base_Element="_JULQ0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUOUIGs2EeW5VufirDXdmA" base_Element="_JUNtEGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUTMoGs2EeW5VufirDXdmA" base_Element="_JUSlkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Array xmi:id="_JUTMo2s2EeW5VufirDXdmA" base_Element="_JUSlk2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUWP8ms2EeW5VufirDXdmA" base_Element="_JUWP8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUW3AGs2EeW5VufirDXdmA" base_Element="_JUWP82s2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUXeEGs2EeW5VufirDXdmA" base_Element="_JUW3AWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUXeEms2EeW5VufirDXdmA" base_Element="_JUXeEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUYFIGs2EeW5VufirDXdmA" base_Element="_JUXeE2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Array xmi:id="_JUYFI2s2EeW5VufirDXdmA" base_Element="_JUYFIWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JUYsMGs2EeW5VufirDXdmA" base_Element="_JUYFIWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUdksGs2EeW5VufirDXdmA" base_Element="_JUc9oGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUeLwGs2EeW5VufirDXdmA" base_Element="_JUdksWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUey0Gs2EeW5VufirDXdmA" base_Element="_JUeLwWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUey02s2EeW5VufirDXdmA" base_Element="_JUey0Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUfZ4Gs2EeW5VufirDXdmA" base_Element="_JUey1Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUgA8Gs2EeW5VufirDXdmA" base_Element="_JUfZ4Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_JUgA82s2EeW5VufirDXdmA" base_Element="_JUgA8Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KlB0sGs2EeW5VufirDXdmA" base_Element="_KlBNoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl1F8Gs2EeW5VufirDXdmA" base_Element="_Kl0e4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl7MkGs2EeW5VufirDXdmA" base_Element="_Kl5-cGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl7zoGs2EeW5VufirDXdmA" base_Element="_Kl7MkWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl7zoms2EeW5VufirDXdmA" base_Element="_Kl7zoWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl8asGs2EeW5VufirDXdmA" base_Element="_Kl7zo2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Kl9o0Gs2EeW5VufirDXdmA" base_Element="_Kl9BwGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmAFEGs2EeW5VufirDXdmA" base_Element="_Kl_eAGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmB6QGs2EeW5VufirDXdmA" base_Element="_KmBTMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmMSUGs2EeW5VufirDXdmA" base_Element="_KmLrQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmMSU2s2EeW5VufirDXdmA" base_Element="_KmMSUWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmNgcGs2EeW5VufirDXdmA" base_Element="_KmM5Yms2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmNgc2s2EeW5VufirDXdmA" base_Element="_KmNgcWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmOukGs2EeW5VufirDXdmA" base_Element="_KmOHgms2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmOuk2s2EeW5VufirDXdmA" base_Element="_KmOukWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmP8sGs2EeW5VufirDXdmA" base_Element="_KmPVoms2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KmQjwGs2EeW5VufirDXdmA" base_Element="_KmP8sWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmplUGs2EeW5VufirDXdmA" base_Element="_KmoXMGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmplU2s2EeW5VufirDXdmA" base_Element="_KmplUWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmqMYms2EeW5VufirDXdmA" base_Element="_KmqMYGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmqzcGs2EeW5VufirDXdmA" base_Element="_KmqMY2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_KmragGs2EeW5VufirDXdmA" base_Element="_KmqzcWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_SDRu8Gs2EeW5VufirDXdmA" base_Element="_SDJzIGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_SDSWAGs2EeW5VufirDXdmA" base_Element="_SDRu8Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_SDTkIGs2EeW5VufirDXdmA" base_Element="_SDS9EWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SDhmkGs2EeW5VufirDXdmA" base_Element="_SDejQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_SDi0sGs2EeW5VufirDXdmA" genericsValue="IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac" base_Element="_SDiNoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SDi0sWs2EeW5VufirDXdmA" base_Element="_SDiNoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_SD5aAGs2EeW5VufirDXdmA" base_Element="_SD4y8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_SD6BEGs2EeW5VufirDXdmA" base_Element="_SD5aAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Tj_60Gs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_Tj-ssGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tj_60Ws2EeW5VufirDXdmA" base_Element="_Tj-ssGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_TkAh4Gs2EeW5VufirDXdmA" base_Element="_Tj-ssGs2EeW5VufirDXdmA">
    <annotations xmi:id="_TkAh4Ws2EeW5VufirDXdmA" name="SuppressWarnings">
      <annotationParameters xmi:id="_TkBI8Gs2EeW5VufirDXdmA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_TlrV0Ws2EeW5VufirDXdmA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_TkEMQGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TkC-IGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TlXMwGs2EeW5VufirDXdmA" base_Element="_TlWlsGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Tla3IGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlaQEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TlbeMGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlaQEms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TlcFQGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlaQE2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TlcsUGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlcFQms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TldTYGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlcsU2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TliL4Gs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_Tlhk0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TliL4ms2EeW5VufirDXdmA" base_Element="_Tlhk0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tliy8ms2EeW5VufirDXdmA" base_Element="_Tliy8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TljaAGs2EeW5VufirDXdmA" base_Element="_Tliy82s2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TllPMGs2EeW5VufirDXdmA" base_Element="_TlkBEGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tll2RGs2EeW5VufirDXdmA" base_Element="_Tll2Qms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TlmdUWs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlmdUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TlnEYGs2EeW5VufirDXdmA" base_Element="_TlmdUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_TlnrcGs2EeW5VufirDXdmA" genericsValue="IBallCmd" base_Element="_TlnEYWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tlnrcms2EeW5VufirDXdmA" base_Element="_TlnEYWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TloSgWs2EeW5VufirDXdmA" base_Element="_Tlnrc2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TltLAGs2EeW5VufirDXdmA" base_Element="_Tlsj8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TltyEGs2EeW5VufirDXdmA" base_Element="_TltLAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TlvAMGs2EeW5VufirDXdmA" base_Element="_TltyEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TlwOUGs2EeW5VufirDXdmA" base_Element="_TlvAMWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Tlw1YGs2EeW5VufirDXdmA" base_Element="_TlwOUWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Tlw1Y2s2EeW5VufirDXdmA" base_Element="_Tlw1YWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Tlxccms2EeW5VufirDXdmA" base_Element="_TlxccGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_TlyDgGs2EeW5VufirDXdmA" base_Element="_Tlxcc2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkNjgGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkM8cGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkOxoGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkOKkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WkRN4Ws2EeW5VufirDXdmA" base_Element="_WkRN4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_WkR08Gs2EeW5VufirDXdmA" base_Element="_WkRN4Gs2EeW5VufirDXdmA">
    <annotations xmi:id="_WkR08Ws2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_WkURMGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkTqIGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkVfUGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_BGzmwGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkXUgGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkWtcGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkYioGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_TlXMwWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_WkvvAGs2EeW5VufirDXdmA" base_Element="_WkvH8Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkwWEGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkvvAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WkxkMGs2EeW5VufirDXdmA" base_Element="_Wkw9IGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkxkMWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wkw9IWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_WkyLQGs2EeW5VufirDXdmA" base_Element="_Wkw9IGs2EeW5VufirDXdmA">
    <annotations xmi:id="_WkyLQWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WkyyUGs2EeW5VufirDXdmA" base_Element="_WkyLQms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_WkyyUWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkyLQ2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_WkzZYGs2EeW5VufirDXdmA" base_Element="_WkyLQms2EeW5VufirDXdmA">
    <annotations xmi:id="_WkzZYWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wk0AcWs2EeW5VufirDXdmA" base_Element="_WkzZYms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk0Acms2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_WkzZY2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_Wk0ngGs2EeW5VufirDXdmA" base_Element="_WkzZYms2EeW5VufirDXdmA">
    <annotations xmi:id="_Wk0ngWs2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Wk1OkWs2EeW5VufirDXdmA" base_Element="_Wk1OkGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk11oGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk1Okms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk3DwGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk2csWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk3q0Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk3Dwms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk448Gs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk4R4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk5gAWs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk5gAGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk7VMGs2EeW5VufirDXdmA" genericsValue="IObserver&lt;TDispMsg>" base_Element="_Wk6uIWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_Wk8jUGs2EeW5VufirDXdmA" base_Element="_Wk78QGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_Wk9xcGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk9KYWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wk-_kGs2EeW5VufirDXdmA" base_Element="_Wk-YgGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Annotations xmi:id="_Wk-_kWs2EeW5VufirDXdmA" base_Element="_Wk-YgGs2EeW5VufirDXdmA">
    <annotations xmi:id="_Wk-_kms2EeW5VufirDXdmA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_WlANsGs2EeW5VufirDXdmA" genericsValue="TDispMsg" base_Element="_Wk_moGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WlANsWs2EeW5VufirDXdmA" base_Element="_Wk_moGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_WlD4EGs2EeW5VufirDXdmA" base_Element="_WlDRAGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aFtUUGs2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_SDUyQWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aFyz4Gs2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_SDVZUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHA74Gs2EeW5VufirDXdmA" base_Element="_aHAU0Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHBi8Gs2EeW5VufirDXdmA" base_Element="_aHA74Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHCKAGs2EeW5VufirDXdmA" base_Element="_aHBi8Ws2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHCKAms2EeW5VufirDXdmA" base_Element="_aHCKAWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHCxEGs2EeW5VufirDXdmA" base_Element="_aHCKA2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHDYIGs2EeW5VufirDXdmA" base_Element="_aHCxEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHD_MGs2EeW5VufirDXdmA" base_Element="_aHDYIWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHD_Mms2EeW5VufirDXdmA" base_Element="_aHD_MWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHEmQWs2EeW5VufirDXdmA" base_Element="_aHEmQGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHFNUWs2EeW5VufirDXdmA" base_Element="_aHFNUGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHF0YGs2EeW5VufirDXdmA" base_Element="_aHFNUms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHGbcGs2EeW5VufirDXdmA" base_Element="_aHF0YWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHGbcms2EeW5VufirDXdmA" base_Element="_aHGbcWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aHKs4Ws2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_aHHCgWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHQzgGs2EeW5VufirDXdmA" base_Element="_aHQMcGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHRakWs2EeW5VufirDXdmA" base_Element="_aHRakGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHUd4ms2EeW5VufirDXdmA" base_Element="_aHUd4Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aHVE8Gs2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_aHUd5Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHVE8Ws2EeW5VufirDXdmA" base_Element="_aHUd5Gs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHVsAms2EeW5VufirDXdmA" base_Element="_aHVsAGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHWTEGs2EeW5VufirDXdmA" base_Element="_aHVsA2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aHW6IGs2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem" base_Element="_aHWTEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHW6IWs2EeW5VufirDXdmA" base_Element="_aHWTEWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aHXhMGs2EeW5VufirDXdmA" genericsValue="TStrategyDropListItem" base_Element="_aHW6Ims2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHYIQGs2EeW5VufirDXdmA" base_Element="_aHW6Ims2EeW5VufirDXdmA"/>
  <UMLLabProfile:Generics xmi:id="_aHYvUGs2EeW5VufirDXdmA" genericsValue="TPaintDropListItem" base_Element="_aHYIQWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHYvUWs2EeW5VufirDXdmA" base_Element="_aHYIQWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_aHZWYGs2EeW5VufirDXdmA" base_Element="_aHYvUms2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHigUGs2EeW5VufirDXdmA" base_Element="_aHh5QGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHjHYGs2EeW5VufirDXdmA" base_Element="_aHigUWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHjucGs2EeW5VufirDXdmA" base_Element="_aHjHYWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHjuc2s2EeW5VufirDXdmA" base_Element="_aHjucWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHkVgms2EeW5VufirDXdmA" base_Element="_aHkVgGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHk8kGs2EeW5VufirDXdmA" base_Element="_aHkVg2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHk8k2s2EeW5VufirDXdmA" base_Element="_aHk8kWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHljoms2EeW5VufirDXdmA" base_Element="_aHljoGs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHmKsGs2EeW5VufirDXdmA" base_Element="_aHljo2s2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_aHmKs2s2EeW5VufirDXdmA" base_Element="_aHmKsWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_eAa2YGs2EeW5VufirDXdmA" base_Element="_eAZoQWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_eAa2Y2s2EeW5VufirDXdmA" base_Element="_eAa2YWs2EeW5VufirDXdmA"/>
  <UMLLabProfile:Reference xmi:id="_eAcEgGs2EeW5VufirDXdmA" base_Element="_eAbdcGs2EeW5VufirDXdmA"/>
</xmi:XMI>
