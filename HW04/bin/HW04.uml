<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_4vUs8GNqEeWpPIXpP0H8rg" name="HW04">
    <eAnnotations xmi:id="_44yyAGNqEeWpPIXpP0H8rg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_44yyAWNqEeWpPIXpP0H8rg" source="codegen">
        <details xmi:id="_44yyAmNqEeWpPIXpP0H8rg" key="codegenDirectory" value="/HW04/src"/>
        <details xmi:id="__br3QGNqEeWpPIXpP0H8rg" key="AssociatedSourceCode" value="/HW04/src/controller/Controller.java;3501231444/1;/HW04/src/model/Ball.java;426461102/1;/HW04/src/model/BallWorldModel.java;452125982/1;/HW04/src/model/IBallCmd.java;2033401114/1;/HW04/src/model/IPaintStrategy.java;2910642381/1;/HW04/src/model/IPaintStrategyFac.java;2900786843/1;/HW04/src/model/IViewUpdateAdapter.java;610685362/1;/HW04/src/model/paint/ADecoratorPaintStrategy.java;691702064/1;/HW04/src/model/paint/APaintStrategy.java;3896726652/1;/HW04/src/model/paint/AnimatePaintStrategy.java;145103913/1;/HW04/src/model/paint/FixedColorDecoratorPaintStrategy.java;1304283511/1;/HW04/src/model/paint/ImagePaintStrategy.java;3944814856/1;/HW04/src/model/paint/MultiplePaintStrategy.java;1401529223/1;/HW04/src/model/paint/ShapePaintStrategy.java;1120763908/1;/HW04/src/model/paint/UprightImagePaintStratergy.java;3257278897/1;/HW04/src/model/paint/shape/EllipseShapeFactory.java;3534656870/1;/HW04/src/model/paint/shape/Fish1PolygonFactory.java;1961658658/1;/HW04/src/model/paint/shape/Fish2PolygonFactory.java;2417352622/1;/HW04/src/model/paint/shape/IShapeFactory.java;3610235976/1;/HW04/src/model/paint/shape/PolygonFactory.java;3200877170/1;/HW04/src/model/paint/shape/RectangleShapeFactory.java;3297012898/1;/HW04/src/model/paint/strategy/BallPaintStrategy.java;564384797/1;/HW04/src/model/paint/strategy/BirdSheepImagePaintStrategy.java;59599911/1;/HW04/src/model/paint/strategy/EllipsePaintStrategy.java;3325281650/1;/HW04/src/model/paint/strategy/Fish1PaintStrategy.java;1173052217/1;/HW04/src/model/paint/strategy/Fish2PaintStrategy.java;1757698028/1;/HW04/src/model/paint/strategy/LambPaintStrategy.java;1932181245/1;/HW04/src/model/paint/strategy/NiceFishPaintStrategy.java;4206545194/1;/HW04/src/model/paint/strategy/RectanglePaintStrategy.java;364110399/1;/HW04/src/model/paint/strategy/SquarePaintStrategy.java;2091178309/1;/HW04/src/model/paint/strategy/SwimFishPaintStrategy.java;4165761116/1;/HW04/src/model/strategy/BreathingStrategy.java;2142415783/1;/HW04/src/model/strategy/ColorStrategy.java;2787819980/1;/HW04/src/model/strategy/CurveStrategy.java;2717693450/1;/HW04/src/model/strategy/DrunkStrategy.java;2454244889/1;/HW04/src/model/strategy/IUpdateStrategy.java;278320397/1;/HW04/src/model/strategy/IUpdateStrategyFac.java;3113066868/1;/HW04/src/model/strategy/MultiStrategy.java;3880306059/1;/HW04/src/model/strategy/StraightStrategy.java;3144885140/1;/HW04/src/model/strategy/SwitcherStrategy.java;2399574929/1;/HW04/src/model/strategy/WanderStrategy.java;1048180710/1;/HW04/src/util/Dispatcher.java;1644277079/1;/HW04/src/util/IRandomizer.java;156459438/1;/HW04/src/util/ObjectLoader.java;2848083219/1;/HW04/src/util/Randomizer.java;1503686009/1;/HW04/src/view/BallWorldView.java;1346730377/1;/HW04/src/view/IModelControlAdapter.java;138679733/1;/HW04/src/view/IModelUpdateAdapter.java;498227816/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_5ivt8GNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_5iwVAGNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_5iwVAWNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_5iwVAmNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_5iwVA2NqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_5iwVBGNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_5iwVBWNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_5iwVBmNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_5iw8EGNqEeWpPIXpP0H8rg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_5ixjIGNqEeWpPIXpP0H8rg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_5ixjIWNqEeWpPIXpP0H8rg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_5qRSQGNqEeWpPIXpP0H8rg" name="Component"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_5jTHkGNqEeWpPIXpP0H8rg" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_5qoeoGNqEeWpPIXpP0H8rg" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5rBgMGNqEeWpPIXpP0H8rg" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5rG_wGNqEeWpPIXpP0H8rg" name="Rectangle2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5jgi8GNqEeWpPIXpP0H8rg" name="image">
          <packagedElement xmi:type="uml:Interface" xmi:id="_5q3IIWNqEeWpPIXpP0H8rg" name="ImageObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5qUVkWNqEeWpPIXpP0H8rg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5qU8oWNqEeWpPIXpP0H8rg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5qWx0GNqEeWpPIXpP0H8rg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5qXY4GNqEeWpPIXpP0H8rg" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5qX_8WNqEeWpPIXpP0H8rg" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5q0r4GNqEeWpPIXpP0H8rg" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5q16AWNqEeWpPIXpP0H8rg" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5q2hEWNqEeWpPIXpP0H8rg" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5q2hE2NqEeWpPIXpP0H8rg" name="Toolkit"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5q910GNqEeWpPIXpP0H8rg" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rD8cGNqEeWpPIXpP0H8rg" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rn9IGNqEeWpPIXpP0H8rg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rokMWNqEeWpPIXpP0H8rg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rpLQWNqEeWpPIXpP0H8rg" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rpyUWNqEeWpPIXpP0H8rg" name="GridLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5i2boGNqEeWpPIXpP0H8rg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_5qYnAGNqEeWpPIXpP0H8rg" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5qZOEGNqEeWpPIXpP0H8rg" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5sKIoGNqEeWpPIXpP0H8rg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_5sKvsGNqEeWpPIXpP0H8rg" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5ixjImNqEeWpPIXpP0H8rg" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_5l2FQGNqEeWpPIXpP0H8rg" name="Ball">
        <ownedComment xmi:id="_5ufD42NqEeWpPIXpP0H8rg">
          <body>A class that represents all balls that are filled with a certain color &#xD;
and moves at a certain velocity on a canvas.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5tVNUWNqEeWpPIXpP0H8rg" name="location" type="_5qXY4GNqEeWpPIXpP0H8rg" association="_5ufD5GNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tV0YGNqEeWpPIXpP0H8rg" name="radius" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tWbcGNqEeWpPIXpP0H8rg" name="velocity" type="_5qXY4GNqEeWpPIXpP0H8rg" association="_5ufq8GNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tWbcWNqEeWpPIXpP0H8rg" name="color" type="_5qWx0GNqEeWpPIXpP0H8rg" association="_5ugSAWNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tXCgGNqEeWpPIXpP0H8rg" name="canvas" visibility="private" type="_5qRSQGNqEeWpPIXpP0H8rg" association="_5u7v0WNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tXCgmNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg" association="_5ug5EWNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tXpkGNqEeWpPIXpP0H8rg" name="paintStrategy" visibility="private" type="_5mN4sGNqEeWpPIXpP0H8rg" association="_5u898GNqEeWpPIXpP0H8rg"/>
        <interfaceRealization xmi:id="_5sFQIGNqEeWpPIXpP0H8rg" client="_5l2FQGNqEeWpPIXpP0H8rg" supplier="_5qZOEGNqEeWpPIXpP0H8rg" contract="_5qZOEGNqEeWpPIXpP0H8rg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_UoGNqEeWpPIXpP0H8rg" name="Ball" specification="_5sGeQGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_UoWNqEeWpPIXpP0H8rg" name="location" type="_5qXY4GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_UomNqEeWpPIXpP0H8rg" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5t_Uo2NqEeWpPIXpP0H8rg" name="velocity" type="_5qXY4GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_UpGNqEeWpPIXpP0H8rg" name="color" type="_5qWx0GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_UpWNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_UpmNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_Up2NqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5t_UqGNqEeWpPIXpP0H8rg" type="_5l2FQGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>this.location = location;&#xD;
		this.radius = radius;&#xD;
		this.velocity = velocity;&#xD;
		this.color = color;&#xD;
		this.canvas = canvas;&#xD;
		this.updateStrategy = updateStrategy;&#xD;
		setPaintStrategy(paintStrategy);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_UqWNqEeWpPIXpP0H8rg" name="getRadius" specification="_5l4hgGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_UqmNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.radius;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_Uq2NqEeWpPIXpP0H8rg" name="setRadius" specification="_5l5IkGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_UrGNqEeWpPIXpP0H8rg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(r &lt;= 0) {&#xD;
			throw new IllegalArgumentException(&quot;Radisu should be positive&quot;);&#xD;
		}&#xD;
		&#xD;
		this.radius = r;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_7sGNqEeWpPIXpP0H8rg" name="getCanvas" specification="_5l5IkmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_7sWNqEeWpPIXpP0H8rg" type="_5qRSQGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return canvas;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_7smNqEeWpPIXpP0H8rg" name="getPaintStrategy" specification="_5l5voGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_7s2NqEeWpPIXpP0H8rg" type="_5mN4sGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return paintStrategy;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t_7tGNqEeWpPIXpP0H8rg" name="setPaintStrategy" specification="_5qbDQGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t_7tWNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>this.paintStrategy = paintStrategy;&#xD;
     this.paintStrategy.init(this);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uAiwGNqEeWpPIXpP0H8rg" name="update" specification="_5sLWwGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uAiwWNqEeWpPIXpP0H8rg" name="o" type="_5qYnAGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uAiwmNqEeWpPIXpP0H8rg" name="cmd" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>((IBallCmd)cmd).apply(this, (Dispatcher)o);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uAiw2NqEeWpPIXpP0H8rg" name="move" specification="_5l6WsGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>location.x = location.x + velocity.x;&#xD;
		location.y = location.y + velocity.y;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uAixGNqEeWpPIXpP0H8rg" name="bounce" specification="_5l69wGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>/** get the bounds of the component in the form of a Rectangle object */&#xD;
     Rectangle bounds = canvas.getBounds();&#xD;
&#xD;
     /**&#xD;
      * the ball hits the top of the wall&#xD;
      */&#xD;
     if (location.y - radius + velocity.y &lt;= 0) {&#xD;
         int diff = -(location.y - radius + velocity.y);&#xD;
         location.y = diff + radius;&#xD;
         velocity.y = -velocity.y;&#xD;
     }&#xD;
&#xD;
     /**&#xD;
      * the ball hits the bottom of the wall&#xD;
      */&#xD;
     if (location.y + radius + velocity.y >= bounds.height) {&#xD;
         int diff = location.y + radius + velocity.y - (int) Math.floor(bounds.height);&#xD;
         location.y = bounds.height - diff - radius;&#xD;
         velocity.y = -velocity.y;&#xD;
     }&#xD;
&#xD;
     /** &#xD;
      * the ball hits the left of the wall &#xD;
      */&#xD;
     if (location.x - radius + velocity.x &lt;= 0) {&#xD;
         int diff = -(location.x - radius + velocity.x);&#xD;
         location.x = diff + radius;&#xD;
         velocity.x = -velocity.x;&#xD;
     }&#xD;
&#xD;
     /**&#xD;
      * the ball hits the right of the wall&#xD;
      */&#xD;
     if (location.x + radius + velocity.x >= bounds.width) {&#xD;
         int diff = location.x + radius + velocity.x - (int) Math.floor(bounds.width);&#xD;
         location.x = bounds.width - diff - radius;&#xD;
         velocity.x = -velocity.x;&#xD;
     }&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uBJ0GNqEeWpPIXpP0H8rg" name="paint" specification="_5sL90GNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uBJ0WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>paintStrategy.paint(g, this);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uBJ0mNqEeWpPIXpP0H8rg" name="updateState" specification="_5qbDQmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uBJ02NqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>updateStrategy.updateState(this, dispatcher); // update this ball's state using the strategy.&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5l4hgGNqEeWpPIXpP0H8rg" name="getRadius" method="_5t_UqWNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5ug5FGNqEeWpPIXpP0H8rg">
            <body>Get the radius of the ball.&#xD;
	 * @return the radius</body>
          </ownedComment>
          <ownedParameter xmi:id="_5l4hgWNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5l5IkGNqEeWpPIXpP0H8rg" name="setRadius" method="_5t_Uq2NqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgIGNqEeWpPIXpP0H8rg">
            <body>Set the radius of the ball.&#xD;
	 * @param r the new radius</body>
          </ownedComment>
          <ownedParameter xmi:id="_5l5IkWNqEeWpPIXpP0H8rg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5l5IkmNqEeWpPIXpP0H8rg" name="getCanvas" method="_5t_7sGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgIWNqEeWpPIXpP0H8rg">
            <body>Get the canvas&#xD;
	 * @return the canvas object</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sHsYGNqEeWpPIXpP0H8rg" type="_5qRSQGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5l5voGNqEeWpPIXpP0H8rg" name="getPaintStrategy" method="_5t_7smNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgImNqEeWpPIXpP0H8rg">
            <body>Returns the current paint strategy of this Ball.&#xD;
     * @return The IPaintStrategy currently in use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qacMGNqEeWpPIXpP0H8rg" type="_5mN4sGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5l6WsGNqEeWpPIXpP0H8rg" name="move" method="_5uAiw2NqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgJWNqEeWpPIXpP0H8rg">
            <body>Move the ball to the new location determined by current velocity.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5l69wGNqEeWpPIXpP0H8rg" name="bounce" method="_5uAixGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgJmNqEeWpPIXpP0H8rg">
            <body>Bounce the ball when it moves outside the boundary of the canvas.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5qbDQGNqEeWpPIXpP0H8rg" name="setPaintStrategy" method="_5t_7tGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgI2NqEeWpPIXpP0H8rg">
            <body>Sets the current strategy of this Ball to the given strategy.&#xD;
     * @param paintStrategy The new IPaintStrategy to use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qbDQWNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5qbDQmNqEeWpPIXpP0H8rg" name="updateState" method="_5uBJ0mNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgKGNqEeWpPIXpP0H8rg">
            <body>Update the state of the ball. Delegates to the update strategy.&#xD;
	 * @param dispatcher The Dispatcher that sent the command that is calling this method.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qbDQ2NqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sGeQGNqEeWpPIXpP0H8rg" name="Ball" method="_5t_UoGNqEeWpPIXpP0H8rg">
          <eAnnotations xmi:id="_5sHFUmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5sHFU2NqEeWpPIXpP0H8rg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5ug5E2NqEeWpPIXpP0H8rg">
            <body>Construct a ball.&#xD;
	 * @param location the center location of the ball&#xD;
	 * @param radius the radius (int) of the ball&#xD;
	 * @param velocity the velocity vector of the ball&#xD;
	 * @param color the RGB color of the ball&#xD;
	 * @param canvas the canvas within with the ball moves&#xD;
	 * @param updateStrategy the update strategy to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sGeQWNqEeWpPIXpP0H8rg" name="location" type="_5qXY4GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sGeQmNqEeWpPIXpP0H8rg" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5sGeQ2NqEeWpPIXpP0H8rg" name="velocity" type="_5qXY4GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sGeRGNqEeWpPIXpP0H8rg" name="color" type="_5qWx0GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sGeRWNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sHFUGNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sHFUWNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sHFVGNqEeWpPIXpP0H8rg" type="_5l2FQGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sLWwGNqEeWpPIXpP0H8rg" name="update" method="_5uAiwGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgJGNqEeWpPIXpP0H8rg">
            <body>The update method called by the main ball Dispatcher to notify all the balls to perform the given command.&#xD;
	 * The given command is executed.&#xD;
	 * @param o The Dispatcher that sent the update request.&#xD;
	 * @param cmd The IBallCmd that will be run.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sLWwWNqEeWpPIXpP0H8rg" name="o" type="_5qYnAGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sLWwmNqEeWpPIXpP0H8rg" name="cmd" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sL90GNqEeWpPIXpP0H8rg" name="paint" method="_5uBJ0GNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uhgJ2NqEeWpPIXpP0H8rg">
            <body>Paint the ball on the canvas.&#xD;
	 * @param g the graphics object to paint on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sL90WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5iyKMGNqEeWpPIXpP0H8rg" name="strategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_5ndO0GNqEeWpPIXpP0H8rg" name="BreathingStrategy">
          <ownedComment xmi:id="_5umYoGNqEeWpPIXpP0H8rg">
            <body>An IUpdateStrategy implementation that updates the radius of a ball.
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5tpWYGNqEeWpPIXpP0H8rg" name="RADIUS_UPPER_LIMIT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tpWYWNqEeWpPIXpP0H8rg" value="20"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5tp9cWNqEeWpPIXpP0H8rg" name="RADIUS_LOWER_LIMIT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tp9cmNqEeWpPIXpP0H8rg" value="5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5tqkgGNqEeWpPIXpP0H8rg" name="increasing" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tqkgWNqEeWpPIXpP0H8rg" value="true"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_5rT0EGNqEeWpPIXpP0H8rg" client="_5ndO0GNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uVS5WNqEeWpPIXpP0H8rg" name="updateState" specification="_5rUbIGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uVS5mNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uVS52NqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>if(context.getRadius() == RADIUS_UPPER_LIMIT) {
			increasing = false;
		}
		else if(context.getRadius() == RADIUS_LOWER_LIMIT) {
			increasing = true;
		}
		if(increasing) {
			context.setRadius(context.getRadius() + 1);
		}
		else {
			context.setRadius(context.getRadius() - 1);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rUbIGNqEeWpPIXpP0H8rg" name="updateState" method="_5uVS5WNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rUbIWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rUbImNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nfrEGNqEeWpPIXpP0H8rg" name="ColorStrategy">
          <ownedComment xmi:id="_5umYoWNqEeWpPIXpP0H8rg">
            <body>A IUpdateStrategy implementation that updates the color of a ball.
 *</body>
          </ownedComment>
          <interfaceRealization xmi:id="_5rVpQGNqEeWpPIXpP0H8rg" client="_5nfrEGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uV58GNqEeWpPIXpP0H8rg" name="updateState" specification="_5rWQUGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uV58WNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uV58mNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>int b = (context.getColor().getBlue() + 5) % 256;
		int r = (context.getColor().getRed() + 5) % 256;
		int g = (context.getColor().getGreen() + 5) % 256;
		context.setColor(new Color(r, g, b));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rWQUGNqEeWpPIXpP0H8rg" name="updateState" method="_5uV58GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rWQUWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rW3YGNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nhgQGNqEeWpPIXpP0H8rg" name="CurveStrategy">
          <ownedComment xmi:id="_5umYomNqEeWpPIXpP0H8rg">
            <body>An IUpdateStrategy implementation that turns the direction by a random
angle between 0 and 18 degree clockwise. 
 *</body>
          </ownedComment>
          <interfaceRealization xmi:id="_5rXecmNqEeWpPIXpP0H8rg" client="_5nhgQGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uV582NqEeWpPIXpP0H8rg" name="updateState" specification="_5rYFgGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uV59GNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uV59WNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>double turningAngle = Randomizer.Singleton.randomDouble(0, Math.PI/10);
		int velX = (int)Math.round(context.getVelocity().x * Math.cos(turningAngle) - context.getVelocity().y *Math.sin(turningAngle));
		int velY = (int)Math.round(context.getVelocity().y * Math.cos(turningAngle) + context.getVelocity().x *Math.sin(turningAngle));
		context.setVelocity(new Point(velX, velY));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rYFgGNqEeWpPIXpP0H8rg" name="updateState" method="_5uV582NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rYFgWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rYFgmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5njVcGNqEeWpPIXpP0H8rg" name="DrunkStrategy">
          <ownedComment xmi:id="_5umYo2NqEeWpPIXpP0H8rg">
            <body>A IUpdateStrategy implementation that randomly chooses a strategy out of 
Breathing, Color, Wander and Curve Strategy to update the ball.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5trLkGNqEeWpPIXpP0H8rg" name="STRATEGIES" visibility="private" isLeaf="true" isStatic="true" type="_5nlKoGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vLAYWNqEeWpPIXpP0H8rg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5trLkWNqEeWpPIXpP0H8rg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tryoGNqEeWpPIXpP0H8rg" value="new IUpdateStrategy[] {&#xA;&#x9;&#x9;new BreathingStrategy(), new ColorStrategy(), new WanderStrategy(), new CurveStrategy()&#xA;&#x9;}"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_5rZToWNqEeWpPIXpP0H8rg" client="_5njVcGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uWhAGNqEeWpPIXpP0H8rg" name="updateState" specification="_5rZ6sGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uWhAWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uWhAmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>int stratIndex = Randomizer.Singleton.randomInt(0, STRATEGIES.length - 1);
		STRATEGIES[stratIndex].updateState(context, dispatcher);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rZ6sGNqEeWpPIXpP0H8rg" name="updateState" method="_5uWhAGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rZ6sWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rZ6smNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5nlKoGNqEeWpPIXpP0H8rg" name="IUpdateStrategy">
          <ownedComment xmi:id="_5umYpGNqEeWpPIXpP0H8rg">
            <body>Define an interface to update the state of balls.</body>
          </ownedComment>
          <ownedOperation xmi:id="_5rbv4GNqEeWpPIXpP0H8rg" name="updateState">
            <ownedParameter xmi:id="_5rbv4WNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rbv4mNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5nmYwGNqEeWpPIXpP0H8rg" name="IUpdateStrategyFac">
          <ownedComment xmi:id="_5umYpWNqEeWpPIXpP0H8rg">
            <body>Defines an interface that create concrete instances of IUpdateStrategy.</body>
          </ownedComment>
          <ownedOperation xmi:id="_5nm_0GNqEeWpPIXpP0H8rg" name="make">
            <ownedComment xmi:id="_5umYpmNqEeWpPIXpP0H8rg">
              <body>Create an concrete IUpdateStrategy instance.
	 * @return an instance of a concrete IUpdateStrategy</body>
            </ownedComment>
            <ownedParameter xmi:id="_5rbv42NqEeWpPIXpP0H8rg" type="_5nlKoGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nnm4GNqEeWpPIXpP0H8rg" name="MultiStrategy">
          <ownedComment xmi:id="_5umYp2NqEeWpPIXpP0H8rg">
            <body>An IUpdateStrategy implementation that represents a pair of two strategies.
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5tryoWNqEeWpPIXpP0H8rg" name="strategy1" visibility="private" type="_5nlKoGNqEeWpPIXpP0H8rg" association="_5vLncWNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tsZsGNqEeWpPIXpP0H8rg" name="strategy2" visibility="private" type="_5nlKoGNqEeWpPIXpP0H8rg" association="_5vNcoWNqEeWpPIXpP0H8rg"/>
          <interfaceRealization xmi:id="_5rcW8GNqEeWpPIXpP0H8rg" client="_5nnm4GNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uWhA2NqEeWpPIXpP0H8rg" name="MultiStrategy" specification="_5rc-AGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uWhBGNqEeWpPIXpP0H8rg" name="strat1" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uWhBWNqEeWpPIXpP0H8rg" name="strat2" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uWhBmNqEeWpPIXpP0H8rg" type="_5nnm4GNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>if(null == strat1) {
			throw new IllegalArgumentException(&quot;Strategy 1 is null&quot;);
		}
		if(null == strat2) {
			throw new IllegalArgumentException(&quot;Strategy 2 is null&quot;);
		}
		this.strategy1 = strat1;
		this.strategy2 = strat2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uWhB2NqEeWpPIXpP0H8rg" name="updateState" specification="_5rdlEGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uWhCGNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uWhCWNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>strategy1.updateState(context, dispatcher);
		strategy2.updateState(context, dispatcher);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rc-AGNqEeWpPIXpP0H8rg" name="MultiStrategy" method="_5uWhA2NqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5rc-A2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5rc-BGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5umYqGNqEeWpPIXpP0H8rg">
              <body>Construct a multistrategy as a combination  of two given update strategies.
	 * @param strat1 the first update strategy to combine
	 * @param strat2 the second update strategy to combine</body>
            </ownedComment>
            <ownedParameter xmi:id="_5rc-AWNqEeWpPIXpP0H8rg" name="strat1" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rc-AmNqEeWpPIXpP0H8rg" name="strat2" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rc-BWNqEeWpPIXpP0H8rg" type="_5nnm4GNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5rdlEGNqEeWpPIXpP0H8rg" name="updateState" method="_5uWhB2NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rdlEWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rdlEmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nqDIGNqEeWpPIXpP0H8rg" name="StraightStrategy">
          <ownedComment xmi:id="_5um_sGNqEeWpPIXpP0H8rg">
            <body>A IUpdateStrategy implementation that does not update the state of a ball.
 *</body>
          </ownedComment>
          <interfaceRealization xmi:id="_5reMImNqEeWpPIXpP0H8rg" client="_5nqDIGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedOperation xmi:id="_5rezMGNqEeWpPIXpP0H8rg" name="updateState">
            <ownedParameter xmi:id="_5rezMWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rezMmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nr4UGNqEeWpPIXpP0H8rg" name="SwitcherStrategy">
          <ownedComment xmi:id="_5um_sWNqEeWpPIXpP0H8rg">
            <body>An IUpdateStrategy implementation that can change its underlying update strategy dynamically.
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5ttAwGNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vODsWNqEeWpPIXpP0H8rg"/>
          <interfaceRealization xmi:id="_5rfaQmNqEeWpPIXpP0H8rg" client="_5nr4UGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uXIEGNqEeWpPIXpP0H8rg" name="SwitcherStrategy" specification="_5rgBUGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uXIEWNqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uXIEmNqEeWpPIXpP0H8rg" type="_5nr4UGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>updateStrategy = strategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uXIE2NqEeWpPIXpP0H8rg" name="updateState" specification="_5rgoYGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uXIFGNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uXIFWNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>updateStrategy.updateState(context, dispatcher);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uXIFmNqEeWpPIXpP0H8rg" name="setUpdateStrategy" specification="_5rhPcmNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uXIF2NqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>if(strategy == null) {
			throw new IllegalArgumentException(&quot;Update Strategy cannot be null&quot;);
		}
		updateStrategy = strategy;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5rgBUGNqEeWpPIXpP0H8rg" name="SwitcherStrategy" method="_5uXIEGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5rgBUmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5rgBU2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5um_smNqEeWpPIXpP0H8rg">
              <body>Construct a SwitcherStrategy with the given update strategy as the initial one to use.
	 * @param strategy the initial update strategy</body>
            </ownedComment>
            <ownedParameter xmi:id="_5rgBUWNqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rgBVGNqEeWpPIXpP0H8rg" type="_5nr4UGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5rgoYGNqEeWpPIXpP0H8rg" name="updateState" method="_5uXIE2NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5rgoYWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5rgoYmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5rhPcmNqEeWpPIXpP0H8rg" name="setUpdateStrategy" method="_5uXIFmNqEeWpPIXpP0H8rg">
            <ownedComment xmi:id="_5um_s2NqEeWpPIXpP0H8rg">
              <body>Set the underlying strategy to a new strategy.
	 * @param strategy the new udpate strategy to use</body>
            </ownedComment>
            <ownedParameter xmi:id="_5rhPc2NqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5nuUkGNqEeWpPIXpP0H8rg" name="WanderStrategy">
          <ownedComment xmi:id="_5um_tGNqEeWpPIXpP0H8rg">
            <body>An IUpdateStrategy implementation that set the velocity of a ball randomly.
 *</body>
          </ownedComment>
          <interfaceRealization xmi:id="_5rh2gGNqEeWpPIXpP0H8rg" client="_5nuUkGNqEeWpPIXpP0H8rg" supplier="_5nlKoGNqEeWpPIXpP0H8rg" contract="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uXvIGNqEeWpPIXpP0H8rg" name="updateState" specification="_5ridkGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uXvIWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uXvImNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>context.setVelocity(Randomizer.Singleton.randomVel(new Rectangle(10,10)));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5ridkGNqEeWpPIXpP0H8rg" name="updateState" method="_5uXvIGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5ridkWNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5ridkmNqEeWpPIXpP0H8rg" name="dispatcher" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vLAYWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vLAYmNqEeWpPIXpP0H8rg _5trLkGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vLAYmNqEeWpPIXpP0H8rg" name="" type="_5njVcGNqEeWpPIXpP0H8rg" association="_5vLAYWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vLncWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vLncmNqEeWpPIXpP0H8rg _5tryoWNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vLncmNqEeWpPIXpP0H8rg" name="" type="_5nnm4GNqEeWpPIXpP0H8rg" association="_5vLncWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vNcoWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vNcomNqEeWpPIXpP0H8rg _5tsZsGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vNcomNqEeWpPIXpP0H8rg" name="" type="_5nnm4GNqEeWpPIXpP0H8rg" association="_5vNcoWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vODsWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vODsmNqEeWpPIXpP0H8rg _5ttAwGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vODsmNqEeWpPIXpP0H8rg" name="" type="_5nr4UGNqEeWpPIXpP0H8rg" association="_5vODsWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5jVj0GNqEeWpPIXpP0H8rg" name="paint">
        <packagedElement xmi:type="uml:Class" xmi:id="_5mRjEWNqEeWpPIXpP0H8rg" name="ADecoratorPaintStrategy">
          <ownedComment xmi:id="_5uiuRWNqEeWpPIXpP0H8rg">
            <body>Abstract class that provides default behavior for subclasses 
that will decorate another IPaintStrategy to add functionality 
to that strategy. All this class's methods do is to simply 
delegate to the decoree. A subclass should override one or more 
methods, adding additional processing either before or after 
delegating to the decoree. Note that this class cannot be used 
by the BallWorld system directly as it lacks a no-parameter 
constructor.
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5qq64GNqEeWpPIXpP0H8rg" general="_5mVNcGNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tdJIGNqEeWpPIXpP0H8rg" name="decoree" visibility="private" type="_5mVNcGNqEeWpPIXpP0H8rg" association="_5vBPYWNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uE0MGNqEeWpPIXpP0H8rg" name="ADecoratorPaintStrategy" specification="_5qpFsGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uFbQGNqEeWpPIXpP0H8rg" name="decoree" type="_5mVNcGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uFbQWNqEeWpPIXpP0H8rg" type="_5mRjEWNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
     this.decoree = decoree;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uFbQmNqEeWpPIXpP0H8rg" name="init" specification="_5qpswGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uFbQ2NqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>decoree.init(host);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uFbRGNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5sTSkGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uFbRWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uFbRmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uFbR2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>decoree.paintXfrm(g, host, at);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uFbSGNqEeWpPIXpP0H8rg" name="paint" specification="_5sUgsmNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uFbSWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uFbSmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>decoree.paint(g, host);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5qpFsGNqEeWpPIXpP0H8rg" name="ADecoratorPaintStrategy" method="_5uE0MGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5qpFsmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5qpFs2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5uiuRmNqEeWpPIXpP0H8rg">
              <body>Constructor that takes the decoree paint strategy
     * @param decoree The paint strategy that is to be decorated</body>
            </ownedComment>
            <ownedParameter xmi:id="_5qpFsWNqEeWpPIXpP0H8rg" name="decoree" type="_5mVNcGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5qpFtGNqEeWpPIXpP0H8rg" type="_5mRjEWNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5qpswGNqEeWpPIXpP0H8rg" name="init" method="_5uFbQmNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5qpswWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sTSkGNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uFbRGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sTSkWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sTSkmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sTSk2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sUgsmNqEeWpPIXpP0H8rg" name="paint" method="_5uFbSGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sUgs2NqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sVHwGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5jsJIGNqEeWpPIXpP0H8rg" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_5mvdIGNqEeWpPIXpP0H8rg" name="EllipseShapeFactory">
            <ownedComment xmi:id="_5uj8ZmNqEeWpPIXpP0H8rg">
              <body>Concrete shape factory that instantiates Ellipse2D.Double shapes.
@author ls53@rice.edu</body>
            </ownedComment>
            <ownedAttribute xmi:id="_5tlE8GNqEeWpPIXpP0H8rg" name="Singleton" isLeaf="true" isStatic="true" type="_5mvdIGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vIkIWNqEeWpPIXpP0H8rg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tlE8WNqEeWpPIXpP0H8rg" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_5rCHQGNqEeWpPIXpP0H8rg" client="_5mvdIGNqEeWpPIXpP0H8rg" supplier="_5m3Y8GNqEeWpPIXpP0H8rg" contract="_5m3Y8GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uMI9WNqEeWpPIXpP0H8rg" name="makeShape" specification="_5mxSUWNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uMI9mNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uMI92NqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uMI-GNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uMI-WNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uMI-mNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>return new Ellipse2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5mwEMGNqEeWpPIXpP0H8rg" name="EllipseShapeFactory" visibility="private">
              <eAnnotations xmi:id="_5mwrQGNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5mwrQWNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5mxSUGNqEeWpPIXpP0H8rg" type="_5mvdIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5mxSUWNqEeWpPIXpP0H8rg" name="makeShape" method="_5uMI9WNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5mx5YGNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5mx5YWNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5mx5YmNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5mx5Y2NqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5srGAGNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5m0VoGNqEeWpPIXpP0H8rg" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_5uj8Z2NqEeWpPIXpP0H8rg">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.&#xD;
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rCuUGNqEeWpPIXpP0H8rg" general="_5m5OIGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uMwAGNqEeWpPIXpP0H8rg" name="Fish1PolygonFactory" specification="_5m08sGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uMwAWNqEeWpPIXpP0H8rg" type="_5m0VoGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 0.1, new Point(-5, 2), &#xD;
		                                  new Point(-5, -2), &#xD;
		                                  new Point(-3, 0), &#xD;
		                                  new Point(3, -3), &#xD;
		                                  new Point(5, -1), &#xD;
		                                  new Point(3, 0), &#xD;
		                                  new Point(5, 1), &#xD;
		                                  new Point(3, 3), &#xD;
		                                  new Point(-3, 0));&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5m08sGNqEeWpPIXpP0H8rg" name="Fish1PolygonFactory" method="_5uMwAGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5m08sWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5m1jwGNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5m1jwWNqEeWpPIXpP0H8rg" type="_5m0VoGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5m2K0GNqEeWpPIXpP0H8rg" name="Fish2PolygonFactory">
            <ownedComment xmi:id="_5ukjcGNqEeWpPIXpP0H8rg">
              <body>Concrete PolygonFactory that creates fish-shaped 
Polygons that have a shorter tail and a closed mouth.
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rDVYGNqEeWpPIXpP0H8rg" general="_5m5OIGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uMwAmNqEeWpPIXpP0H8rg" name="Fish2PolygonFactory" specification="_5m2K0WNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uMwA2NqEeWpPIXpP0H8rg" type="_5m2K0GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 0.1, new Point(-8, 3), 
                                         new Point(-8, -3), 
                                         new Point(-3, 0), 
                                         new Point(3, -3), 
                                         new Point(5, -1), 
                                         new Point(3, 0), 
                                         new Point(5, 1), 
                                         new Point(3, 3), 
                                         new Point(-3, 0));
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5m2K0WNqEeWpPIXpP0H8rg" name="Fish2PolygonFactory" method="_5uMwAmNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5m2x4GNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5m2x4WNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5m2x4mNqEeWpPIXpP0H8rg" type="_5m2K0GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5m3Y8GNqEeWpPIXpP0H8rg" name="IShapeFactory">
            <ownedComment xmi:id="_5ukjcWNqEeWpPIXpP0H8rg">
              <body>Abstract factory that creates a Shape for use as prototype shapes in 
IPaintStrategies. The location of the center of the shape and the x 
and y scales can be specified.
@author ls53@rice.edu</body>
            </ownedComment>
            <ownedOperation xmi:id="_5m4AAGNqEeWpPIXpP0H8rg" name="makeShape">
              <ownedParameter xmi:id="_5m4AAWNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m4AAmNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m4AA2NqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m4nEGNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5srGAWNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5m5OIGNqEeWpPIXpP0H8rg" name="PolygonFactory">
            <ownedComment xmi:id="_5ukjcmNqEeWpPIXpP0H8rg">
              <body>Concrete IShapeFactory that provides the invariant behavior 
to instantiate a Shape that is a Polygon. This class can be 
instantiated and used simply by supplying the desired points 
in its constructor, or sub-classed an the constructor overridden. 
Note that this class cannot be used directly by the BallWar system 
because it does not have a no-parameter constructor.
@author ls53@rice.edu</body>
            </ownedComment>
            <ownedAttribute xmi:id="_5tlsAGNqEeWpPIXpP0H8rg" name="poly" visibility="private" type="_5rD8cGNqEeWpPIXpP0H8rg" association="_5vJLMWNqEeWpPIXpP0H8rg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tlsAWNqEeWpPIXpP0H8rg" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_5tmTEGNqEeWpPIXpP0H8rg" name="at" visibility="private" type="_5qoeoGNqEeWpPIXpP0H8rg" association="_5vJLNGNqEeWpPIXpP0H8rg"/>
            <ownedAttribute xmi:id="_5tmTEmNqEeWpPIXpP0H8rg" name="scaleFactor" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tm6IGNqEeWpPIXpP0H8rg" value="1.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_5rEjgGNqEeWpPIXpP0H8rg" client="_5m5OIGNqEeWpPIXpP0H8rg" supplier="_5m3Y8GNqEeWpPIXpP0H8rg" contract="_5m3Y8GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uN-IGNqEeWpPIXpP0H8rg" name="PolygonFactory" specification="_5ssUIGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uN-IWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uN-ImNqEeWpPIXpP0H8rg" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uN-I2NqEeWpPIXpP0H8rg" name="points" type="_5qXY4GNqEeWpPIXpP0H8rg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uN-JGNqEeWpPIXpP0H8rg" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uN-JWNqEeWpPIXpP0H8rg" type="_5m5OIGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this.at = at;
     this.scaleFactor = scaleFactor;
     for (Point point : points) {
         poly.addPoint(point.x, point.y);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uOlMGNqEeWpPIXpP0H8rg" name="makeShape" specification="_5m6cQGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uOlMWNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlMmNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlM2NqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlNGNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlNWNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>at.setToTranslation(x, y);
     at.scale(xScale * scaleFactor, yScale * scaleFactor);
     return at.createTransformedShape(poly);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5m6cQGNqEeWpPIXpP0H8rg" name="makeShape" method="_5uOlMGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5m6cQWNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m6cQmNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m7DUGNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5m7DUWNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5stiQmNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5ssUIGNqEeWpPIXpP0H8rg" name="PolygonFactory" method="_5uN-IGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5ss7MmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5ss7M2NqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5ssUIWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5ss7MGNqEeWpPIXpP0H8rg" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5ss7MWNqEeWpPIXpP0H8rg" name="points" type="_5qXY4GNqEeWpPIXpP0H8rg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5stiQGNqEeWpPIXpP0H8rg" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5ss7NWNqEeWpPIXpP0H8rg" type="_5m5OIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5m_UwGNqEeWpPIXpP0H8rg" name="RectangleShapeFactory">
            <ownedComment xmi:id="_5ukjc2NqEeWpPIXpP0H8rg">
              <body>Concrete IShapeFactory that instantiates Rectangle2d.Double shapes.
@author ls53@rice.edu</body>
            </ownedComment>
            <ownedAttribute xmi:id="_5tnhMGNqEeWpPIXpP0H8rg" name="Singleton" isLeaf="true" isStatic="true" type="_5m_UwGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vJyQWNqEeWpPIXpP0H8rg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tnhMWNqEeWpPIXpP0H8rg" value="new RectangleShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_5rHm0WNqEeWpPIXpP0H8rg" client="_5m_UwGNqEeWpPIXpP0H8rg" supplier="_5m3Y8GNqEeWpPIXpP0H8rg" contract="_5m3Y8GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uOlNmNqEeWpPIXpP0H8rg" name="makeShape" specification="_5nBJ8GNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uOlN2NqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlOGNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlOWNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlOmNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uOlO2NqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>return new Rectangle2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5m_70GNqEeWpPIXpP0H8rg" name="RectangleShapeFactory" visibility="private">
              <eAnnotations xmi:id="_5nAi4GNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nAi4WNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nAi42NqEeWpPIXpP0H8rg" type="_5m_UwGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5nBJ8GNqEeWpPIXpP0H8rg" name="makeShape" method="_5uOlNmNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5nBJ8WNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5nBJ8mNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5nBJ82NqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5nBxAGNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5suJUGNqEeWpPIXpP0H8rg" type="_5q910GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vIkIWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vIkImNqEeWpPIXpP0H8rg _5tlE8GNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vIkImNqEeWpPIXpP0H8rg" name="" type="_5mvdIGNqEeWpPIXpP0H8rg" association="_5vIkIWNqEeWpPIXpP0H8rg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vJLMWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vJLMmNqEeWpPIXpP0H8rg _5tlsAGNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vJLMmNqEeWpPIXpP0H8rg" name="" type="_5m5OIGNqEeWpPIXpP0H8rg" association="_5vJLMWNqEeWpPIXpP0H8rg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vJLNGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vJLNWNqEeWpPIXpP0H8rg _5tmTEGNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vJLNWNqEeWpPIXpP0H8rg" name="" type="_5m5OIGNqEeWpPIXpP0H8rg" association="_5vJLNGNqEeWpPIXpP0H8rg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vJyQWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vJyQmNqEeWpPIXpP0H8rg _5tnhMGNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vJyQmNqEeWpPIXpP0H8rg" name="" type="_5m_UwGNqEeWpPIXpP0H8rg" association="_5vJyQWNqEeWpPIXpP0H8rg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5j4WYGNqEeWpPIXpP0H8rg" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_5nDmMGNqEeWpPIXpP0H8rg" name="BallPaintStrategy">
            <ownedComment xmi:id="_5ukjdGNqEeWpPIXpP0H8rg">
              <body>Paint strategy that paints a filled circle with the Ball's radius. 
@author ls53@rice.edu</body>
            </ownedComment>
            <ownedAttribute xmi:id="_5tnhMmNqEeWpPIXpP0H8rg" name="at" visibility="private" type="_5qoeoGNqEeWpPIXpP0H8rg" association="_5vKZUGNqEeWpPIXpP0H8rg"/>
            <ownedAttribute xmi:id="_5toIQWNqEeWpPIXpP0H8rg" name="ball" visibility="private" type="_5rJcAGNqEeWpPIXpP0H8rg" association="_5vKZU2NqEeWpPIXpP0H8rg"/>
            <interfaceRealization xmi:id="_5rI08GNqEeWpPIXpP0H8rg" client="_5nDmMGNqEeWpPIXpP0H8rg" supplier="_5mN4sGNqEeWpPIXpP0H8rg" contract="_5mN4sGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uPMQGNqEeWpPIXpP0H8rg" name="BallPaintStrategy" specification="_5nENQGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uPMQWNqEeWpPIXpP0H8rg" type="_5nDmMGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 1, 1);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uPzUGNqEeWpPIXpP0H8rg" name="BallPaintStrategy" specification="_5svXcGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uPzUWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uPzUmNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uPzU2NqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uPzVGNqEeWpPIXpP0H8rg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uPzVWNqEeWpPIXpP0H8rg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uPzVmNqEeWpPIXpP0H8rg" type="_5nDmMGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this.at = at;
     double diameter = 2 * width;
     this.ball = new Ellipse2D.Double(x - width, y - height, diameter, diameter);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uPzV2NqEeWpPIXpP0H8rg" name="paint" specification="_5swlkGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uPzWGNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uPzWWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
              <language>java</language>
              <body>double scale = host.getRadius();
     at.setToTranslation(host.getLocation().getX(), host.getLocation().getY());
     at.scale(scale, scale);
     g.setColor(host.getColor());
     paintXfrm(g, host, at);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uQaYGNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5sxMomNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uQaYWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uQaYmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uQaY2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <language>java</language>
              <body>((Graphics2D)g).fill(at.createTransformedShape(ball));
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nENQGNqEeWpPIXpP0H8rg" name="BallPaintStrategy" method="_5uPMQGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nENQWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nENQmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_5ukjdWNqEeWpPIXpP0H8rg">
                <body>No parameter constructor that creates a 1 pixel radius ball at the origin.</body>
              </ownedComment>
              <ownedParameter xmi:id="_5nENQ2NqEeWpPIXpP0H8rg" type="_5nDmMGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5rKDEGNqEeWpPIXpP0H8rg" name="init">
              <ownedParameter xmi:id="_5rKDEWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5svXcGNqEeWpPIXpP0H8rg" name="BallPaintStrategy" method="_5uPzUGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5sv-gGNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5sv-gWNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_5ukjdmNqEeWpPIXpP0H8rg">
                <body>Constructor that allows one to create the prototype ball of arbitrary dimension and location.
     * @param at The AffineTransform to use for internal calculations
     * @param x floating point x-coordinate of center of circle
     * @param y floating point y-coordinate of center of circle
     * @param width floating point x-radius of the circle (ellipse)
     * @param height floating point y-radius of the circle (ellipse)</body>
              </ownedComment>
              <ownedParameter xmi:id="_5svXcWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5svXcmNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5svXc2NqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5svXdGNqEeWpPIXpP0H8rg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5svXdWNqEeWpPIXpP0H8rg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5sv-gmNqEeWpPIXpP0H8rg" type="_5nDmMGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5swlkGNqEeWpPIXpP0H8rg" name="paint" method="_5uPzV2NqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5swlkWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5swlkmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5sxMomNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uQaYGNqEeWpPIXpP0H8rg">
              <ownedComment xmi:id="_5ukjd2NqEeWpPIXpP0H8rg">
                <body>Paints a transformed circle, as per the given AffineTransform Uses 
     * color already set in Graphics context
     * @param g The Graphics context to paint on
     * @param host The Ball host
     * @param at the AffineTransform to use</body>
              </ownedComment>
              <ownedParameter xmi:id="_5sxMo2NqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5sxzsGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5sxzsWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nJs0GNqEeWpPIXpP0H8rg" name="BirdSheepImagePaintStrategy">
            <ownedComment xmi:id="_5ulKgGNqEeWpPIXpP0H8rg">
              <body>An example of an ImagePaintStrategy that randomly picks one of two 
animated image files to display when it is instantiated.
@author ls53@rice.edu
 *</body>
            </ownedComment>
            <generalization xmi:id="_5rNGYGNqEeWpPIXpP0H8rg" general="_5mtn8GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uRBcGNqEeWpPIXpP0H8rg" name="BirdSheepImagePaintStrategy" specification="_5nKT4GNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uRBcWNqEeWpPIXpP0H8rg" type="_5nJs0GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(Math.random() &lt; 0.5 ? &quot;images/sheep_animate.gif&quot; : &quot;images/humbird_animate.gif&quot;, 0.5);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nKT4GNqEeWpPIXpP0H8rg" name="BirdSheepImagePaintStrategy" method="_5uRBcGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nKT4WNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nKT4mNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nKT42NqEeWpPIXpP0H8rg" type="_5nJs0GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nK68GNqEeWpPIXpP0H8rg" name="EllipsePaintStrategy">
            <ownedComment xmi:id="_5ulKgWNqEeWpPIXpP0H8rg">
              <body>Paint strategy to paint an ellipse shape
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rNGYWNqEeWpPIXpP0H8rg" general="_5mp9kGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uSPkGNqEeWpPIXpP0H8rg" name="EllipsePaintStrategy" specification="_5nLiAGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uSPkWNqEeWpPIXpP0H8rg" type="_5nK68GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 5, 2);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uSPkmNqEeWpPIXpP0H8rg" name="EllipsePaintStrategy" specification="_5syawGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uSPk2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uSPlGNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uSPlWNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uSPlmNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uSPl2NqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uSPmGNqEeWpPIXpP0H8rg" type="_5nK68GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, xScale, yScale));
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nLiAGNqEeWpPIXpP0H8rg" name="EllipsePaintStrategy" method="_5uSPkGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nLiAWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nLiAmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nLiA2NqEeWpPIXpP0H8rg" type="_5nK68GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5syawGNqEeWpPIXpP0H8rg" name="EllipsePaintStrategy" method="_5uSPkmNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5syaxmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5szB0GNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5syawWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5syawmNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5syaw2NqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5syaxGNqEeWpPIXpP0H8rg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5syaxWNqEeWpPIXpP0H8rg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5szB0WNqEeWpPIXpP0H8rg" type="_5nK68GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nMwIGNqEeWpPIXpP0H8rg" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_5ulKgmNqEeWpPIXpP0H8rg">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolyfonFactory.
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rNtcGNqEeWpPIXpP0H8rg" general="_5mp9kGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uS2oGNqEeWpPIXpP0H8rg" name="Fish1PaintStrategy" specification="_5nNXMGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uS2oWNqEeWpPIXpP0H8rg" type="_5nMwIGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uS2omNqEeWpPIXpP0H8rg" name="Fish1PaintStrategy" specification="_5szB0mNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uS2o2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uS2pGNqEeWpPIXpP0H8rg" type="_5nMwIGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PolygonFactory().makeShape(0, 0, 2, 2));
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nNXMGNqEeWpPIXpP0H8rg" name="Fish1PaintStrategy" method="_5uS2oGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nPMYGNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nPMYWNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nPMYmNqEeWpPIXpP0H8rg" type="_5nMwIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5szB0mNqEeWpPIXpP0H8rg" name="Fish1PaintStrategy" method="_5uS2omNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5szo4GNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5szo4WNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5szB02NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5szo4mNqEeWpPIXpP0H8rg" type="_5nMwIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nQagGNqEeWpPIXpP0H8rg" name="Fish2PaintStrategy">
            <ownedComment xmi:id="_5ulKg2NqEeWpPIXpP0H8rg">
              <body>Paint strategy that paints a fish-shaped Polygon 
generated by a Fish2PolyfonFactory.
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rO7kGNqEeWpPIXpP0H8rg" general="_5mp9kGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uS2pWNqEeWpPIXpP0H8rg" name="Fish2PaintStrategy" specification="_5nRBkGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uS2pmNqEeWpPIXpP0H8rg" type="_5nQagGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uTdsGNqEeWpPIXpP0H8rg" name="Fish2PaintStrategy" specification="_5szo42NqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uTdsWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uTdsmNqEeWpPIXpP0H8rg" type="_5nQagGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish2PolygonFactory().makeShape(0, 0, 2, 2));
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nRBkGNqEeWpPIXpP0H8rg" name="Fish2PaintStrategy" method="_5uS2pWNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nRBkWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nRBkmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nRBk2NqEeWpPIXpP0H8rg" type="_5nQagGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5szo42NqEeWpPIXpP0H8rg" name="Fish2PaintStrategy" method="_5uTdsGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5szo5WNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5s0P8GNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5szo5GNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s0P8WNqEeWpPIXpP0H8rg" type="_5nQagGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nS2wGNqEeWpPIXpP0H8rg" name="LambPaintStrategy">
            <ownedComment xmi:id="_5ulKhGNqEeWpPIXpP0H8rg">
              <body>Paint a lamb&#xD;
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rPioGNqEeWpPIXpP0H8rg" general="_5mtn8GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUEwGNqEeWpPIXpP0H8rg" name="LambPaintStrategy" specification="_5nTd0GNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUEwWNqEeWpPIXpP0H8rg" type="_5nS2wGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(&quot;Images/sheep_animate.gif&quot;, 0.5);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nTd0GNqEeWpPIXpP0H8rg" name="LambPaintStrategy" method="_5uUEwGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nTd0WNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nTd0mNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nTd02NqEeWpPIXpP0H8rg" type="_5nS2wGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nUE4GNqEeWpPIXpP0H8rg" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_5ulKhWNqEeWpPIXpP0H8rg">
              <body>Subclass of MultiPaintStrategy that uses a SwimFishPaintStrategy 
and an EllipsePaintStrategy to paint a swimming fish shape that has an eye.
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rQJsGNqEeWpPIXpP0H8rg" general="_5mmTMGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUEwmNqEeWpPIXpP0H8rg" name="NiceFishPaintStrategy" specification="_5nUr8GNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUEw2NqEeWpPIXpP0H8rg" type="_5nUE4GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUExGNqEeWpPIXpP0H8rg" name="NiceFishPaintStrategy" specification="_5s0P8mNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUExWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uUExmNqEeWpPIXpP0H8rg" type="_5nUE4GNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(new SwimFishPaintStrategy(), 
           new FixedColorDecoratorPaintStrategy(Color.BLACK, new EllipsePaintStrategy(at, 0.3, -0.15, 0.1, 0.1)));
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUEx2NqEeWpPIXpP0H8rg" name="paintCfg" specification="_5s03BGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUEyGNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uUEyWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
              <language>java</language>
              <body>if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
         at.scale(1.0, -1.0);
     }
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nUr8GNqEeWpPIXpP0H8rg" name="NiceFishPaintStrategy" method="_5uUEwmNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nUr8WNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nUr8mNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nUr82NqEeWpPIXpP0H8rg" type="_5nUE4GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5s0P8mNqEeWpPIXpP0H8rg" name="NiceFishPaintStrategy" method="_5uUExGNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5s03AWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5s03AmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5s03AGNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s03A2NqEeWpPIXpP0H8rg" type="_5nUE4GNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5s03BGNqEeWpPIXpP0H8rg" name="paintCfg" visibility="protected" method="_5uUEx2NqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5s03BWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s03BmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nWhIGNqEeWpPIXpP0H8rg" name="RectanglePaintStrategy">
            <ownedComment xmi:id="_5ulKhmNqEeWpPIXpP0H8rg">
              <body>Concrete paint strategy that paints a rectangular shape scaled to the size of the ball.&#xD;
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rQwwGNqEeWpPIXpP0H8rg" general="_5mp9kGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUr0GNqEeWpPIXpP0H8rg" name="RectanglePaintStrategy" specification="_5nXIMGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUr0WNqEeWpPIXpP0H8rg" type="_5nWhIGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 5, 2);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUr0mNqEeWpPIXpP0H8rg" name="RectanglePaintStrategy" specification="_5s2FIGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUr02NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uUr1GNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uUr1WNqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uUr1mNqEeWpPIXpP0H8rg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uUr12NqEeWpPIXpP0H8rg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5uUr2GNqEeWpPIXpP0H8rg" type="_5nWhIGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(at, RectangleShapeFactory.Singleton.makeShape(x, y, width, height));&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nXIMGNqEeWpPIXpP0H8rg" name="RectanglePaintStrategy" method="_5uUr0GNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5nXIMWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nXIMmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nXIM2NqEeWpPIXpP0H8rg" type="_5nWhIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5s2FIGNqEeWpPIXpP0H8rg" name="RectanglePaintStrategy" method="_5uUr0mNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5s2sMGNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5s2sMWNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5s2FIWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s2FImNqEeWpPIXpP0H8rg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5s2FI2NqEeWpPIXpP0H8rg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5s2FJGNqEeWpPIXpP0H8rg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5s2FJWNqEeWpPIXpP0H8rg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_5s2sMmNqEeWpPIXpP0H8rg" type="_5nWhIGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5nYWUGNqEeWpPIXpP0H8rg" name="SquarePaintStrategy">
            <ownedComment xmi:id="_5ulKh2NqEeWpPIXpP0H8rg">
              <body>Paint strategy that paints a filled square with the Ball's radius.&#xD;
This functionality is duplicated by the RectanglePaintStrategy.&#xD;
The class demonstrates a direct implementation of IPaintStrategy.</body>
            </ownedComment>
            <interfaceRealization xmi:id="_5rRX0GNqEeWpPIXpP0H8rg" client="_5nYWUGNqEeWpPIXpP0H8rg" supplier="_5mN4sGNqEeWpPIXpP0H8rg" contract="_5mN4sGNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uUr2WNqEeWpPIXpP0H8rg" name="paint" specification="_5s3TQGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uUr2mNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uUr22NqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
              <language>java</language>
              <body>int halfSide = host.getRadius();&#xD;
   g.setColor(host.getColor());&#xD;
   g.fillRect(host.getLocation().x - halfSide, host.getLocation().y - halfSide, 2 * halfSide, 2 * halfSide);&#xD;
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5nY9YGNqEeWpPIXpP0H8rg" name="SquarePaintStrategy">
              <eAnnotations xmi:id="_5nY9YWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5nY9YmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5nZkcWNqEeWpPIXpP0H8rg" type="_5nYWUGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5rR-4GNqEeWpPIXpP0H8rg" name="init">
              <ownedParameter xmi:id="_5rR-4WNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5s3TQGNqEeWpPIXpP0H8rg" name="paint" method="_5uUr2WNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5s3TQWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s3TQmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5naykGNqEeWpPIXpP0H8rg" name="SwimFishPaintStrategy">
            <ownedComment xmi:id="_5ulKiGNqEeWpPIXpP0H8rg">
              <body>Subclass of AnimatePaintStrategy that alternates between a Fish1PaintStrategy
 and a Fish2PaintStrategy.
@author ls53@rice.edu</body>
            </ownedComment>
            <generalization xmi:id="_5rTNAGNqEeWpPIXpP0H8rg" general="_5mZe4GNqEeWpPIXpP0H8rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uVS4GNqEeWpPIXpP0H8rg" name="SwimFishPaintStrategy" specification="_5ncAsGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uVS4WNqEeWpPIXpP0H8rg" type="_5naykGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uVS4mNqEeWpPIXpP0H8rg" name="SwimFishPaintStrategy" specification="_5s36UGNqEeWpPIXpP0H8rg">
              <ownedParameter xmi:id="_5uVS42NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5uVS5GNqEeWpPIXpP0H8rg" type="_5naykGNqEeWpPIXpP0H8rg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PaintStrategy(), new Fish2PaintStrategy());
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_5ncAsGNqEeWpPIXpP0H8rg" name="SwimFishPaintStrategy" method="_5uVS4GNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5ncAsWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5ncAsmNqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5ncAs2NqEeWpPIXpP0H8rg" type="_5naykGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_5s36UGNqEeWpPIXpP0H8rg" name="SwimFishPaintStrategy" method="_5uVS4mNqEeWpPIXpP0H8rg">
              <eAnnotations xmi:id="_5s36UmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_5s36U2NqEeWpPIXpP0H8rg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_5s36UWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
              <ownedParameter xmi:id="_5s36VGNqEeWpPIXpP0H8rg" type="_5naykGNqEeWpPIXpP0H8rg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vKZUGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vKZUWNqEeWpPIXpP0H8rg _5tnhMmNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vKZUWNqEeWpPIXpP0H8rg" name="" type="_5nDmMGNqEeWpPIXpP0H8rg" association="_5vKZUGNqEeWpPIXpP0H8rg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_5vKZU2NqEeWpPIXpP0H8rg" name="" memberEnd="_5vKZVGNqEeWpPIXpP0H8rg _5toIQWNqEeWpPIXpP0H8rg">
            <ownedEnd xmi:id="_5vKZVGNqEeWpPIXpP0H8rg" name="" type="_5nDmMGNqEeWpPIXpP0H8rg" association="_5vKZU2NqEeWpPIXpP0H8rg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mVNcGNqEeWpPIXpP0H8rg" name="APaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_5uiuR2NqEeWpPIXpP0H8rg">
            <body>The top-level affine transform-based paint strategy 
that provides services for its subclasses, plus default 
behaviors and abstract behaviors.
@author ls53@rice.edu</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5teXQGNqEeWpPIXpP0H8rg" name="at" visibility="protected" type="_5qoeoGNqEeWpPIXpP0H8rg" association="_5vDEkWNqEeWpPIXpP0H8rg"/>
          <interfaceRealization xmi:id="_5qswEGNqEeWpPIXpP0H8rg" client="_5mVNcGNqEeWpPIXpP0H8rg" supplier="_5mN4sGNqEeWpPIXpP0H8rg" contract="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uGCUGNqEeWpPIXpP0H8rg" name="APaintStrategy" specification="_5sWV4GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uGCUWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uGCUmNqEeWpPIXpP0H8rg" type="_5mVNcGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>this.at = at;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uGpYGNqEeWpPIXpP0H8rg" name="getAT" specification="_5mWbkGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uGpYWNqEeWpPIXpP0H8rg" type="_5qoeoGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>return at;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uGpYmNqEeWpPIXpP0H8rg" name="paint" specification="_5sW88WNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uGpY2NqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uGpZGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>double scale = host.getRadius();
     at.setToTranslation(host.getLocation().getX(), host.getLocation().getY());
     at.scale(scale, scale);
     at.rotate(Math.atan2(host.getVelocity().getY(), host.getVelocity().getX()));
     g.setColor(host.getColor());
     paintCfg(g, host);
     paintXfrm(g, host, at);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5mWbkGNqEeWpPIXpP0H8rg" name="getAT" visibility="protected" method="_5uGpYGNqEeWpPIXpP0H8rg">
            <ownedComment xmi:id="_5ujVUGNqEeWpPIXpP0H8rg">
              <body>Protected accessor for the internal affine transform
     * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_5sW88GNqEeWpPIXpP0H8rg" type="_5qoeoGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5qtXIGNqEeWpPIXpP0H8rg" name="init">
            <ownedParameter xmi:id="_5qtXIWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sWV4GNqEeWpPIXpP0H8rg" name="APaintStrategy" method="_5uGCUGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5sWV4mNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5sWV42NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5uiuSGNqEeWpPIXpP0H8rg">
              <body>Constructor that initializes the strategy with an affine transform
     * @param at The AffineTransform for this paint strategy to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_5sWV4WNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sWV5GNqEeWpPIXpP0H8rg" type="_5mVNcGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sW88WNqEeWpPIXpP0H8rg" name="paint" method="_5uGpYmNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sW88mNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sW882NqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sYLEmNqEeWpPIXpP0H8rg" name="paintCfg" visibility="protected">
            <ownedParameter xmi:id="_5sYyIGNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sYyIWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sZZMWNqEeWpPIXpP0H8rg" name="paintXfrm" isAbstract="true">
            <ownedComment xmi:id="_5ujVUWNqEeWpPIXpP0H8rg">
              <body>Paints the host onto the given Graphics context. The image 
     * is translated, scaled and rotated as determined by the given 
     * affine transformation. This method is intended to be called 
     * either by a class's (or superclass's) own paint method or 
     * by another paint strategy who is sharing the affine transform. 
     * This allows the same transformation to be shared amongst 
     * multiple paint strategies.
     * @param g The graphics context to draw upon.
     * @param host The host ball.
     * @param at The affine transform to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_5saAQGNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5saAQWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5saAQmNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mZe4GNqEeWpPIXpP0H8rg" name="AnimatePaintStrategy">
          <ownedComment xmi:id="_5ujVUmNqEeWpPIXpP0H8rg">
            <body>Concrete paint strategy that cycles through a sequence 
of paint strategies, painting one per paint update. 
Note: This paint strategy cannot be directly instantiated 
by the BallWorld system because it does not have a no-parameter 
constructor.
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5qxokGNqEeWpPIXpP0H8rg" general="_5mVNcGNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5te-UGNqEeWpPIXpP0H8rg" name="paintStrategies" visibility="private" type="_5mVNcGNqEeWpPIXpP0H8rg" association="_5vDroWNqEeWpPIXpP0H8rg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5tflYGNqEeWpPIXpP0H8rg" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5tgMcWNqEeWpPIXpP0H8rg" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uHQcGNqEeWpPIXpP0H8rg" name="AnimatePaintStrategy" specification="_5qwacGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uHQcWNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uHQcmNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uHQc2NqEeWpPIXpP0H8rg" type="_5mZe4GNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), paintStrategies);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uH3gGNqEeWpPIXpP0H8rg" name="AnimatePaintStrategy" specification="_5sbOYGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uH3gWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uH3gmNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uH3g2NqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uH3hGNqEeWpPIXpP0H8rg" type="_5mZe4GNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(at);
     this.paintStrategies = paintStrategies;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uH3hWNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5sccgGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uH3hmNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uH3h2NqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uH3iGNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>paintStrategies[count++].paintXfrm(g, host, at);
     if (count == paintStrategies.length) {
         count = 0;
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5qwacGNqEeWpPIXpP0H8rg" name="AnimatePaintStrategy" method="_5uHQcGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5qwacmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5qwac2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_5qwacWNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5qxBgWNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5qxBgGNqEeWpPIXpP0H8rg" type="_5mZe4GNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sbOYGNqEeWpPIXpP0H8rg" name="AnimatePaintStrategy" method="_5uH3gGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5sbOY2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5sbOZGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_5sbOYWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sbOYmNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5sb1cmNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5sb1cWNqEeWpPIXpP0H8rg" type="_5mZe4GNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sccgGNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uH3hWNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sccgWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sccgmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sccg2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mdJQGNqEeWpPIXpP0H8rg" name="FixedColorDecoratorPaintStrategy">
          <ownedComment xmi:id="_5ujVU2NqEeWpPIXpP0H8rg">
            <body>Decorator paint strategy that decorates another IPaintStrategy and causes 
the painted color to always be a specified, fixed color. Useful when you 
want a shape that is a specific color and not the color of the host Ball, 
for example, the black colored eye on a fish. Note that this class only 
works in situations where paintXfrm is called, because if paint is called, 
the call is delegated to the decoree, which will then delegate to its own 
paintXfrm method, not this decorator's method. Thus, this class is best 
used when being composed with other paint strategies inside a MultiPaintStrategy.
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5qzdwGNqEeWpPIXpP0H8rg" general="_5mRjEWNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tgzgGNqEeWpPIXpP0H8rg" name="color" visibility="private" type="_5qWx0GNqEeWpPIXpP0H8rg" association="_5vE5wGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uIekGNqEeWpPIXpP0H8rg" name="FixedColorDecoratorPaintStrategy" specification="_5se4wGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uIekWNqEeWpPIXpP0H8rg" name="color" type="_5qWx0GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uIekmNqEeWpPIXpP0H8rg" name="decoree" type="_5mVNcGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uIek2NqEeWpPIXpP0H8rg" type="_5mdJQGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(decoree);
     this.color = color;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uIelGNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5sgG4GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uIelWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uIelmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uIel2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>g.setColor(color);
     super.paintXfrm(g, host, at);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5se4wGNqEeWpPIXpP0H8rg" name="FixedColorDecoratorPaintStrategy" method="_5uIekGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5sff0GNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5sff0WNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5ujVVGNqEeWpPIXpP0H8rg">
              <body>Constructor that takes the fixed color and the decoree strategy
     * @param color The fixed color to use
     * @param decoree The decoree strategy whose color is overridden</body>
            </ownedComment>
            <ownedParameter xmi:id="_5se4wWNqEeWpPIXpP0H8rg" name="color" type="_5qWx0GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5se4wmNqEeWpPIXpP0H8rg" name="decoree" type="_5mVNcGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sff0mNqEeWpPIXpP0H8rg" type="_5mdJQGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sgG4GNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uIelGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sgG4WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sgG4mNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sgG42NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mgMkGNqEeWpPIXpP0H8rg" name="ImagePaintStrategy">
          <ownedComment xmi:id="_5ujVVWNqEeWpPIXpP0H8rg">
            <body>Paint strategy that paints an image from a file, scaled to 
the host Ball's radius. Note that this class cannot be used 
by the BallWar system directly as it is lacking a no-parameter 
constructor.
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5q49UGNqEeWpPIXpP0H8rg" general="_5mVNcGNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5thakGNqEeWpPIXpP0H8rg" name="image" visibility="private" type="_5q16AWNqEeWpPIXpP0H8rg" association="_5vGH4WNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5thakmNqEeWpPIXpP0H8rg" name="imageObs" visibility="private" type="_5q3IIWNqEeWpPIXpP0H8rg" association="_5vGu8WNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tiBoWNqEeWpPIXpP0H8rg" name="fillFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tiBomNqEeWpPIXpP0H8rg" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5tiBpGNqEeWpPIXpP0H8rg" name="scaleFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tiBpWNqEeWpPIXpP0H8rg" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5tiosWNqEeWpPIXpP0H8rg" name="localAT" visibility="private" type="_5qoeoGNqEeWpPIXpP0H8rg" association="_5vHWAWNqEeWpPIXpP0H8rg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tiosmNqEeWpPIXpP0H8rg" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uJFoGNqEeWpPIXpP0H8rg" name="ImagePaintStrategy" specification="_5mhasGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uJFoWNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uJFomNqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uJFo2NqEeWpPIXpP0H8rg" type="_5mgMkGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), filename, fillFactor);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uJFpGNqEeWpPIXpP0H8rg" name="ImagePaintStrategy" specification="_5sijIGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uJFpWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uJFpmNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uJFp2NqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uJFqGNqEeWpPIXpP0H8rg" type="_5mgMkGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(at);
     
     this.fillFactor = fillFactor;
     try {
         image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(filename));
     } catch (Exception e) {
         System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot;+filename +&quot;\n&quot;+e);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uJFqWNqEeWpPIXpP0H8rg" name="init" specification="_5q3vMGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uJssGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>imageObs = host.getCanvas();
     MediaTracker mt = new MediaTracker(host.getCanvas());
     mt.addImage(image, 1);
     
     try {
         mt.waitForAll();
     } catch (Exception e) {
         System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot; + e);
     }
     
     scaleFactor = 2.0 / (fillFactor * (image.getWidth(imageObs) + image.getHeight(imageObs)) / 2.0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uJssWNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5skYUGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uJssmNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uJss2NqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uJstGNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>localAT.setToScale(scaleFactor, scaleFactor);
     localAT.translate(-image.getWidth(imageObs) / 2.0, -image.getHeight(imageObs) / 2.0);
     localAT.preConcatenate(at);
     ((Graphics2D)g).drawImage(image, localAT, imageObs);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5mhasGNqEeWpPIXpP0H8rg" name="ImagePaintStrategy" method="_5uJFoGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5miBwmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5miBw2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5ujVVmNqEeWpPIXpP0H8rg">
              <body>Constructor that takes the image filename and fill factor. 
     * An AffineTransform is instantiated for internal use. GIF, 
     * JPG, PNG and any other file that can be loaded by an ImageIcon 
     * object can be used, including animated GIF's as the above files are.
     * @param filename The filename of the image file to use.
     * @param fillFactor The ratio of the desired average radius of the image 
     *        to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_5miBwGNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5miBwWNqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5miBxGNqEeWpPIXpP0H8rg" type="_5mgMkGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5q3vMGNqEeWpPIXpP0H8rg" name="init" method="_5uJFqWNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5q3vMWNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sijIGNqEeWpPIXpP0H8rg" name="ImagePaintStrategy" method="_5uJFpGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5sjKM2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5sjxQGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5ujVV2NqEeWpPIXpP0H8rg">
              <body>Constructor that takes an external AffineTransform, the 
     * filename of the image to paint and a fill factor of the image.
     * @param at The AffineTransform to use internally.
     * @param filename The filename of the image file to use.
     * @param fillFactor The ratio of the desired average diameter of the 
     *        image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_5sjKMGNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sjKMWNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5sjKMmNqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5sjxQWNqEeWpPIXpP0H8rg" type="_5mgMkGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5skYUGNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uJssWNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5skYUWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5skYUmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5skYU2NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mmTMGNqEeWpPIXpP0H8rg" name="MultiplePaintStrategy">
          <ownedComment xmi:id="_5uj8YGNqEeWpPIXpP0H8rg">
            <body>A composite design pattern extension of APaintStrategy 
that paints a set of paint strategies. Note: This paint 
strategy cannot be used directly by the BallWorld system 
because it lacks a no-parameter constructor.
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5q7ZkGNqEeWpPIXpP0H8rg" general="_5mVNcGNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tjPwGNqEeWpPIXpP0H8rg" name="paintStrategies" visibility="private" type="_5mVNcGNqEeWpPIXpP0H8rg" association="_5vH9EGNqEeWpPIXpP0H8rg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5tjPwWNqEeWpPIXpP0H8rg" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uKTwGNqEeWpPIXpP0H8rg" name="MultiplePaintStrategy" specification="_5q6LcGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uKTwWNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uKTwmNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uKTw2NqEeWpPIXpP0H8rg" type="_5mmTMGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), paintStrategies);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uKTxGNqEeWpPIXpP0H8rg" name="MultiplePaintStrategy" specification="_5smNgGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uKTxWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uKTxmNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uKTx2NqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uKTyGNqEeWpPIXpP0H8rg" type="_5mmTMGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(at);
     this.paintStrategies = paintStrategies;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uKTyWNqEeWpPIXpP0H8rg" name="init" specification="_5q6yg2NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uKTymNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>for (APaintStrategy strategy : paintStrategies) {
         strategy.init(host);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uK60GNqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5sm0k2NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uK60WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uK60mNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uK602NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>for (APaintStrategy strategy : paintStrategies) {
         strategy.paintXfrm(g, host, at);
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5q6LcGNqEeWpPIXpP0H8rg" name="MultiplePaintStrategy" method="_5uKTwGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5q6LcmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5q6Lc2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_5q6LcWNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5q6ygWNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5q6ygGNqEeWpPIXpP0H8rg" type="_5mmTMGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5q6yg2NqEeWpPIXpP0H8rg" name="init" method="_5uKTyWNqEeWpPIXpP0H8rg">
            <ownedComment xmi:id="_5uj8YWNqEeWpPIXpP0H8rg">
              <body>Delegates to all the IPaintStrategies in the composite. Used to initialize the paint strategies.
     * @param host The host ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_5q6yhGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5smNgGNqEeWpPIXpP0H8rg" name="MultiplePaintStrategy" method="_5uKTxGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5smNg2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5smNhGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_5smNgWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5smNgmNqEeWpPIXpP0H8rg" name="paintStrategies" type="_5mVNcGNqEeWpPIXpP0H8rg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5sm0kWNqEeWpPIXpP0H8rg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5sm0kGNqEeWpPIXpP0H8rg" type="_5mmTMGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sm0k2NqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uK60GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sm0lGNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5snboGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5snboWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mp9kGNqEeWpPIXpP0H8rg" name="ShapePaintStrategy">
          <ownedComment xmi:id="_5uj8YmNqEeWpPIXpP0H8rg">
            <body>Concrete class that defines invariant painting behaviors &#xD;
to paint Shape objects for all its subclasses. Note: This &#xD;
cannot be directly instantiated by the BallWorld system &#xD;
because it lacks a no-parameter constructor.&#xD;
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5q_D8GNqEeWpPIXpP0H8rg" general="_5mVNcGNqEeWpPIXpP0H8rg"/>
          <ownedAttribute xmi:id="_5tj20WNqEeWpPIXpP0H8rg" name="shape" visibility="private" type="_5q910GNqEeWpPIXpP0H8rg" association="_5vH9E2NqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uLh4GNqEeWpPIXpP0H8rg" name="ShapePaintStrategy" specification="_5soCsGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uLh4WNqEeWpPIXpP0H8rg" name="shape" type="_5q910GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uLh4mNqEeWpPIXpP0H8rg" type="_5mp9kGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), shape);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uLh42NqEeWpPIXpP0H8rg" name="ShapePaintStrategy" specification="_5sopwGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uLh5GNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uLh5WNqEeWpPIXpP0H8rg" name="shape" type="_5q910GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uLh5mNqEeWpPIXpP0H8rg" type="_5mp9kGNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(at);&#xD;
		this.shape=shape;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uLh52NqEeWpPIXpP0H8rg" name="paintXfrm" specification="_5spQ0GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uLh6GNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uLh6WNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uLh6mNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>((Graphics2D) g).fill(at.createTransformedShape(shape));&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5soCsGNqEeWpPIXpP0H8rg" name="ShapePaintStrategy" method="_5uLh4GNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5soCsmNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5soCs2NqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5uj8Y2NqEeWpPIXpP0H8rg">
              <body>Constructor that allocates a new AffineTransform for internal use.&#xD;
	 * @param shape The Shape to be painted</body>
            </ownedComment>
            <ownedParameter xmi:id="_5soCsWNqEeWpPIXpP0H8rg" name="shape" type="_5q910GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5soCtGNqEeWpPIXpP0H8rg" type="_5mp9kGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sopwGNqEeWpPIXpP0H8rg" name="ShapePaintStrategy" method="_5uLh42NqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5sopw2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5sopxGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5uj8ZGNqEeWpPIXpP0H8rg">
              <body>Constructor that uses a supplied AffineTransform for internal use.&#xD;
	 * @param at The AffineTransform to use&#xD;
	 * @param shape The Shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_5sopwWNqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sopwmNqEeWpPIXpP0H8rg" name="shape" type="_5q910GNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sopxWNqEeWpPIXpP0H8rg" type="_5mp9kGNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5spQ0GNqEeWpPIXpP0H8rg" name="paintXfrm" method="_5uLh52NqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5spQ0WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5spQ0mNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5spQ02NqEeWpPIXpP0H8rg" name="at" type="_5qoeoGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5mtn8GNqEeWpPIXpP0H8rg" name="UprightImagePaintStratergy">
          <ownedComment xmi:id="_5uj8ZWNqEeWpPIXpP0H8rg">
            <body>An image painting strategy that adds a paintCfg override that &#xD;
keeps the image upright no matter which way it is going.&#xD;
@author ls53@rice.edu</body>
          </ownedComment>
          <generalization xmi:id="_5rASEGNqEeWpPIXpP0H8rg" general="_5mgMkGNqEeWpPIXpP0H8rg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uLh62NqEeWpPIXpP0H8rg" name="UprightImagePaintStratergy" specification="_5muPAGNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uLh7GNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uMI8GNqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5uMI8WNqEeWpPIXpP0H8rg" type="_5mtn8GNqEeWpPIXpP0H8rg" direction="return"/>
            <language>java</language>
            <body>super(filename, fillFactor);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uMI8mNqEeWpPIXpP0H8rg" name="paintCfg" specification="_5sqe8GNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5uMI82NqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5uMI9GNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
            <language>java</language>
            <body>super.paintCfg(g, host);&#xD;
     if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {&#xD;
         at.scale(1.0, -1.0);&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5muPAGNqEeWpPIXpP0H8rg" name="UprightImagePaintStratergy" method="_5uLh62NqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5muPA2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5muPBGNqEeWpPIXpP0H8rg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_5muPAWNqEeWpPIXpP0H8rg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5muPAmNqEeWpPIXpP0H8rg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5muPBWNqEeWpPIXpP0H8rg" type="_5mtn8GNqEeWpPIXpP0H8rg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5sqe8GNqEeWpPIXpP0H8rg" name="paintCfg" visibility="protected" method="_5uMI8mNqEeWpPIXpP0H8rg">
            <ownedParameter xmi:id="_5sqe8WNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
            <ownedParameter xmi:id="_5sqe8mNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vBPYWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vBPYmNqEeWpPIXpP0H8rg _5tdJIGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vBPYmNqEeWpPIXpP0H8rg" name="" type="_5mRjEWNqEeWpPIXpP0H8rg" association="_5vBPYWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vDEkWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vDEkmNqEeWpPIXpP0H8rg _5teXQGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vDEkmNqEeWpPIXpP0H8rg" name="" type="_5mVNcGNqEeWpPIXpP0H8rg" association="_5vDEkWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vDroWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vDromNqEeWpPIXpP0H8rg _5te-UGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vDromNqEeWpPIXpP0H8rg" name="" type="_5mZe4GNqEeWpPIXpP0H8rg" association="_5vDroWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vE5wGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vE5wWNqEeWpPIXpP0H8rg _5tgzgGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vE5wWNqEeWpPIXpP0H8rg" name="" type="_5mdJQGNqEeWpPIXpP0H8rg" association="_5vE5wGNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vGH4WNqEeWpPIXpP0H8rg" name="" memberEnd="_5vGH4mNqEeWpPIXpP0H8rg _5thakGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vGH4mNqEeWpPIXpP0H8rg" name="" type="_5mgMkGNqEeWpPIXpP0H8rg" association="_5vGH4WNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vGu8WNqEeWpPIXpP0H8rg" name="" memberEnd="_5vGu8mNqEeWpPIXpP0H8rg _5thakmNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vGu8mNqEeWpPIXpP0H8rg" name="" type="_5mgMkGNqEeWpPIXpP0H8rg" association="_5vGu8WNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vHWAWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vHWAmNqEeWpPIXpP0H8rg _5tiosWNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vHWAmNqEeWpPIXpP0H8rg" name="" type="_5mgMkGNqEeWpPIXpP0H8rg" association="_5vHWAWNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vH9EGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vH9EWNqEeWpPIXpP0H8rg _5tjPwGNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vH9EWNqEeWpPIXpP0H8rg" name="" type="_5mmTMGNqEeWpPIXpP0H8rg" association="_5vH9EGNqEeWpPIXpP0H8rg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_5vH9E2NqEeWpPIXpP0H8rg" name="" memberEnd="_5vH9FGNqEeWpPIXpP0H8rg _5tj20WNqEeWpPIXpP0H8rg">
          <ownedEnd xmi:id="_5vH9FGNqEeWpPIXpP0H8rg" name="" type="_5mp9kGNqEeWpPIXpP0H8rg" association="_5vH9E2NqEeWpPIXpP0H8rg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5mBrcGNqEeWpPIXpP0H8rg" name="BallWorldModel">
        <ownedComment xmi:id="_5uiHMGNqEeWpPIXpP0H8rg">
          <body>The model in the ball world application.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5tY3sGNqEeWpPIXpP0H8rg" name="viewUpdateAdpt" visibility="private" type="_5mQ8AGNqEeWpPIXpP0H8rg" association="_5u9lAGNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tY3smNqEeWpPIXpP0H8rg" name="dispatcher" visibility="private" isLeaf="true" type="_5nwJwGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5u9lA2NqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tY3s2NqEeWpPIXpP0H8rg" value="new Dispatcher()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tZewWNqEeWpPIXpP0H8rg" name="UPDATE_TIME_SLICE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tZewmNqEeWpPIXpP0H8rg" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tZew2NqEeWpPIXpP0H8rg" name="paintTimer" visibility="private" type="_5qfUsGNqEeWpPIXpP0H8rg" association="_5u-MEWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tZexGNqEeWpPIXpP0H8rg" value="new Timer(UPDATE_TIME_SLICE, e -> {&#xD;&#xA;&#x9;    dispatcher.notifyAll((IBallCmd)(context, disp) -> {&#xD;&#xA;&#x9;        context.updateState(disp);&#xD;&#xA;&#x9;        context.move();&#xD;&#xA;&#x9;        context.bounce();&#xD;&#xA;&#x9;    });&#xD;&#xA;&#x9;})"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5taF0WNqEeWpPIXpP0H8rg" name="PAINT_TIME_SLICE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5taF0mNqEeWpPIXpP0H8rg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5taF02NqEeWpPIXpP0H8rg" name="updateTimer" visibility="private" type="_5qfUsGNqEeWpPIXpP0H8rg" association="_5u-zIWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tas4GNqEeWpPIXpP0H8rg" value="new Timer(PAINT_TIME_SLICE, e -> viewUpdateAdpt.update())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tas4mNqEeWpPIXpP0H8rg" name="switcherStrategy" type="_5nr4UGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5u_aMGNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tas42NqEeWpPIXpP0H8rg" value="new SwitcherStrategy(new StraightStrategy())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tas5GNqEeWpPIXpP0H8rg" name="errorUpdateStrategyFac" visibility="private" type="_5nmYwGNqEeWpPIXpP0H8rg" association="_5u_aM2NqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tbT8GNqEeWpPIXpP0H8rg" value="new IUpdateStrategyFac(){&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Make the beeping error strategy&#xD;&#xA;&#x9;&#x9; * @return  An instance of a beeping error strategy&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public IUpdateStrategy make() {&#xD;&#xA;&#x9;&#x9;&#x9;return new IUpdateStrategy() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;private int count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; * Beep the speaker every 25 updates&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball context, Dispatcher dispatcher) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(25 &lt; count++){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.awt.Toolkit.getDefaultToolkit().beep(); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;};&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tbT8mNqEeWpPIXpP0H8rg" name="errorPaintStrategyFac" visibility="private" type="_5mPt4GNqEeWpPIXpP0H8rg" association="_5vABQWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tbT82NqEeWpPIXpP0H8rg" value="new IPaintStrategyFac() {&#xD;&#xA;        &#xD;&#xA;        @Override&#xD;&#xA;        public IPaintStrategy make() {&#xD;&#xA;            return IPaintStrategy.NULL_OBJECT;&#xD;&#xA;        }&#xD;&#xA;    }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tb7AWNqEeWpPIXpP0H8rg" name="randomizer" visibility="private" isLeaf="true" type="_5nxX4GNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vAoUWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tb7AmNqEeWpPIXpP0H8rg" value="Randomizer.Singleton"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uBw4GNqEeWpPIXpP0H8rg" name="BallWorldModel" specification="_5qgi0GNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uBw4WNqEeWpPIXpP0H8rg" name="viewAdapter" type="_5mQ8AGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uBw4mNqEeWpPIXpP0H8rg" type="_5mBrcGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>this.viewUpdateAdpt = viewAdapter;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uCX8GNqEeWpPIXpP0H8rg" name="start" specification="_5mDgoGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>updateTimer.start();&#xD;
		paintTimer.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uCX8WNqEeWpPIXpP0H8rg" name="clearBalls" specification="_5mEHsGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>dispatcher.deleteObservers();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uC_AGNqEeWpPIXpP0H8rg" name="addBall" specification="_5sPBIGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uC_AWNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uC_AmNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uC_A2NqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>Point startingLoc = randomizer.randomLoc(canvas.getBounds());&#xD;
		int radius = randomizer.randomInt(5, 20);&#xD;
		Point velocity = randomizer.randomVel(new Rectangle(10, 10));&#xD;
		Color color = randomizer.randomColor();&#xD;
		dispatcher.addObserver(new Ball(startingLoc, radius, velocity, color, canvas, updateStrategy, paintStrategy));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uC_BGNqEeWpPIXpP0H8rg" name="addSwitcherBall" specification="_5sPoMGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uC_BWNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uC_BmNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>Point startingLoc = randomizer.randomLoc(canvas.getBounds());&#xD;
		int radius = randomizer.randomInt(5, 20);&#xD;
		Point velocity = randomizer.randomVel(new Rectangle(10, 10));&#xD;
		Color color = randomizer.randomColor();&#xD;
		dispatcher.addObserver(new Ball(startingLoc, radius, velocity, color, canvas, switcherStrategy, paintStrategy));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uDmEGNqEeWpPIXpP0H8rg" name="update" specification="_5sQPQGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uDmEWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>dispatcher.notifyAll((IBallCmd)(context, disp) -> {&#xD;
		    context.paint(g);&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uDmEmNqEeWpPIXpP0H8rg" name="makeUpdateStrategyFac" specification="_5mFV0GNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uDmE2NqEeWpPIXpP0H8rg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uDmFGNqEeWpPIXpP0H8rg" type="_5nmYwGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>if (null == strategyName)  {&#xD;
			return errorUpdateStrategyFac;&#xD;
		}&#xD;
		&#xD;
     return new IUpdateStrategyFac() {&#xD;
		    /**&#xD;
		     * Instantiate a strategy corresponding to the given class name.&#xD;
		     * @return An IUpdateStrategy instance&#xD;
		     */&#xD;
		    public IUpdateStrategy make() {&#xD;
		    	IUpdateStrategy strategy = ObjectLoader.load(fixName(&quot;model.strategy.&quot;, strategyName, &quot;Strategy&quot;)); &#xD;
             if(null == strategy) {&#xD;
             	strategy = errorUpdateStrategyFac.make();&#xD;
             }&#xD;
		        return  strategy;&#xD;
		    }&#xD;
&#xD;
		    @Override&#xD;
		    public String toString() {&#xD;
		        return strategyName;&#xD;
		    }&#xD;
		};&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uDmFWNqEeWpPIXpP0H8rg" name="makePaintStrategyFac" specification="_5mF84GNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uDmFmNqEeWpPIXpP0H8rg" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uDmF2NqEeWpPIXpP0H8rg" type="_5mPt4GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>if (paintStrategyName == null) {&#xD;
	        return errorPaintStrategyFac;&#xD;
	    }&#xD;
	    &#xD;
	    return new IPaintStrategyFac() {&#xD;
         &#xD;
         @Override&#xD;
         public IPaintStrategy make() {&#xD;
             IPaintStrategy strategy = ObjectLoader.load(fixName(&quot;model.paint.strategy.&quot;, paintStrategyName, &quot;PaintStrategy&quot;));&#xD;
             if (strategy == null) {&#xD;
                 return errorPaintStrategyFac.make();&#xD;
             }&#xD;
             &#xD;
             return strategy;&#xD;
         }&#xD;
         &#xD;
         @Override&#xD;
         public String toString() {&#xD;
             return paintStrategyName;&#xD;
         }&#xD;
     };&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uDmGGNqEeWpPIXpP0H8rg" name="fixName" specification="_5mF84mNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uDmGWNqEeWpPIXpP0H8rg" name="prefix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uDmGmNqEeWpPIXpP0H8rg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uDmG2NqEeWpPIXpP0H8rg" name="suffix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uDmHGNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return prefix + strategyName + suffix;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uENIGNqEeWpPIXpP0H8rg" name="combineStrategyFacs" specification="_5qiYAmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uENIWNqEeWpPIXpP0H8rg" name="stratFac1" type="_5nmYwGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5uENImNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5uENI2NqEeWpPIXpP0H8rg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_5uENJGNqEeWpPIXpP0H8rg" name="stratFac2" type="_5nmYwGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5uENJWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5uENJmNqEeWpPIXpP0H8rg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_5uENJ2NqEeWpPIXpP0H8rg" type="_5nmYwGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) {&#xD;
			return errorUpdateStrategyFac;&#xD;
		}&#xD;
		&#xD;
		return new IUpdateStrategyFac() {&#xD;
			/**&#xD;
		     * Instantiate a new MultiStrategy with the strategies from the given strategy factories&#xD;
		     * @return A MultiStrategy instance&#xD;
		     */&#xD;
		    public IUpdateStrategy make() {&#xD;
		        return new MultiStrategy(stratFac1.make(), stratFac2.make());&#xD;
		    }&#xD;
		    /**&#xD;
		     * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;&#xD;
		     */&#xD;
		    public String toString() {&#xD;
		        return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();&#xD;
		    }&#xD;
		};&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uENKGNqEeWpPIXpP0H8rg" name="setSwitcherStrategy" specification="_5qjmIGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uENKWNqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>switcherStrategy.setUpdateStrategy(strategy);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5mDgoGNqEeWpPIXpP0H8rg" name="start" method="_5uCX8GNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHMmNqEeWpPIXpP0H8rg">
            <body>Start the model.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5mEHsGNqEeWpPIXpP0H8rg" name="clearBalls" method="_5uCX8WNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHM2NqEeWpPIXpP0H8rg">
            <body>Clear all balls in the model.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5mFV0GNqEeWpPIXpP0H8rg" name="makeUpdateStrategyFac" method="_5uDmEmNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHN2NqEeWpPIXpP0H8rg">
            <body>Make a UpdateStrategyFac object that creates strategy instances of the the given type&#xD;
	 * @param strategyName strategy type&#xD;
	 * @return A StrategyFac object</body>
          </ownedComment>
          <ownedParameter xmi:id="_5mFV0WNqEeWpPIXpP0H8rg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5qiYAGNqEeWpPIXpP0H8rg" type="_5nmYwGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5mF84GNqEeWpPIXpP0H8rg" name="makePaintStrategyFac" method="_5uDmFWNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHOGNqEeWpPIXpP0H8rg">
            <body>Returns an IPaintStrategyFac that can instantiate the strategy &#xD;
	 * specified by classname. Returns a factory for a beeping error &#xD;
	 * strategy if classname is null. The toString() of the returned &#xD;
	 * factory is the classname.&#xD;
	 * @param paintStrategyName Shortened name of desired strategy&#xD;
	 * @return A factory to make that strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_5mF84WNqEeWpPIXpP0H8rg" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5qiYAWNqEeWpPIXpP0H8rg" type="_5mPt4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5mF84mNqEeWpPIXpP0H8rg" name="fixName" visibility="private" method="_5uDmGGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHOWNqEeWpPIXpP0H8rg">
            <body>Convert the strategy name passed from the view to the corresponding strategy class name&#xD;
	 * under the strategy package. &#xD;
	 * @param prefix The prefix of strategy name&#xD;
	 * @param strategyName the strategy name without Strategy suffix and strategy. package prefix&#xD;
	 * @param suffix The suffix of strategy name&#xD;
	 * @return the full strategy class name under strategy package</body>
          </ownedComment>
          <ownedParameter xmi:id="_5mF842NqEeWpPIXpP0H8rg" name="prefix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5mF85GNqEeWpPIXpP0H8rg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5mGj8GNqEeWpPIXpP0H8rg" name="suffix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5mGj8WNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5qgi0GNqEeWpPIXpP0H8rg" name="BallWorldModel" method="_5uBw4GNqEeWpPIXpP0H8rg">
          <eAnnotations xmi:id="_5qhJ4WNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5qhJ4mNqEeWpPIXpP0H8rg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5uiHMWNqEeWpPIXpP0H8rg">
            <body>Construct a model with given view adapter.&#xD;
	 * @param viewAdapter The view adapter used to communicate with view.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qhJ4GNqEeWpPIXpP0H8rg" name="viewAdapter" type="_5mQ8AGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5qhJ42NqEeWpPIXpP0H8rg" type="_5mBrcGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5qiYAmNqEeWpPIXpP0H8rg" name="combineStrategyFacs" method="_5uENIGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHOmNqEeWpPIXpP0H8rg">
            <body>Combine two update strategy Factories together that creates UpdateStrategy having a combination&#xD;
	 * of behaviors of the two strategies that the factories correspond to.&#xD;
	 * @param stratFac1 the first Strategy Factory to combine&#xD;
	 * @param stratFac2 the second Strategy Factory to combine&#xD;
	 * @return A IStrategyFac that can make instances of multistrategy, a combination of two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qi_EGNqEeWpPIXpP0H8rg" name="stratFac1" type="_5nmYwGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5qi_E2NqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5qi_FGNqEeWpPIXpP0H8rg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_5qi_EWNqEeWpPIXpP0H8rg" name="stratFac2" type="_5nmYwGNqEeWpPIXpP0H8rg">
            <eAnnotations xmi:id="_5qi_FWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5qi_FmNqEeWpPIXpP0H8rg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_5qi_EmNqEeWpPIXpP0H8rg" type="_5nmYwGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5qjmIGNqEeWpPIXpP0H8rg" name="setSwitcherStrategy" method="_5uENKGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHO2NqEeWpPIXpP0H8rg">
            <body>Set the switchable strategy in current model that all switcher balls use.&#xD;
	 * @param strategy the new update strategy for all switcher balls</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qjmIWNqEeWpPIXpP0H8rg" name="strategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sPBIGNqEeWpPIXpP0H8rg" name="addBall" method="_5uC_AGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHNGNqEeWpPIXpP0H8rg">
            <body>Add a ball with given update strategy which cannot be changed thereafter.&#xD;
	 * @param updateStrategy the strategy to update the state of the ball created&#xD;
	 * @param canvas the canvas where the ball will be painted</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sPBIWNqEeWpPIXpP0H8rg" name="updateStrategy" type="_5nlKoGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sPBImNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sPBI2NqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sPoMGNqEeWpPIXpP0H8rg" name="addSwitcherBall" method="_5uC_BGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHNWNqEeWpPIXpP0H8rg">
            <body>Add a ball with the switchable strategy to the model.&#xD;
	 * @param canvas The canvas where the ball will be moving and painted</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sPoMWNqEeWpPIXpP0H8rg" name="paintStrategy" type="_5mN4sGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sPoMmNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sQPQGNqEeWpPIXpP0H8rg" name="update" method="_5uDmEGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uiHNmNqEeWpPIXpP0H8rg">
            <body>Update all balls in the model.&#xD;
	 * @param g	the graphics object used to paint balls</body>
          </ownedComment>
          <ownedParameter xmi:id="_5sQPQWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5mK1YGNqEeWpPIXpP0H8rg" name="IBallCmd">
        <ownedOperation xmi:id="_5qmCYGNqEeWpPIXpP0H8rg" name="apply" isAbstract="true">
          <ownedComment xmi:id="_5uiHPGNqEeWpPIXpP0H8rg">
            <body>The method run by the ball's update method which is called when the ball is updated by the dispatcher.
     * @param context The ball that is calling this method. The context under which the command is to be run.
     * @param disp The Dispatcher that sent the command out.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qmpcGNqEeWpPIXpP0H8rg" name="context" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5qmpcWNqEeWpPIXpP0H8rg" name="disp" type="_5nwJwGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5mN4sGNqEeWpPIXpP0H8rg" name="IPaintStrategy">
        <ownedComment xmi:id="_5uiuQGNqEeWpPIXpP0H8rg">
          <body>Top-level interface that represents a strategy used by a Ball 
when asked to perform variant paint operations. A Ball has only 
one IPaintStrategy
@author ls53@rice.edu</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5mOfwGNqEeWpPIXpP0H8rg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_5mN4sGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5u5TkGNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5mOfwWNqEeWpPIXpP0H8rg" value="new IPaintStrategy() {&#xA;        &#xA;        @Override&#xA;        public void paint(Graphics g, Ball host) {}&#xA;        &#xA;        @Override&#xA;        public void init(Ball host) {}&#xA;    }"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_5qmpc2NqEeWpPIXpP0H8rg" name="init">
          <ownedParameter xmi:id="_5qmpdGNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5sSEcGNqEeWpPIXpP0H8rg" name="paint">
          <ownedParameter xmi:id="_5sSEcWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5sSEcmNqEeWpPIXpP0H8rg" name="host" type="_5l2FQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5mPt4GNqEeWpPIXpP0H8rg" name="IPaintStrategyFac">
        <ownedComment xmi:id="_5uiuQWNqEeWpPIXpP0H8rg">
          <body>An interface that defines a factory that instantiates a specific IPaintStrategy
@author ls53@rice.edu</body>
        </ownedComment>
        <ownedOperation xmi:id="_5mQU8GNqEeWpPIXpP0H8rg" name="make">
          <ownedComment xmi:id="_5uiuQmNqEeWpPIXpP0H8rg">
            <body>Instantiate the specific IPaintStrategy for which this factory is defined.
     * @return An IPaintStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5qn3kGNqEeWpPIXpP0H8rg" type="_5mN4sGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5mQ8AGNqEeWpPIXpP0H8rg" name="IViewUpdateAdapter">
        <ownedComment xmi:id="_5uiuQ2NqEeWpPIXpP0H8rg">
          <body>An interface that defines an adapter that the model uses to update the view.
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_5mRjEGNqEeWpPIXpP0H8rg" name="update">
          <ownedComment xmi:id="_5uiuRGNqEeWpPIXpP0H8rg">
            <body>Update the view.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5ufD5GNqEeWpPIXpP0H8rg" name="" memberEnd="_5tVNUWNqEeWpPIXpP0H8rg _5ufD5WNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5ufD5WNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5ufD5GNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5ufq8GNqEeWpPIXpP0H8rg" name="" memberEnd="_5tWbcGNqEeWpPIXpP0H8rg _5ugSAGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5ugSAGNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5ufq8GNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5ugSAWNqEeWpPIXpP0H8rg" name="" memberEnd="_5tWbcWNqEeWpPIXpP0H8rg _5ug5EGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5ug5EGNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5ugSAWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5ug5EWNqEeWpPIXpP0H8rg" name="" memberEnd="_5tXCgmNqEeWpPIXpP0H8rg _5ug5EmNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5ug5EmNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5ug5EWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u5TkGNqEeWpPIXpP0H8rg" name="" memberEnd="_5u5TkWNqEeWpPIXpP0H8rg _5mOfwGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u5TkWNqEeWpPIXpP0H8rg" name="" type="_5mN4sGNqEeWpPIXpP0H8rg" association="_5u5TkGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u7v0WNqEeWpPIXpP0H8rg" name="" memberEnd="_5u7v0mNqEeWpPIXpP0H8rg _5tXCgGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u7v0mNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5u7v0WNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u898GNqEeWpPIXpP0H8rg" name="" memberEnd="_5u898WNqEeWpPIXpP0H8rg _5tXpkGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u898WNqEeWpPIXpP0H8rg" name="" type="_5l2FQGNqEeWpPIXpP0H8rg" association="_5u898GNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u9lAGNqEeWpPIXpP0H8rg" name="" memberEnd="_5u9lAWNqEeWpPIXpP0H8rg _5tY3sGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u9lAWNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u9lAGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u9lA2NqEeWpPIXpP0H8rg" name="" memberEnd="_5u9lBGNqEeWpPIXpP0H8rg _5tY3smNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u9lBGNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u9lA2NqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u-MEWNqEeWpPIXpP0H8rg" name="" memberEnd="_5u-MEmNqEeWpPIXpP0H8rg _5tZew2NqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u-MEmNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u-MEWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u-zIWNqEeWpPIXpP0H8rg" name="" memberEnd="_5u-zImNqEeWpPIXpP0H8rg _5taF02NqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u-zImNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u-zIWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u_aMGNqEeWpPIXpP0H8rg" name="" memberEnd="_5u_aMWNqEeWpPIXpP0H8rg _5tas4mNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u_aMWNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u_aMGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u_aM2NqEeWpPIXpP0H8rg" name="" memberEnd="_5u_aNGNqEeWpPIXpP0H8rg _5tas5GNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u_aNGNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u_aM2NqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vABQWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vABQmNqEeWpPIXpP0H8rg _5tbT8mNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vABQmNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5vABQWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vAoUWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vAoUmNqEeWpPIXpP0H8rg _5tb7AWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vAoUmNqEeWpPIXpP0H8rg" name="" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5vAoUWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5iyKMWNqEeWpPIXpP0H8rg" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_5oABYGNqEeWpPIXpP0H8rg" name="BallWorldView">
        <ownedComment xmi:id="_5unmyGNqEeWpPIXpP0H8rg">
          <body>The view class in ball world application that displays all controls and added balls.</body>
        </ownedComment>
        <generalization xmi:id="_5tFVsGNqEeWpPIXpP0H8rg" general="_5rrAcmNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tu18GNqEeWpPIXpP0H8rg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tu18WNqEeWpPIXpP0H8rg" value="4665628271829011924L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tu18mNqEeWpPIXpP0H8rg" name="modelCtrAdpt" visibility="private" isLeaf="true" type="_5oKZcGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vRHAWNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tvdAmNqEeWpPIXpP0H8rg" name="modelUpdateAdpt" visibility="private" isLeaf="true" type="_5oPR8GNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vUKUWNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5twEEWNqEeWpPIXpP0H8rg" name="contentPane" visibility="private" type="_5rrngWNqEeWpPIXpP0H8rg" association="_5vWmkGNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5twEE2NqEeWpPIXpP0H8rg" name="canvasPanel" visibility="private" type="_5rrngWNqEeWpPIXpP0H8rg" association="_5vctMWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5twrIGNqEeWpPIXpP0H8rg" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Serial Version ID automatically generated.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = -708326350965762632L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; **/&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;modelUpdateAdpt.update(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5twrImNqEeWpPIXpP0H8rg" name="controlPanel" visibility="private" isLeaf="true" type="_5rrngWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vdUQWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5txSMGNqEeWpPIXpP0H8rg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5txSMmNqEeWpPIXpP0H8rg" name="comboxBall" visibility="private" isLeaf="true" type="_5rrAcGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vd7UWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tx5QWNqEeWpPIXpP0H8rg" value="new JComboBox&lt;>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tygUWNqEeWpPIXpP0H8rg" name="btnMakeBall" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5veiYWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tygUmNqEeWpPIXpP0H8rg" value="new JButton(&quot;Make Selected Ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tzHYWNqEeWpPIXpP0H8rg" name="btnAddtoList" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vfJcWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tzucGNqEeWpPIXpP0H8rg" value="new JButton(&quot;Add to lists&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5tzucmNqEeWpPIXpP0H8rg" name="txtBallName" visibility="private" isLeaf="true" type="_5rsOkWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vfwgWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5tzuc2NqEeWpPIXpP0H8rg" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t0VgWNqEeWpPIXpP0H8rg" name="comboxCombine" visibility="private" isLeaf="true" type="_5rrAcGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vfwhGNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t08kWNqEeWpPIXpP0H8rg" value="new JComboBox&lt;>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t08k2NqEeWpPIXpP0H8rg" name="btnCombine" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vgXkWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t1joGNqEeWpPIXpP0H8rg" value="new JButton(&quot;Combine&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t1jomNqEeWpPIXpP0H8rg" name="btnMakeSwitherBall" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vg-oWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t1jo2NqEeWpPIXpP0H8rg" value="new JButton(&quot;Make Swither Ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t2KsWNqEeWpPIXpP0H8rg" name="btnSwitchStrat" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vhlsWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t2KsmNqEeWpPIXpP0H8rg" value="new JButton(&quot;Switch&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t2KtGNqEeWpPIXpP0H8rg" name="btnClearAll" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5viMwWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t2xwGNqEeWpPIXpP0H8rg" value="new JButton(&quot;Clear All&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t2xwmNqEeWpPIXpP0H8rg" name="switcherPanel" visibility="private" isLeaf="true" type="_5rrngWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vja4GNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t2xw2NqEeWpPIXpP0H8rg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t3Y0WNqEeWpPIXpP0H8rg" name="inputPanel" visibility="private" isLeaf="true" type="_5rrngWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vkB8WNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t3Y0mNqEeWpPIXpP0H8rg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t3Y1GNqEeWpPIXpP0H8rg" name="comboPanel" visibility="private" isLeaf="true" type="_5rrngWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vkpAWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t3Y1WNqEeWpPIXpP0H8rg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t3_4WNqEeWpPIXpP0H8rg" name="paintPanel" visibility="private" isLeaf="true" type="_5rrngWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vlQEWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t3_4mNqEeWpPIXpP0H8rg" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t3_5GNqEeWpPIXpP0H8rg" name="txtPaintName" visibility="private" isLeaf="true" type="_5rsOkWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vl3IWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t3_5WNqEeWpPIXpP0H8rg" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t4m8WNqEeWpPIXpP0H8rg" name="addPaintBtn" visibility="private" isLeaf="true" type="_5rqZYWNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vmeMWNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t4m8mNqEeWpPIXpP0H8rg" value="new JButton(&quot;Add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5t4m9GNqEeWpPIXpP0H8rg" name="paintComboBox" visibility="private" isLeaf="true" type="_5rrAcGNqEeWpPIXpP0H8rg" isReadOnly="true" association="_5vnFQGNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5t5OAWNqEeWpPIXpP0H8rg" value="new JComboBox&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uaLYGNqEeWpPIXpP0H8rg" name="start" specification="_5oCdoGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>setVisible(true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uaycGNqEeWpPIXpP0H8rg" name="initGUI" specification="_5oDEsGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>setTitle(&quot;Ball World&quot;);

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 600);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;Main ContentPane&quot;);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		canvasPanel.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		canvasPanel.setPreferredSize(new Dimension(100, 100));
		canvasPanel.setBackground(Color.WHITE);
		canvasPanel.setToolTipText(&quot;The canvas panel which balls move within&quot;);
		canvasPanel.setMinimumSize(new Dimension(50, 50));

		contentPane.add(canvasPanel, BorderLayout.CENTER);
		canvasPanel.setLayout(new GridLayout(1, 0, 1, 0));
		controlPanel.setBackground(UIManager.getColor(&quot;Panel.background&quot;));
		contentPane.add(controlPanel, BorderLayout.NORTH);
		controlPanel.setToolTipText(&quot;The control panel&quot;);
		controlPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		
		controlPanel.add(inputPanel);
		inputPanel.setLayout(new GridLayout(0, 1, 0, 0));
		inputPanel.add(txtBallName);
		txtBallName.setToolTipText(&quot;type in the abbreviated name of the strategy to add without strategy suffix&quot;);
		txtBallName.setColumns(10);
		inputPanel.add(btnAddtoList);
		btnAddtoList.setToolTipText(&quot;add a new type of strategy to the lists&quot;);
		btnAddtoList.addActionListener(e -> {
			if(txtBallName.getText() != null) {
				TStrategyDropListItem strategyFac = modelCtrAdpt.addStrategy(txtBallName.getText());
				comboxBall.addItem(strategyFac);
				comboxCombine.addItem(strategyFac);
			}
		});
		comboPanel.setBorder(null);
		
		controlPanel.add(comboPanel);
		comboPanel.setLayout(new GridLayout(0, 1, 0, 0));
		comboPanel.add(btnMakeBall);
		btnMakeBall.setToolTipText(&quot;add a ball with the selected update strategy which cannot be changed thereafter&quot;);
		btnMakeBall.addActionListener(e -> {
		    TStrategyDropListItem updateStrategyFac = comboxBall.getItemAt(comboxBall.getSelectedIndex());
		    TPaintDropListItem paintStrategyFac = paintComboBox.getItemAt(paintComboBox.getSelectedIndex());
		    if (updateStrategyFac != null &amp;&amp; paintStrategyFac != null) {
		        modelCtrAdpt.makeBall(comboxBall.getItemAt(comboxBall.getSelectedIndex()), 
		                paintComboBox.getItemAt(paintComboBox.getSelectedIndex()), 
		                canvasPanel);		        
		    }
		});
		comboPanel.add(comboxBall);
		comboPanel.add(comboxCombine);
		comboPanel.add(btnCombine);
		btnCombine.setToolTipText(&quot;comine two selected strategies and add it to lists&quot;);
		btnCombine.addActionListener(e -> {
			TStrategyDropListItem item = modelCtrAdpt.combineStrategies(comboxBall.getItemAt(comboxBall.getSelectedIndex()), 
			                                                            comboxCombine.getItemAt(comboxCombine.getSelectedIndex()));
			comboxBall.addItem(item);
			comboxCombine.addItem(item);
		});
		switcherPanel.setBorder(new TitledBorder(null, &quot;Switcher Controls&quot;, TitledBorder.CENTER, TitledBorder.TOP, null, null));
		
		controlPanel.add(switcherPanel);
		switcherPanel.setLayout(new GridLayout(0, 1, 0, 0));
		switcherPanel.add(btnMakeSwitherBall);
		btnMakeSwitherBall.setToolTipText(&quot;make a ball with current switcher strategy which can be changed thereafter&quot;);
		switcherPanel.add(btnSwitchStrat);
		btnSwitchStrat.setToolTipText(&quot;Swith update strategy of all switcher balls to the selected strategy&quot;);
		btnClearAll.setToolTipText(&quot;Clear all balls&quot;);
		btnClearAll.addActionListener(e -> modelCtrAdpt.clearBalls());
		
		controlPanel.add(btnClearAll);
		paintPanel.setBorder(new TitledBorder(null, &quot;Paint Strategies&quot;, TitledBorder.CENTER, TitledBorder.TOP, null, null));
		
		controlPanel.add(paintPanel);
		paintPanel.setLayout(new GridLayout(0, 1, 0, 0));
		txtPaintName.setToolTipText(&quot;paint strategy name&quot;);
		txtPaintName.setColumns(10);
		
		paintPanel.add(txtPaintName);
		addPaintBtn.addActionListener(e -> {
		    if (txtPaintName.getText() != null) {
		        TPaintDropListItem paintStrategyFac = modelCtrAdpt.addPaintStrategy(txtPaintName.getText());
		        paintComboBox.addItem(paintStrategyFac);
		        paintComboBox.setSelectedIndex(paintComboBox.getItemCount() - 1);
		    }
		});
		addPaintBtn.setToolTipText(&quot;add paint strategy&quot;);
		
		paintPanel.add(addPaintBtn);
		paintComboBox.setEditable(true);
		
		paintPanel.add(paintComboBox);
		btnSwitchStrat.addActionListener(e -> {
			int selectedIndex = comboxBall.getSelectedIndex();
			if(selectedIndex >= 0) {
				modelCtrAdpt.switchStrategy(comboxBall.getItemAt(selectedIndex));
			}
		});
		btnMakeSwitherBall.addActionListener(e -> {
		    TPaintDropListItem paintStrategyFac = paintComboBox.getItemAt(paintComboBox.getSelectedIndex());
		    if (paintStrategyFac != null) {
		        modelCtrAdpt.makeSwitcherBall(paintStrategyFac, canvasPanel);
		    }
		});
		
		setMinimumSize(new Dimension(100, 250));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uaycWNqEeWpPIXpP0H8rg" name="update" specification="_5oDEsWNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>canvasPanel.repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uaycmNqEeWpPIXpP0H8rg" name="BallWorldView" specification="_5rxHEGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uayc2NqEeWpPIXpP0H8rg" name="vupdateAdapter" type="_5oPR8GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uaydGNqEeWpPIXpP0H8rg" name="vcontrolAdapter" type="_5oKZcGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uaydWNqEeWpPIXpP0H8rg" type="_5oABYGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>this.modelCtrAdpt = vcontrolAdapter;
		this.modelUpdateAdpt = vupdateAdapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5oCdoGNqEeWpPIXpP0H8rg" name="start" method="_5uaLYGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uoN0GNqEeWpPIXpP0H8rg">
            <body>Start view.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5oDEsGNqEeWpPIXpP0H8rg" name="initGUI" method="_5uaycGNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uoN0WNqEeWpPIXpP0H8rg">
            <body>GUI initialization function</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5oDEsWNqEeWpPIXpP0H8rg" name="update" method="_5uaycWNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5uoN0mNqEeWpPIXpP0H8rg">
            <body>Update view.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5rxHEGNqEeWpPIXpP0H8rg" name="BallWorldView" method="_5uaycmNqEeWpPIXpP0H8rg">
          <eAnnotations xmi:id="_5rxuIWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5rxuImNqEeWpPIXpP0H8rg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5rxHEWNqEeWpPIXpP0H8rg" name="vupdateAdapter" type="_5oPR8GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5rxuIGNqEeWpPIXpP0H8rg" name="vcontrolAdapter" type="_5oKZcGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5rxuI2NqEeWpPIXpP0H8rg" type="_5oABYGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5oKZcGNqEeWpPIXpP0H8rg" name="IModelControlAdapter">
        <ownedComment xmi:id="_5uoN02NqEeWpPIXpP0H8rg">
          <body>An interface that defines an adapter that the view uses to communicate with the model.
 *
@param &lt;TStrategyDropListItem> The type of items to put into the drop lists on the view.</body>
        </ownedComment>
        <ownedOperation xmi:id="_5oLnkGNqEeWpPIXpP0H8rg" name="clearBalls">
          <ownedComment xmi:id="_5uoN1mNqEeWpPIXpP0H8rg">
            <body>Remove all balls in the model.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5oLnkWNqEeWpPIXpP0H8rg" name="addStrategy">
          <ownedComment xmi:id="_5uoN12NqEeWpPIXpP0H8rg">
            <body>Add a new strategy.
	 * @param strategyName the strategy name
	 * @return A concrete IUpdateStrategy instance of specified type.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5oLnkmNqEeWpPIXpP0H8rg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5tKOMmNqEeWpPIXpP0H8rg" type="_5tHx8GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5oM1sGNqEeWpPIXpP0H8rg" name="addPaintStrategy">
          <ownedComment xmi:id="_5uoN2mNqEeWpPIXpP0H8rg">
            <body>Add a paint Strategy factory
	 * @param paintStrategyName The name of the paint strategy factory
	 * @return The paint Strategy Factory</body>
          </ownedComment>
          <ownedParameter xmi:id="_5oM1sWNqEeWpPIXpP0H8rg" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5tLcUmNqEeWpPIXpP0H8rg" type="_5tJAEGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tJAEmNqEeWpPIXpP0H8rg" name="makeBall">
          <ownedComment xmi:id="_5uoN1GNqEeWpPIXpP0H8rg">
            <body>Make a ball that uses the selected Update Strategy.
	 * @param selectedItem1 the selected item1
	 * @param selectedItem2 the selected item2
	 * @param canvas the canvas where the ball will be moving within</body>
          </ownedComment>
          <ownedParameter xmi:id="_5tJnIGNqEeWpPIXpP0H8rg" name="selectedItem1" type="_5tHx8GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tJnIWNqEeWpPIXpP0H8rg" name="selectedItem2" type="_5tJAEGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tJnImNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tJnI2NqEeWpPIXpP0H8rg" name="makeSwitcherBall">
          <ownedComment xmi:id="_5uoN1WNqEeWpPIXpP0H8rg">
            <body>Make a ball with the swithcable update strategy in the model.
	 * @param canvas the canvas where the ball will be moving within</body>
          </ownedComment>
          <ownedParameter xmi:id="_5tKOMGNqEeWpPIXpP0H8rg" name="selectedItem" type="_5tJAEGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tKOMWNqEeWpPIXpP0H8rg" name="canvas" type="_5qRSQGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tK1QGNqEeWpPIXpP0H8rg" name="combineStrategies">
          <ownedComment xmi:id="_5uoN2GNqEeWpPIXpP0H8rg">
            <body>Combine two given update strategies together.
	 * @param selectedItem1 one of the two strategies to combine
	 * @param selectedItem2 the other strategy to combine
	 * @return a composite strategy instance that exhibits behaviors of both given strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_5tK1QWNqEeWpPIXpP0H8rg" name="selectedItem1" type="_5tHx8GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tK1QmNqEeWpPIXpP0H8rg" name="selectedItem2" type="_5tHx8GNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tK1Q2NqEeWpPIXpP0H8rg" type="_5tHx8GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tLcUGNqEeWpPIXpP0H8rg" name="switchStrategy">
          <ownedComment xmi:id="_5uoN2WNqEeWpPIXpP0H8rg">
            <body>Switch the switchable strategy in the model to a new update strategy.
	 * @param selectedItem the new update strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_5tLcUWNqEeWpPIXpP0H8rg" name="selectedItem" type="_5tHx8GNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5oPR8GNqEeWpPIXpP0H8rg" name="IModelUpdateAdapter">
        <ownedComment xmi:id="_5uoN22NqEeWpPIXpP0H8rg">
          <body>An interface that defines an adapter that the view uses to update the model.
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_5tMqcGNqEeWpPIXpP0H8rg" name="update">
          <ownedParameter xmi:id="_5tMqcWNqEeWpPIXpP0H8rg" name="g" type="_5qU8oWNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5tHx8GNqEeWpPIXpP0H8rg" name="TStrategyDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5tJAEGNqEeWpPIXpP0H8rg" name="TPaintDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vRHAWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vRHAmNqEeWpPIXpP0H8rg _5tu18mNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vRHAmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vRHAWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vUKUWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vUKUmNqEeWpPIXpP0H8rg _5tvdAmNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vUKUmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vUKUWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vWmkGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vWmkWNqEeWpPIXpP0H8rg _5twEEWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vWmkWNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vWmkGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vctMWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vctMmNqEeWpPIXpP0H8rg _5twEE2NqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vctMmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vctMWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vdUQWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vdUQmNqEeWpPIXpP0H8rg _5twrImNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vdUQmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vdUQWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vd7UWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vd7UmNqEeWpPIXpP0H8rg _5txSMmNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vd7UmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vd7UWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5veiYWNqEeWpPIXpP0H8rg" name="" memberEnd="_5veiYmNqEeWpPIXpP0H8rg _5tygUWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5veiYmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5veiYWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vfJcWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vfJcmNqEeWpPIXpP0H8rg _5tzHYWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vfJcmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vfJcWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vfwgWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vfwgmNqEeWpPIXpP0H8rg _5tzucmNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vfwgmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vfwgWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vfwhGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vfwhWNqEeWpPIXpP0H8rg _5t0VgWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vfwhWNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vfwhGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vgXkWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vgXkmNqEeWpPIXpP0H8rg _5t08k2NqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vgXkmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vgXkWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vg-oWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vg-omNqEeWpPIXpP0H8rg _5t1jomNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vg-omNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vg-oWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vhlsWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vhlsmNqEeWpPIXpP0H8rg _5t2KsWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vhlsmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vhlsWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5viMwWNqEeWpPIXpP0H8rg" name="" memberEnd="_5viMwmNqEeWpPIXpP0H8rg _5t2KtGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5viMwmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5viMwWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vja4GNqEeWpPIXpP0H8rg" name="" memberEnd="_5vja4WNqEeWpPIXpP0H8rg _5t2xwmNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vja4WNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vja4GNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vkB8WNqEeWpPIXpP0H8rg" name="" memberEnd="_5vkB8mNqEeWpPIXpP0H8rg _5t3Y0WNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vkB8mNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vkB8WNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vkpAWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vkpAmNqEeWpPIXpP0H8rg _5t3Y1GNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vkpAmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vkpAWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vlQEWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vlQEmNqEeWpPIXpP0H8rg _5t3_4WNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vlQEmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vlQEWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vl3IWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vl3ImNqEeWpPIXpP0H8rg _5t3_5GNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vl3ImNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vl3IWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vmeMWNqEeWpPIXpP0H8rg" name="" memberEnd="_5vmeMmNqEeWpPIXpP0H8rg _5t4m8WNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vmeMmNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vmeMWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vnFQGNqEeWpPIXpP0H8rg" name="" memberEnd="_5vnFQWNqEeWpPIXpP0H8rg _5t4m9GNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vnFQWNqEeWpPIXpP0H8rg" name="" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5vnFQGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5i0mcGNqEeWpPIXpP0H8rg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_5lxz0GNqEeWpPIXpP0H8rg" name="Controller">
        <ownedComment xmi:id="_5uec0GNqEeWpPIXpP0H8rg">
          <body>The Controller in the ball world application.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5tSxEGNqEeWpPIXpP0H8rg" name="model" visibility="private" type="_5mBrcGNqEeWpPIXpP0H8rg" association="_5u6hsGNqEeWpPIXpP0H8rg"/>
        <ownedAttribute xmi:id="_5tT_MWNqEeWpPIXpP0H8rg" name="view" visibility="private" type="_5oABYGNqEeWpPIXpP0H8rg" association="_5u7IwWNqEeWpPIXpP0H8rg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t-tkGNqEeWpPIXpP0H8rg" name="Controller" specification="_5lzpAGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t-tkWNqEeWpPIXpP0H8rg" type="_5lxz0GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>view = new BallWorldView&lt;IUpdateStrategyFac, IPaintStrategyFac>(
		    // Initialize a model update adapter
			new IModelUpdateAdapter() {
				@Override
				public void update(Graphics g) {
					model.update(g);
				}
			},
		    // Initialize a model control adapter
			new IModelControlAdapter&lt;IUpdateStrategyFac, IPaintStrategyFac>() {

				@Override
				public void makeBall(IUpdateStrategyFac selectedItem1, IPaintStrategyFac selectedItem2, Component canvas) {
					model.addBall(selectedItem1.make(), selectedItem2.make(), canvas);
				}

				@Override
				public void makeSwitcherBall(IPaintStrategyFac selectedItem, Component canvas) {
					model.addSwitcherBall(selectedItem.make(), canvas);
				}

				@Override
				public void clearBalls() {
					model.clearBalls();
				}

				@Override
				public IUpdateStrategyFac addStrategy(String strategyName) {
					return model.makeUpdateStrategyFac(strategyName);
				}

				@Override
				public IUpdateStrategyFac combineStrategies(IUpdateStrategyFac selectedItem1, IUpdateStrategyFac selectedItem2) {
					return model.combineStrategyFacs(selectedItem1, selectedItem2);
				}

				@Override
				public void switchStrategy(IUpdateStrategyFac selectedItem) {
					model.setSwitcherStrategy(selectedItem.make());
				}
				
				@Override
				public IPaintStrategyFac addPaintStrategy(String paintStrategyName) {
				    return model.makePaintStrategyFac(paintStrategyName);
				}
		}); 	
		
		model = new BallWorldModel(
		    // Initialize a view update adapter
			new IViewUpdateAdapter() {
				@Override
				public void update() {
					view.update();
				}
		}) ;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t-tkmNqEeWpPIXpP0H8rg" name="start" specification="_5lzpBGNqEeWpPIXpP0H8rg">
          <language>java</language>
          <body>model.start();  
		view.start();	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5t-tk2NqEeWpPIXpP0H8rg" name="main" specification="_5l0QEGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5t-tlGNqEeWpPIXpP0H8rg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5t-tlWNqEeWpPIXpP0H8rg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Controller c = new Controller();
					c.start();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5lzpAGNqEeWpPIXpP0H8rg" name="Controller" method="_5t-tkGNqEeWpPIXpP0H8rg">
          <eAnnotations xmi:id="_5lzpAWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5lzpAmNqEeWpPIXpP0H8rg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5ufD4GNqEeWpPIXpP0H8rg">
            <body>Construct a controller.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5lzpA2NqEeWpPIXpP0H8rg" type="_5lxz0GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5lzpBGNqEeWpPIXpP0H8rg" name="start" method="_5t-tkmNqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5ufD4WNqEeWpPIXpP0H8rg">
            <body>Start the controller.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5l0QEGNqEeWpPIXpP0H8rg" name="main" isStatic="true" method="_5t-tk2NqEeWpPIXpP0H8rg">
          <ownedComment xmi:id="_5ufD4mNqEeWpPIXpP0H8rg">
            <body>Main function to start the ball world application.
	 * @param args	command line arguments</body>
          </ownedComment>
          <ownedParameter xmi:id="_5l0QEWNqEeWpPIXpP0H8rg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5l0QEmNqEeWpPIXpP0H8rg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u6hsGNqEeWpPIXpP0H8rg" name="" memberEnd="_5u6hsWNqEeWpPIXpP0H8rg _5tSxEGNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u6hsWNqEeWpPIXpP0H8rg" name="" type="_5lxz0GNqEeWpPIXpP0H8rg" association="_5u6hsGNqEeWpPIXpP0H8rg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5u7IwWNqEeWpPIXpP0H8rg" name="" memberEnd="_5u7IwmNqEeWpPIXpP0H8rg _5tT_MWNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5u7IwmNqEeWpPIXpP0H8rg" name="" type="_5lxz0GNqEeWpPIXpP0H8rg" association="_5u7IwWNqEeWpPIXpP0H8rg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5i3CsGNqEeWpPIXpP0H8rg" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_5nwJwGNqEeWpPIXpP0H8rg" name="Dispatcher">
        <ownedComment xmi:id="_5um_tWNqEeWpPIXpP0H8rg">
          <body>A simplified Observable class that immediately notifies its Observers when its notifyAll() method is called.   &#xD;
The changed state of the Dispatcher does not need to be separately set.&#xD;
@author Supplied code</body>
        </ownedComment>
        <generalization xmi:id="_5s5vgWNqEeWpPIXpP0H8rg" general="_5qYnAGNqEeWpPIXpP0H8rg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uXvI2NqEeWpPIXpP0H8rg" name="notifyAll" specification="_5s5IcGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uXvJGNqEeWpPIXpP0H8rg" name="param" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <language>java</language>
          <body>setChanged();&#xD;
		notifyObservers(param);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5s5IcGNqEeWpPIXpP0H8rg" name="notifyAll" method="_5uXvI2NqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5s5vgGNqEeWpPIXpP0H8rg" name="param" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5nxX4GNqEeWpPIXpP0H8rg" name="IRandomizer">
        <ownedComment xmi:id="_5um_tmNqEeWpPIXpP0H8rg">
          <body>An random generator interface that generates random values of various types.</body>
        </ownedComment>
        <ownedOperation xmi:id="_5nymAGNqEeWpPIXpP0H8rg" name="randomInt">
          <ownedComment xmi:id="_5um_uWNqEeWpPIXpP0H8rg">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_5nymAWNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nymAmNqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nymA2NqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5nzNEGNqEeWpPIXpP0H8rg" name="randomDouble">
          <ownedComment xmi:id="_5um_umNqEeWpPIXpP0H8rg">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_5nzNEWNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nzNEmNqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nzNE2NqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5n0bMGNqEeWpPIXpP0H8rg" name="randomColor">
          <ownedComment xmi:id="_5unmw2NqEeWpPIXpP0H8rg">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s8LxGNqEeWpPIXpP0H8rg" type="_5qWx0GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s5vgmNqEeWpPIXpP0H8rg" name="randomLoc">
          <ownedComment xmi:id="_5um_t2NqEeWpPIXpP0H8rg">
            <body>Generates a random location point subject to the constraint that 0 {@literal &lt;=} X {@literal &lt;=} rect.width and 0 {@literal &lt;=} Y {@literal &lt;=} rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s6WkGNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s6WkWNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s6WkmNqEeWpPIXpP0H8rg" name="randomLoc">
          <ownedComment xmi:id="_5um_uGNqEeWpPIXpP0H8rg">
            <body>Generates a random location point subject to the constraint that 0 {@literal &lt;=} X {@literal &lt;=} dim.width and 0 {@literal &lt;=} Y {@literal &lt;=} dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s6Wk2NqEeWpPIXpP0H8rg" name="dim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s6WlGNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s69oGNqEeWpPIXpP0H8rg" name="randomVel">
          <ownedComment xmi:id="_5unmwGNqEeWpPIXpP0H8rg">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value of the velocity (speed) 
	 * within the bound (inclusive) defined by rect.   Thus the resultant velocity may be negative.   The given Rectangle
	 * should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s69oWNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s69omNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s7ksGNqEeWpPIXpP0H8rg" name="randomDim">
          <ownedComment xmi:id="_5unmwWNqEeWpPIXpP0H8rg">
            <body>Returns a random square Dimension, whose width is maxDim.width/2 {@literal &lt;=} width {@literal &lt;=} maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s7ksWNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s7ksmNqEeWpPIXpP0H8rg" type="_5rokMWNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s8LwGNqEeWpPIXpP0H8rg" name="randomBounds">
          <ownedComment xmi:id="_5unmwmNqEeWpPIXpP0H8rg">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s8LwWNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s8LwmNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s8Lw2NqEeWpPIXpP0H8rg" type="_5qX_8WNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s8y0GNqEeWpPIXpP0H8rg" name="randomChoice">
          <ownedComment xmi:id="_5unmxGNqEeWpPIXpP0H8rg">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0 {@literal &lt;=} x {@literal &lt;=} 1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5s8y0WNqEeWpPIXpP0H8rg" name="x" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s8y0mNqEeWpPIXpP0H8rg" name="y" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s8y02NqEeWpPIXpP0H8rg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5s8y1GNqEeWpPIXpP0H8rg" type="_5sKvsGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5n23cGNqEeWpPIXpP0H8rg" name="ObjectLoader">
        <ownedComment xmi:id="_5unmxWNqEeWpPIXpP0H8rg">
          <body>The object loader for reflection
@author ls53@rice.edu
 *</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uYWMGNqEeWpPIXpP0H8rg" name="load" specification="_5n3egGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uYWMWNqEeWpPIXpP0H8rg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uYWMmNqEeWpPIXpP0H8rg" type="_5s9Z4GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>try {
         Object[] args = new Object[0];
         java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(className).getConstructors();  // get all the constructors
         java.lang.reflect.Constructor&lt;?> c = null;
         for(int i=0;i &lt; cs.length; i++) {  // find the first constructor with the right number of input parameters
             if(args.length == (cs[i]).getParameterTypes().length) {
                 c = cs[i];
                 break;
             }
         }
         
         return (T)c.newInstance(args);   // Call the constructor.   Will throw a null ptr exception if no constructor with the right number of input parameters was found.
     }
     catch(Exception ex) {
         System.err.println(&quot;Class &quot;+className+&quot; failed to load. \nException = \n&quot;+ ex);
         ex.printStackTrace();  // print the stack trace to help in debugging.
         return null;    // Is this really a useful thing to return here?  Is there something better that could be returned?
     }
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5n3egGNqEeWpPIXpP0H8rg" name="load" isStatic="true" method="_5uYWMGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5n3egWNqEeWpPIXpP0H8rg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5s-A8WNqEeWpPIXpP0H8rg" type="_5s9Z4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5n4soGNqEeWpPIXpP0H8rg" name="Randomizer">
        <ownedComment xmi:id="_5unmx2NqEeWpPIXpP0H8rg">
          <body>Utility class that supplies class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5ttn0GNqEeWpPIXpP0H8rg" name="Singleton" isStatic="true" type="_5n4soGNqEeWpPIXpP0H8rg" association="_5vQf8WNqEeWpPIXpP0H8rg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5ttn0WNqEeWpPIXpP0H8rg" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_5rkSwGNqEeWpPIXpP0H8rg" client="_5n4soGNqEeWpPIXpP0H8rg" supplier="_5nxX4GNqEeWpPIXpP0H8rg" contract="_5nxX4GNqEeWpPIXpP0H8rg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uYWM2NqEeWpPIXpP0H8rg" name="randomLoc" specification="_5s-oAGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uYWNGNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uYWNWNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uYWNmNqEeWpPIXpP0H8rg" name="randomLoc" specification="_5s_PEWNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uYWN2NqEeWpPIXpP0H8rg" name="dim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uYWOGNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uY9QGNqEeWpPIXpP0H8rg" name="randomInt" specification="_5n6h0GNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uY9QWNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uY9QmNqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uY9Q2NqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uY9RGNqEeWpPIXpP0H8rg" name="randomDouble" specification="_5n7I4WNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uY9RWNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uY9RmNqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uY9R2NqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uY9SGNqEeWpPIXpP0H8rg" name="randomVel" specification="_5s_2IGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uY9SWNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uY9SmNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uY9S2NqEeWpPIXpP0H8rg" name="randomDim" specification="_5tBEQGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uY9TGNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uY9TWNqEeWpPIXpP0H8rg" type="_5rokMWNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>int x =  randomInt(maxDim.width/2,maxDim.width);
		return new Dimension(x,x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uY9TmNqEeWpPIXpP0H8rg" name="randomBounds" specification="_5tBEQ2NqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uY9T2NqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uY9UGNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uY9UWNqEeWpPIXpP0H8rg" type="_5qX_8WNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uZkUGNqEeWpPIXpP0H8rg" name="randomColor" specification="_5n8XAGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uZkUWNqEeWpPIXpP0H8rg" type="_5qWx0GNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5uZkUmNqEeWpPIXpP0H8rg" name="randomChoice" specification="_5tCSYGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5uZkU2NqEeWpPIXpP0H8rg" name="x" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uZkVGNqEeWpPIXpP0H8rg" name="y" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5uZkVWNqEeWpPIXpP0H8rg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5uZkVmNqEeWpPIXpP0H8rg" type="_5sKvsGNqEeWpPIXpP0H8rg" direction="return"/>
          <language>java</language>
          <body>return (Math.random()&lt;probX) ? x: y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5n5TsGNqEeWpPIXpP0H8rg" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_5n56wGNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5n56wWNqEeWpPIXpP0H8rg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5n56w2NqEeWpPIXpP0H8rg" type="_5n4soGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5n6h0GNqEeWpPIXpP0H8rg" name="randomInt" method="_5uY9QGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5n6h0WNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5n6h0mNqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5n7I4GNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5n7I4WNqEeWpPIXpP0H8rg" name="randomDouble" method="_5uY9RGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5n7I4mNqEeWpPIXpP0H8rg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5n7I42NqEeWpPIXpP0H8rg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5n7v8GNqEeWpPIXpP0H8rg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5n8XAGNqEeWpPIXpP0H8rg" name="randomColor" method="_5uZkUGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5tBrU2NqEeWpPIXpP0H8rg" type="_5qWx0GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s-oAGNqEeWpPIXpP0H8rg" name="randomLoc" method="_5uYWM2NqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5s-oAWNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s_PEGNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s_PEWNqEeWpPIXpP0H8rg" name="randomLoc" method="_5uYWNmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5s_PEmNqEeWpPIXpP0H8rg" name="dim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5s_PE2NqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5s_2IGNqEeWpPIXpP0H8rg" name="randomVel" method="_5uY9SGNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5tAdMGNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tAdMWNqEeWpPIXpP0H8rg" type="_5qXY4GNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tBEQGNqEeWpPIXpP0H8rg" name="randomDim" method="_5uY9S2NqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5tBEQWNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tBEQmNqEeWpPIXpP0H8rg" type="_5rokMWNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tBEQ2NqEeWpPIXpP0H8rg" name="randomBounds" method="_5uY9TmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5tBrUGNqEeWpPIXpP0H8rg" name="rect" type="_5qX_8WNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tBrUWNqEeWpPIXpP0H8rg" name="maxDim" type="_5rokMWNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tBrUmNqEeWpPIXpP0H8rg" type="_5qX_8WNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5tCSYGNqEeWpPIXpP0H8rg" name="randomChoice" method="_5uZkUmNqEeWpPIXpP0H8rg">
          <ownedParameter xmi:id="_5tCSYWNqEeWpPIXpP0H8rg" name="x" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tCSYmNqEeWpPIXpP0H8rg" name="y" type="_5sKvsGNqEeWpPIXpP0H8rg"/>
          <ownedParameter xmi:id="_5tCSY2NqEeWpPIXpP0H8rg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5tCSZGNqEeWpPIXpP0H8rg" type="_5sKvsGNqEeWpPIXpP0H8rg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5s9Z4GNqEeWpPIXpP0H8rg" name="T"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_5vQf8WNqEeWpPIXpP0H8rg" name="" memberEnd="_5vQf8mNqEeWpPIXpP0H8rg _5ttn0GNqEeWpPIXpP0H8rg">
        <ownedEnd xmi:id="_5vQf8mNqEeWpPIXpP0H8rg" name="" type="_5n4soGNqEeWpPIXpP0H8rg" association="_5vQf8WNqEeWpPIXpP0H8rg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5jFsMGNqEeWpPIXpP0H8rg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_5jFsMWNqEeWpPIXpP0H8rg" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_5qfUsGNqEeWpPIXpP0H8rg" name="Timer"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_5kgogGNqEeWpPIXpP0H8rg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_5rtcsWNqEeWpPIXpP0H8rg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5ruDwWNqEeWpPIXpP0H8rg" name="EtchedBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5ruq0WNqEeWpPIXpP0H8rg" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rqZYWNqEeWpPIXpP0H8rg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rrAcGNqEeWpPIXpP0H8rg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rrAcmNqEeWpPIXpP0H8rg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rrngWNqEeWpPIXpP0H8rg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rsOkWNqEeWpPIXpP0H8rg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5rs1oWNqEeWpPIXpP0H8rg" name="UIManager"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5j2hMGNqEeWpPIXpP0H8rg" name="Ellipse2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_5rJcAGNqEeWpPIXpP0H8rg" name="Double"/>
    </packagedElement>
    <profileApplication xmi:id="_440AIGNqEeWpPIXpP0H8rg">
      <eAnnotations xmi:id="_440AIWNqEeWpPIXpP0H8rg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_440nMGNqEeWpPIXpP0H8rg" base_Package="_4vUs8GNqEeWpPIXpP0H8rg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5mMDgGNqEeWpPIXpP0H8rg" base_Element="_5mK1YGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5mMqkGNqEeWpPIXpP0H8rg" base_Element="_5mK1YGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5mNRoGNqEeWpPIXpP0H8rg" name="FunctionalInterface"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5mwrQmNqEeWpPIXpP0H8rg" base_Element="_5mwEMGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5mx5ZGNqEeWpPIXpP0H8rg" base_Element="_5mxSUWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5mygcGNqEeWpPIXpP0H8rg" base_Element="_5mxSUWNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5mygcWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5m7DUmNqEeWpPIXpP0H8rg" base_Element="_5m6cQGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5m7qYGNqEeWpPIXpP0H8rg" base_Element="_5m6cQGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5m7qYWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5nAi4mNqEeWpPIXpP0H8rg" base_Element="_5m_70GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5nBxAWNqEeWpPIXpP0H8rg" base_Element="_5nBJ8GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5nCYEGNqEeWpPIXpP0H8rg" base_Element="_5nBJ8GNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5nCYEWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5nZkcGNqEeWpPIXpP0H8rg" base_Element="_5nY9YGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_5n3egmNqEeWpPIXpP0H8rg" typeParameterDeclarationValue="T" base_Operation="_5n3egGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5n4FkGNqEeWpPIXpP0H8rg" base_Element="_5n3egGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5n4FkWNqEeWpPIXpP0H8rg" base_Element="_5n3egGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5n4FkmNqEeWpPIXpP0H8rg" name="SuppressWarnings">
      <annotationParameters xmi:id="_5n4Fk2NqEeWpPIXpP0H8rg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_5unmxmNqEeWpPIXpP0H8rg" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5n56wmNqEeWpPIXpP0H8rg" base_Element="_5n5TsGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5oAocGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_5oABYGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5oLAgGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_5oKZcGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qUVkGNqEeWpPIXpP0H8rg" base_Element="_5qRSQGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qU8oGNqEeWpPIXpP0H8rg" base_Element="_5qUVkWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qVjsGNqEeWpPIXpP0H8rg" base_Element="_5qU8oWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qWx0WNqEeWpPIXpP0H8rg" base_Element="_5qWx0GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qX_8GNqEeWpPIXpP0H8rg" base_Element="_5qXY4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qX_8mNqEeWpPIXpP0H8rg" base_Element="_5qX_8WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qYnAWNqEeWpPIXpP0H8rg" base_Element="_5qYnAGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qZ1IGNqEeWpPIXpP0H8rg" base_Element="_5qZOEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qf7wGNqEeWpPIXpP0H8rg" base_Element="_5qfUsGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:StyledElement xmi:id="_5qmpcmNqEeWpPIXpP0H8rg" base_Element="_5qmCYGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5qoeoWNqEeWpPIXpP0H8rg" base_Element="_5qoeoGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5qpswmNqEeWpPIXpP0H8rg" base_Element="_5qpswGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5qqT0GNqEeWpPIXpP0H8rg" base_Element="_5qpswGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5qqT0WNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5qtXImNqEeWpPIXpP0H8rg" base_Element="_5qtXIGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5qtXI2NqEeWpPIXpP0H8rg" base_Element="_5qtXIGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5qt-MGNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5qwadGNqEeWpPIXpP0H8rg" base_Element="_5qwacGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5qxBgmNqEeWpPIXpP0H8rg" base_Element="_5qwacWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q16AGNqEeWpPIXpP0H8rg" base_Element="_5q0r4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q2hEGNqEeWpPIXpP0H8rg" base_Element="_5q16AWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q2hEmNqEeWpPIXpP0H8rg" base_Element="_5q2hEWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q3IIGNqEeWpPIXpP0H8rg" base_Element="_5q2hE2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q3IImNqEeWpPIXpP0H8rg" base_Element="_5q3IIWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5q4WQGNqEeWpPIXpP0H8rg" base_Element="_5q3vMGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5q4WQWNqEeWpPIXpP0H8rg" base_Element="_5q3vMGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5q4WQmNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5q6LdGNqEeWpPIXpP0H8rg" base_Element="_5q6LcGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5q6ygmNqEeWpPIXpP0H8rg" base_Element="_5q6LcWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5q-c4GNqEeWpPIXpP0H8rg" base_Element="_5q910GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rBgMWNqEeWpPIXpP0H8rg" base_Element="_5rBgMGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rD8cWNqEeWpPIXpP0H8rg" base_Element="_5rD8cGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rHm0GNqEeWpPIXpP0H8rg" base_Element="_5rG_wGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rJcAWNqEeWpPIXpP0H8rg" base_Element="_5rJcAGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rKqIGNqEeWpPIXpP0H8rg" base_Element="_5rKDEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rKqIWNqEeWpPIXpP0H8rg" base_Element="_5rKDEGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rKqImNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rSl8GNqEeWpPIXpP0H8rg" base_Element="_5rR-4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rUbI2NqEeWpPIXpP0H8rg" base_Element="_5rUbIGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rVCMGNqEeWpPIXpP0H8rg" base_Element="_5rUbIGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rVCMWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rW3YWNqEeWpPIXpP0H8rg" base_Element="_5rWQUGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rXecGNqEeWpPIXpP0H8rg" base_Element="_5rWQUGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rXecWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rYskGNqEeWpPIXpP0H8rg" base_Element="_5rYFgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rYskWNqEeWpPIXpP0H8rg" base_Element="_5rYFgGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rZToGNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rZ6s2NqEeWpPIXpP0H8rg" base_Element="_5rZ6sGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rahwGNqEeWpPIXpP0H8rg" base_Element="_5rZ6sGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rbI0GNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rdlE2NqEeWpPIXpP0H8rg" base_Element="_5rdlEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5reMIGNqEeWpPIXpP0H8rg" base_Element="_5rdlEGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5reMIWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rezM2NqEeWpPIXpP0H8rg" base_Element="_5rezMGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rfaQGNqEeWpPIXpP0H8rg" base_Element="_5rezMGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rfaQWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5rgoY2NqEeWpPIXpP0H8rg" base_Element="_5rgoYGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rhPcGNqEeWpPIXpP0H8rg" base_Element="_5rgoYGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rhPcWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ridk2NqEeWpPIXpP0H8rg" base_Element="_5ridkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5rjEoGNqEeWpPIXpP0H8rg" base_Element="_5ridkGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5rjEoWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5rokMGNqEeWpPIXpP0H8rg" base_Element="_5rn9IGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rpLQGNqEeWpPIXpP0H8rg" base_Element="_5rokMWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rpyUGNqEeWpPIXpP0H8rg" base_Element="_5rpLQWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rqZYGNqEeWpPIXpP0H8rg" base_Element="_5rpyUWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rqZYmNqEeWpPIXpP0H8rg" base_Element="_5rqZYWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rrAcWNqEeWpPIXpP0H8rg" base_Element="_5rrAcGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rrngGNqEeWpPIXpP0H8rg" base_Element="_5rrAcmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rsOkGNqEeWpPIXpP0H8rg" base_Element="_5rrngWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rs1oGNqEeWpPIXpP0H8rg" base_Element="_5rsOkWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rtcsGNqEeWpPIXpP0H8rg" base_Element="_5rs1oWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5ruDwGNqEeWpPIXpP0H8rg" base_Element="_5rtcsWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5ruq0GNqEeWpPIXpP0H8rg" base_Element="_5ruDwWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5rvR4GNqEeWpPIXpP0H8rg" base_Element="_5ruq0WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5ryVMGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_5rxuIGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5sKvsWNqEeWpPIXpP0H8rg" base_Element="_5sKvsGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sT5oGNqEeWpPIXpP0H8rg" base_Element="_5sTSkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sUgsGNqEeWpPIXpP0H8rg" base_Element="_5sTSkGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sUgsWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sVHwWNqEeWpPIXpP0H8rg" base_Element="_5sUgsmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sVHwmNqEeWpPIXpP0H8rg" base_Element="_5sUgsmNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sVHw2NqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sXkAGNqEeWpPIXpP0H8rg" base_Element="_5sW88WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sYLEGNqEeWpPIXpP0H8rg" base_Element="_5sW88WNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sYLEWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sZZMGNqEeWpPIXpP0H8rg" base_Element="_5sYLEmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sb1cGNqEeWpPIXpP0H8rg" base_Element="_5sbOYGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5sb1c2NqEeWpPIXpP0H8rg" base_Element="_5sbOYmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sdDkGNqEeWpPIXpP0H8rg" base_Element="_5sccgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sdqoGNqEeWpPIXpP0H8rg" base_Element="_5sccgGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sdqoWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5sgt8GNqEeWpPIXpP0H8rg" base_Element="_5sgG4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5shVAGNqEeWpPIXpP0H8rg" base_Element="_5sgG4GNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5shVAWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5skYVGNqEeWpPIXpP0H8rg" base_Element="_5skYUGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sk_YGNqEeWpPIXpP0H8rg" base_Element="_5skYUGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sk_YWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5smNhWNqEeWpPIXpP0H8rg" base_Element="_5smNgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5sm0kmNqEeWpPIXpP0H8rg" dimensions="1" base_Element="_5smNgmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5snbomNqEeWpPIXpP0H8rg" base_Element="_5sm0k2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5snbo2NqEeWpPIXpP0H8rg" base_Element="_5sm0k2NqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5snbpGNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5spQ1GNqEeWpPIXpP0H8rg" base_Element="_5spQ0GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sp34GNqEeWpPIXpP0H8rg" base_Element="_5spQ0GNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sp34WNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ss7NGNqEeWpPIXpP0H8rg" base_Element="_5ssUIGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5stiQWNqEeWpPIXpP0H8rg" base_Element="_5ss7MWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5swlk2NqEeWpPIXpP0H8rg" base_Element="_5swlkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Annotations xmi:id="_5sxMoGNqEeWpPIXpP0H8rg" base_Element="_5swlkGNqEeWpPIXpP0H8rg">
    <annotations xmi:id="_5sxMoWNqEeWpPIXpP0H8rg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5s-A8GNqEeWpPIXpP0H8rg" base_Element="_5s9Z4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5tIZAGNqEeWpPIXpP0H8rg" base_Element="_5tHx8GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5tJAEWNqEeWpPIXpP0H8rg" base_Element="_5tJAEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tT_MGNqEeWpPIXpP0H8rg" base_Element="_5tSxEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5tUmQGNqEeWpPIXpP0H8rg" genericsValue="IUpdateStrategyFac, IPaintStrategyFac" base_Element="_5tT_MWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tVNUGNqEeWpPIXpP0H8rg" base_Element="_5tT_MWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tV0YWNqEeWpPIXpP0H8rg" base_Element="_5tV0YGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tXCgWNqEeWpPIXpP0H8rg" base_Element="_5tXCgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tXpkWNqEeWpPIXpP0H8rg" base_Element="_5tXpkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tY3sWNqEeWpPIXpP0H8rg" base_Element="_5tY3sGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tZewGNqEeWpPIXpP0H8rg" base_Element="_5tY3smNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5taF0GNqEeWpPIXpP0H8rg" base_Element="_5tZew2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tas4WNqEeWpPIXpP0H8rg" base_Element="_5taF02NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tbT8WNqEeWpPIXpP0H8rg" base_Element="_5tas5GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tb7AGNqEeWpPIXpP0H8rg" base_Element="_5tbT8mNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tb7A2NqEeWpPIXpP0H8rg" base_Element="_5tb7AWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tdwMGNqEeWpPIXpP0H8rg" base_Element="_5tdJIGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5teXQWNqEeWpPIXpP0H8rg" base_Element="_5teXQGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5tflYWNqEeWpPIXpP0H8rg" base_Element="_5te-UGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tgMcGNqEeWpPIXpP0H8rg" base_Element="_5te-UGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tgMcmNqEeWpPIXpP0H8rg" base_Element="_5tgMcWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tgzgWNqEeWpPIXpP0H8rg" base_Element="_5tgzgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5thakWNqEeWpPIXpP0H8rg" base_Element="_5thakGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tiBoGNqEeWpPIXpP0H8rg" base_Element="_5thakmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tiBo2NqEeWpPIXpP0H8rg" base_Element="_5tiBoWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tiosGNqEeWpPIXpP0H8rg" base_Element="_5tiBpGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tios2NqEeWpPIXpP0H8rg" base_Element="_5tiosWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5tjPwmNqEeWpPIXpP0H8rg" base_Element="_5tjPwGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tj20GNqEeWpPIXpP0H8rg" base_Element="_5tjPwGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tj20mNqEeWpPIXpP0H8rg" base_Element="_5tj20WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tlsAmNqEeWpPIXpP0H8rg" base_Element="_5tlsAGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tmTEWNqEeWpPIXpP0H8rg" base_Element="_5tmTEGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tm6IWNqEeWpPIXpP0H8rg" base_Element="_5tmTEmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5toIQGNqEeWpPIXpP0H8rg" base_Element="_5tnhMmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5toIQmNqEeWpPIXpP0H8rg" base_Element="_5toIQWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tp9cGNqEeWpPIXpP0H8rg" base_Element="_5tpWYGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tp9c2NqEeWpPIXpP0H8rg" base_Element="_5tp9cWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tqkgmNqEeWpPIXpP0H8rg" base_Element="_5tqkgGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Array xmi:id="_5trLkmNqEeWpPIXpP0H8rg" base_Element="_5trLkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tryomNqEeWpPIXpP0H8rg" base_Element="_5tryoWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tsZsWNqEeWpPIXpP0H8rg" base_Element="_5tsZsGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ttn0mNqEeWpPIXpP0H8rg" base_Element="_5ttn0GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5tvdAGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_5tu18mNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tvdAWNqEeWpPIXpP0H8rg" base_Element="_5tu18mNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5twEEGNqEeWpPIXpP0H8rg" base_Element="_5tvdAmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5twEEmNqEeWpPIXpP0H8rg" base_Element="_5twEEWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5twrIWNqEeWpPIXpP0H8rg" base_Element="_5twEE2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5txSMWNqEeWpPIXpP0H8rg" base_Element="_5twrImNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5tx5QGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem" base_Element="_5txSMmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tygUGNqEeWpPIXpP0H8rg" base_Element="_5txSMmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tzHYGNqEeWpPIXpP0H8rg" base_Element="_5tygUWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tzucWNqEeWpPIXpP0H8rg" base_Element="_5tzHYWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t0VgGNqEeWpPIXpP0H8rg" base_Element="_5tzucmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5t08kGNqEeWpPIXpP0H8rg" genericsValue="TStrategyDropListItem" base_Element="_5t0VgWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t08kmNqEeWpPIXpP0H8rg" base_Element="_5t0VgWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t1joWNqEeWpPIXpP0H8rg" base_Element="_5t08k2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t2KsGNqEeWpPIXpP0H8rg" base_Element="_5t1jomNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t2Ks2NqEeWpPIXpP0H8rg" base_Element="_5t2KsWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t2xwWNqEeWpPIXpP0H8rg" base_Element="_5t2KtGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t3Y0GNqEeWpPIXpP0H8rg" base_Element="_5t2xwmNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t3Y02NqEeWpPIXpP0H8rg" base_Element="_5t3Y0WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t3_4GNqEeWpPIXpP0H8rg" base_Element="_5t3Y1GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t3_42NqEeWpPIXpP0H8rg" base_Element="_5t3_4WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t4m8GNqEeWpPIXpP0H8rg" base_Element="_5t3_5GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t4m82NqEeWpPIXpP0H8rg" base_Element="_5t4m8WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Generics xmi:id="_5t5OAGNqEeWpPIXpP0H8rg" genericsValue="TPaintDropListItem" base_Element="_5t4m9GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t5OAmNqEeWpPIXpP0H8rg" base_Element="_5t4m9GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u5TkmNqEeWpPIXpP0H8rg" base_Element="_5u5TkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u7IwGNqEeWpPIXpP0H8rg" base_Element="_5u6hsGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u7v0GNqEeWpPIXpP0H8rg" base_Element="_5u7IwWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u8W4GNqEeWpPIXpP0H8rg" base_Element="_5u7v0WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u898mNqEeWpPIXpP0H8rg" base_Element="_5u898GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u9lAmNqEeWpPIXpP0H8rg" base_Element="_5u9lAGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u-MEGNqEeWpPIXpP0H8rg" base_Element="_5u9lA2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u-zIGNqEeWpPIXpP0H8rg" base_Element="_5u-MEWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u-zI2NqEeWpPIXpP0H8rg" base_Element="_5u-zIWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5u_aMmNqEeWpPIXpP0H8rg" base_Element="_5u_aMGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vABQGNqEeWpPIXpP0H8rg" base_Element="_5u_aM2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vAoUGNqEeWpPIXpP0H8rg" base_Element="_5vABQWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vBPYGNqEeWpPIXpP0H8rg" base_Element="_5vAoUWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vDEkGNqEeWpPIXpP0H8rg" base_Element="_5vBPYWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vDroGNqEeWpPIXpP0H8rg" base_Element="_5vDEkWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vESsGNqEeWpPIXpP0H8rg" base_Element="_5vDroWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vGH4GNqEeWpPIXpP0H8rg" base_Element="_5vE5wGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vGu8GNqEeWpPIXpP0H8rg" base_Element="_5vGH4WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vHWAGNqEeWpPIXpP0H8rg" base_Element="_5vGu8WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vHWA2NqEeWpPIXpP0H8rg" base_Element="_5vHWAWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vH9EmNqEeWpPIXpP0H8rg" base_Element="_5vH9EGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vIkIGNqEeWpPIXpP0H8rg" base_Element="_5vH9E2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vJLMGNqEeWpPIXpP0H8rg" base_Element="_5vIkIWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vJLM2NqEeWpPIXpP0H8rg" base_Element="_5vJLMWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vJyQGNqEeWpPIXpP0H8rg" base_Element="_5vJLNGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vJyQ2NqEeWpPIXpP0H8rg" base_Element="_5vJyQWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vKZUmNqEeWpPIXpP0H8rg" base_Element="_5vKZUGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vLAYGNqEeWpPIXpP0H8rg" base_Element="_5vKZU2NqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vLncGNqEeWpPIXpP0H8rg" base_Element="_5vLAYWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vNcoGNqEeWpPIXpP0H8rg" base_Element="_5vLncWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vODsGNqEeWpPIXpP0H8rg" base_Element="_5vNcoWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vQf8GNqEeWpPIXpP0H8rg" base_Element="_5vODsWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vRHAGNqEeWpPIXpP0H8rg" base_Element="_5vQf8WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vUKUGNqEeWpPIXpP0H8rg" base_Element="_5vRHAWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vUxYGNqEeWpPIXpP0H8rg" base_Element="_5vUKUWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vctMGNqEeWpPIXpP0H8rg" base_Element="_5vWmkGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vdUQGNqEeWpPIXpP0H8rg" base_Element="_5vctMWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vd7UGNqEeWpPIXpP0H8rg" base_Element="_5vdUQWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5veiYGNqEeWpPIXpP0H8rg" base_Element="_5vd7UWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vfJcGNqEeWpPIXpP0H8rg" base_Element="_5veiYWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vfwgGNqEeWpPIXpP0H8rg" base_Element="_5vfJcWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vfwg2NqEeWpPIXpP0H8rg" base_Element="_5vfwgWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vgXkGNqEeWpPIXpP0H8rg" base_Element="_5vfwhGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vg-oGNqEeWpPIXpP0H8rg" base_Element="_5vgXkWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vhlsGNqEeWpPIXpP0H8rg" base_Element="_5vg-oWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5viMwGNqEeWpPIXpP0H8rg" base_Element="_5vhlsWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5viz0GNqEeWpPIXpP0H8rg" base_Element="_5viMwWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vkB8GNqEeWpPIXpP0H8rg" base_Element="_5vja4GNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vkpAGNqEeWpPIXpP0H8rg" base_Element="_5vkB8WNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vlQEGNqEeWpPIXpP0H8rg" base_Element="_5vkpAWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vl3IGNqEeWpPIXpP0H8rg" base_Element="_5vlQEWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vmeMGNqEeWpPIXpP0H8rg" base_Element="_5vl3IWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vmeM2NqEeWpPIXpP0H8rg" base_Element="_5vmeMWNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Reference xmi:id="_5vnFQmNqEeWpPIXpP0H8rg" base_Element="_5vnFQGNqEeWpPIXpP0H8rg"/>
  <UMLLabProfile:Patch xmi:id="__bqpIGNqEeWpPIXpP0H8rg" base_Element="_5mRjEWNqEeWpPIXpP0H8rg" patchText="@@ -1353,16 +1353,610 @@&#xA; );%0A    %7D&#xA;+;%0A    %0A    /**%0A     * Paints the host onto the given Graphics context. The image %0A     * is translated, scaled and rotated as determined by the given %0A     * affine transformation. This method is intended to be called %0A     * either by a class's (or superclass's) own paint method or %0A     * by another paint strategy who is sharing the affine transform. %0A     * This allows the same transformation to be shared amongst %0A     * multiple paint strategies.%0A     * @param g The graphics context to draw upon.%0A     * @param host The host ball.%0A     * @param at The affine transform to use.%0A     */%0A&#xA;     @Ove&#xA;" conflicting="false"/>
</xmi:XMI>
