<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_60) on Thu Sep 17 20:29:31 CDT 2015 -->
<title>BallWorldModel</title>
<meta name="date" content="2015-09-17">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="BallWorldModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/ABall.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/BallWorldModel.Dispatcher.html" title="class in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallWorldModel.html" target="_top">Frames</a></li>
<li><a href="BallWorldModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class BallWorldModel" class="title">Class BallWorldModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.BallWorldModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">BallWorldModel</span>
extends java.lang.Object</pre>
<div class="block">The model in the ball world application.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.Dispatcher.html" title="class in model">BallWorldModel.Dispatcher</a></span></code>
<div class="block">The dispatcher class that dispatches update calls of model to balls.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#Z:Z_errorStrategyFac">_errorStrategyFac</a></span></code>
<div class="block">A UpdateStrategy factory for a beeping error strategy that beeps the speaker every 25 updates.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../model/BallWorldModel.Dispatcher.html" title="class in model">BallWorldModel.Dispatcher</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#dispatcher">dispatcher</a></span></code>
<div class="block">The dispatcher that dispatches update() calls to all balls.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../util/IRandomizer.html" title="interface in util">IRandomizer</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#randomizer">randomizer</a></span></code>
<div class="block">The randomizer that generates ball properties randomly.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../strategy/SwitcherStrategy.html" title="class in strategy">SwitcherStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#switcherBallStrategy">switcherBallStrategy</a></span></code>
<div class="block">The switchable strategy that switcher balls will use to update their states.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#TIME_SLICE_MILLS">TIME_SLICE_MILLS</a></span></code>
<div class="block">The timer period in milliseconds to update the model.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private javax.swing.Timer</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#timer">timer</a></span></code>
<div class="block">The timer that updates the model periodically.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../view/IViewUpdateAdapter.html" title="interface in view">IViewUpdateAdapter</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#viewAdapter">viewAdapter</a></span></code>
<div class="block">The View adapter used to request view update.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#BallWorldModel-view.IViewUpdateAdapter-">BallWorldModel</a></span>(<a href="../view/IViewUpdateAdapter.html" title="interface in view">IViewUpdateAdapter</a>&nbsp;viewAdapter)</code>
<div class="block">Construct a model with given view adapter.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#addBall-strategy.IUpdateStrategy-javax.swing.JComponent-">addBall</a></span>(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy,
       javax.swing.JComponent&nbsp;canvas)</code>
<div class="block">Add a ball with given update strategy which cannot be changed thereafter.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#addSwitcherBall-javax.swing.JComponent-">addSwitcherBall</a></span>(javax.swing.JComponent&nbsp;canvas)</code>
<div class="block">Add a ball with the switchable strategy to the model.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#clearBalls--">clearBalls</a></span>()</code>
<div class="block">Clear all balls in the model.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#combineStrategyFacs-strategy.IStrategyFac-strategy.IStrategyFac-">combineStrategyFacs</a></span>(<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac1,
                   <a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac2)</code>
<div class="block">Combine two update strategy Factories together that creates UpdateStrategy having a combination
 of behaviors of the two strategies that the factories correspond to.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../strategy/SwitcherStrategy.html" title="class in strategy">SwitcherStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#getSwitcherStrategy--">getSwitcherStrategy</a></span>()</code>
<div class="block">Get the switchable strategy that is currently used by all switcher balls in the model.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>private <a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#loadStrategy-java.lang.String-">loadStrategy</a></span>(java.lang.String&nbsp;className)</code>
<div class="block">Dynamically load an IUpdateStrategy instance of the given type.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#makeStrategyFac-java.lang.String-">makeStrategyFac</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">Make a StrategyFac object that creates strategy instances of the the given type</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#normalizeStrategyName-java.lang.String-">normalizeStrategyName</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">Convert the strategy name passed from the view to the corresponding strategy class name
 under the strategy package.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#setSwitcherStrategy-strategy.IUpdateStrategy-">setSwitcherStrategy</a></span>(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy)</code>
<div class="block">Set the switchable strategy in current model that all switcher balls use.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#start--">start</a></span>()</code>
<div class="block">Start the model.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallWorldModel.html#update-java.awt.Graphics-">update</a></span>(java.awt.Graphics&nbsp;g)</code>
<div class="block">Update all balls in the model.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="Z:Z_errorStrategyFac">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_errorStrategyFac</h4>
<pre>private&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a> _errorStrategyFac</pre>
<div class="block">A UpdateStrategy factory for a beeping error strategy that beeps the speaker every 25 updates.
 Either use the _errorStrategyFac variable directly if you need a factory that makes an error 
 strategy, or call _errorStrategyFac.make() to create an instance of a beeping error strategy.</div>
</li>
</ul>
<a name="dispatcher">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dispatcher</h4>
<pre>private final&nbsp;<a href="../model/BallWorldModel.Dispatcher.html" title="class in model">BallWorldModel.Dispatcher</a> dispatcher</pre>
<div class="block">The dispatcher that dispatches update() calls to all balls.</div>
</li>
</ul>
<a name="randomizer">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>randomizer</h4>
<pre>private final&nbsp;<a href="../util/IRandomizer.html" title="interface in util">IRandomizer</a> randomizer</pre>
<div class="block">The randomizer that generates ball properties randomly.</div>
</li>
</ul>
<a name="switcherBallStrategy">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switcherBallStrategy</h4>
<pre>private&nbsp;<a href="../strategy/SwitcherStrategy.html" title="class in strategy">SwitcherStrategy</a> switcherBallStrategy</pre>
<div class="block">The switchable strategy that switcher balls will use to update their states.</div>
</li>
</ul>
<a name="TIME_SLICE_MILLS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TIME_SLICE_MILLS</h4>
<pre>private static final&nbsp;int TIME_SLICE_MILLS</pre>
<div class="block">The timer period in milliseconds to update the model.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#model.BallWorldModel.TIME_SLICE_MILLS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="timer">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timer</h4>
<pre>private&nbsp;javax.swing.Timer timer</pre>
<div class="block">The timer that updates the model periodically.</div>
</li>
</ul>
<a name="viewAdapter">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>viewAdapter</h4>
<pre>private&nbsp;<a href="../view/IViewUpdateAdapter.html" title="interface in view">IViewUpdateAdapter</a> viewAdapter</pre>
<div class="block">The View adapter used to request view update.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BallWorldModel-view.IViewUpdateAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BallWorldModel</h4>
<pre>public&nbsp;BallWorldModel(<a href="../view/IViewUpdateAdapter.html" title="interface in view">IViewUpdateAdapter</a>&nbsp;viewAdapter)</pre>
<div class="block">Construct a model with given view adapter.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>viewAdapter</code> - The view adapter used to communicate with view.</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addBall-strategy.IUpdateStrategy-javax.swing.JComponent-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addBall</h4>
<pre>public&nbsp;void&nbsp;addBall(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy,
                    javax.swing.JComponent&nbsp;canvas)</pre>
<div class="block">Add a ball with given update strategy which cannot be changed thereafter.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategy</code> - the strategy to update the state of the ball created</dd>
<dd><code>canvas</code> - the canvas where the ball will be painted</dd>
</dl>
</li>
</ul>
<a name="addSwitcherBall-javax.swing.JComponent-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addSwitcherBall</h4>
<pre>public&nbsp;void&nbsp;addSwitcherBall(javax.swing.JComponent&nbsp;canvas)</pre>
<div class="block">Add a ball with the switchable strategy to the model.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>canvas</code> - The canvas where the ball will be moving and painted</dd>
</dl>
</li>
</ul>
<a name="clearBalls--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearBalls</h4>
<pre>public&nbsp;void&nbsp;clearBalls()</pre>
<div class="block">Clear all balls in the model.</div>
</li>
</ul>
<a name="combineStrategyFacs-strategy.IStrategyFac-strategy.IStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineStrategyFacs</h4>
<pre>public&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;combineStrategyFacs(<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac1,
                                        <a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac2)</pre>
<div class="block">Combine two update strategy Factories together that creates UpdateStrategy having a combination
 of behaviors of the two strategies that the factories correspond to.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stratFac1</code> - the first Strategy Factory to combine</dd>
<dd><code>stratFac2</code> - the second Strategy Factory to combine</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A IStrategyFac that can make instances of multistrategy, a combination of two strategies</dd>
</dl>
</li>
</ul>
<a name="getSwitcherStrategy--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSwitcherStrategy</h4>
<pre>public&nbsp;<a href="../strategy/SwitcherStrategy.html" title="class in strategy">SwitcherStrategy</a>&nbsp;getSwitcherStrategy()</pre>
<div class="block">Get the switchable strategy that is currently used by all switcher balls in the model.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the switchable strategy</dd>
</dl>
</li>
</ul>
<a name="loadStrategy-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadStrategy</h4>
<pre>private&nbsp;<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;loadStrategy(java.lang.String&nbsp;className)</pre>
<div class="block">Dynamically load an IUpdateStrategy instance of the given type.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>className</code> - the type of update strategy to load</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A concrete IUpdateStrategy instance of given type</dd>
</dl>
</li>
</ul>
<a name="makeStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeStrategyFac</h4>
<pre>public&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;makeStrategyFac(java.lang.String&nbsp;strategyName)</pre>
<div class="block">Make a StrategyFac object that creates strategy instances of the the given type</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - strategy type</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A StrategyFac object</dd>
</dl>
</li>
</ul>
<a name="normalizeStrategyName-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>normalizeStrategyName</h4>
<pre>private&nbsp;java.lang.String&nbsp;normalizeStrategyName(java.lang.String&nbsp;strategyName)</pre>
<div class="block">Convert the strategy name passed from the view to the corresponding strategy class name
 under the strategy package.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - the strategy name without Strategy suffix and strategy. package prefix</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the full strategy class name under strategy package</dd>
</dl>
</li>
</ul>
<a name="setSwitcherStrategy-strategy.IUpdateStrategy-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSwitcherStrategy</h4>
<pre>public&nbsp;void&nbsp;setSwitcherStrategy(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy)</pre>
<div class="block">Set the switchable strategy in current model that all switcher balls use.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategy</code> - the new update strategy for all switcher balls</dd>
</dl>
</li>
</ul>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">Start the model.</div>
</li>
</ul>
<a name="update-java.awt.Graphics-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(java.awt.Graphics&nbsp;g)</pre>
<div class="block">Update all balls in the model.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - the graphics object used to paint balls</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/ABall.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/BallWorldModel.Dispatcher.html" title="class in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallWorldModel.html" target="_top">Frames</a></li>
<li><a href="BallWorldModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
